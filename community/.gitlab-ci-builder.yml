build_oci:
  extends: .common
  stage: build
  before_script:
    - docker login docker.canopsis.net -u oci_build -p $DOCKER_AUTH_CI_BUILDER
  after_script:
    - docker logout docker.canopsis.net
  script:
    - make -C ${OCI_PATH_1} docker-images VERSION=$CI_COMMIT_TAG
    - make -C ${OCI_PATH_2} docker-images VERSION=$CI_COMMIT_TAG
    - docker images --format="{{.Repository}}:{{.Tag}}" | grep docker.canopsis.net/docker/community | grep $CI_COMMIT_MESSAGE | xargs -I {} echo docker push {}
  rules:
    - if: $CI_COMMIT_TAG =~ '/^[0-9]+\.[0-9]+(\.[0-9]+)?$/' && $CI_COMMIT_TAG !~ '/(rc([0-9])?|preview([0-9])?)/'

build_oci_dev:
  extends: .common
  stage: build
  before_script:
    - docker login docker.canopsis.net -u oci_build -p $DOCKER_AUTH_CI_BUILDER
  after_script:
    - docker logout docker.canopsis.net
  script:
    - make -C ${OCI_PATH_1} docker-images VERSION=$CI_COMMIT_TAG
    - make -C ${OCI_PATH_2} docker-images VERSION=$CI_COMMIT_TAG
    - >- 
      for i in $(docker images --format="{{.Repository}}:{{.Tag}}" |
      grep docker.canopsis.net/docker/community |
      grep $CI_COMMIT_TAG); do docker image tag $i $(echo $i |
      sed 's/.net\/docker\/community/.net\/docker\/develop-community/g') ; done
      && docker images --format="{{.Repository}}:{{.Tag}}" |
      grep develop-community |
      grep $CI_COMMIT_TAG |
      xargs -I {} docker push {}
  rules:
    - if: $CI_COMMIT_TAG =~ '/^[0-9]+\.[0-9]+(\.[0-9]+)?(-)?(rc([0-9])?|preview([0-9])?)/'

build_rpm_dev:
  extends: .common
  stage: build
  variables:
    RPM_URL: https://nexus.canopsis.net/service/rest/v1/components?repository=canopsis-develop
  before_script:
    - docker login docker.capensis.fr -u oci_build -p $RPM_REGISTRY_AUTH
  after_script:
    - docker logout docker.capensis.fr
  script:
    - make -C $RPM_PATH VERSION=$(printf $CI_COMMIT_TAG | sed 's/-/~/g') BUILD_TARGET=el8
    - cd $RPM_PATH_OUTPUT
    - >-
      for rpm_file in $(find . -type f -name "*x86_64.rpm" -printf "%f\n") ;
      do
      echo $rpm_file;
      curl -v -X "POST"
      -u "ci-builder:$RPM_CI_BUILDER"
      -H "accept: application/json"
      -H "Content-Type: multipart/form-data"
      -H "NX-ANTI-CSRF-TOKEN: $RPM_CSRF_TOKEN"
      -F "yum.directory=el8/$CANOPSIS_EDITION/x86_64/Packages/"
      -F "yum.asset=@${rpm_file};type=application/x-rpm"
      -F "yum.asset.filename=${rpm_file}"
      "$RPM_URL" ;
      done
    - >-
      for src_rpm_file in $(find . -type f -name "*src.rpm" -printf "%f\n") ;
      do
      echo $src_rpm_file;
      curl -v -X "POST"
      -u "ci-builder:$RPM_CI_BUILDER"
      -H "accept: application/json"
      -H "Content-Type: multipart/form-data"
      -H "NX-ANTI-CSRF-TOKEN: $RPM_CSRF_TOKEN"
      -F "yum.directory=el8/$CANOPSIS_EDITION/src/x86_64/Packages/"
      -F "yum.asset=@${src_rpm_file};type=application/x-rpm"
      -F "yum.asset.filename=${src_rpm_file}"
      "$RPM_URL" ;
      done
  rules:
    - if: $CI_COMMIT_TAG =~ '/^[0-9]+\.[0-9]+(\.[0-9]+)?(-)?(rc([0-9])?|preview([0-9])?)/'

build_rpm:
  extends: .common
  stage: build
  variables:
    RPM_URL: https://nexus.canopsis.net/service/rest/v1/components?repository=canopsis
  before_script:
    - docker login docker.capensis.fr -u oci_build -p $RPM_REGISTRY_AUTH
  after_script:
    - docker logout docker.capensis.fr
  script:
    - make -C $RPM_PATH VERSION=$(printf $CI_COMMIT_TAG | sed 's/-/~/g') BUILD_TARGET=el8
    - cd $RPM_PATH_OUTPUT
    - >-
      for rpm_file in $(find . -type f -name "*x86_64.rpm" -printf "%f\n") ;
      do
      echo $rpm_file;
      curl -v -X "POST"
      -u "ci-builder:$RPM_CI_BUILDER"
      -H "accept: application/json"
      -H "Content-Type: multipart/form-data"
      -H "NX-ANTI-CSRF-TOKEN: $RPM_CSRF_TOKEN"
      -F "yum.directory=el8/$CANOPSIS_EDITION/x86_64/Packages/"
      -F "yum.asset=@${rpm_file};type=application/x-rpm"
      -F "yum.asset.filename=${rpm_file}"
      "$RPM_URL" ;
      done
    - >-
      for src_rpm_file in $(find . -type f -name "*src.rpm" -printf "%f\n") ;
      do
      echo $src_rpm_file;
      curl -v -X "POST"
      -u "ci-builder:$RPM_CI_BUILDER"
      -H "accept: application/json"
      -H "Content-Type: multipart/form-data"
      -H "NX-ANTI-CSRF-TOKEN: $RPM_CSRF_TOKEN"
      -F "yum.directory=el8/$CANOPSIS_EDITION/src/x86_64/Packages/"
      -F "yum.asset=@${src_rpm_file};type=application/x-rpm"
      -F "yum.asset.filename=${src_rpm_file}"
      "$RPM_URL" ;
      done
  rules:
    - if: $CI_COMMIT_TAG =~ '/^[0-9]+\.[0-9]+(\.[0-9]+)?$/' && $CI_COMMIT_TAG !~ '/(rc([0-9])?|preview([0-9])?)/'

#!/bin/bash

NAME="mongodb-conf"
VERSION=0.7
RELEASE=0
DESCRIPTION=""
REQUIRES="canohome python canolibs canotools mongodb"

NO_ARCH=true
NO_DIST=true
NO_DISTVERS=true

function pre_install(){
	echo "Pre-install $NAME $VERSION-$RELEASE ..."
	check_code $? 
}

function post_install(){
	echo "Post-install $NAME $VERSION-$RELEASE ..."

	launch_cmd 0 service mongodb stop
		
	rm /tmp/mongodb-*.sock &> /dev/null || true
	
	#launch_cmd 1 service mongodb start
	launch_cmd 1 mongod -f $PREFIX/etc/mongodb.conf --nojournal --noprealloc --fork

	echo -n "Safe wait ..."
	STATE=1
	TRY=0

	while [ $STATE -ne 0 ]
	do
		if [ $TRY -eq 10 ]
		then
			break
		fi

		sleep 1

		echo "show dbs" | mongo &> /dev/null
		STATE=$?
		TRY=$((TRY + 1))

		echo -n "."
	done

	echo
	check_code $STATE "Failed to join MongoDB"

	#check if db already exist
	if [ -f  $PREFIX/var/lib/mongodb/canopsis.ns ]
	then
		launch_cmd 1 python $PREFIX/opt/mongodb/filldb.py update
	else
		while true
		do
			read -s -p "MongoDB password for admin: " adminpass
			echo ""

			read -s -p "Confirm password: " confirm
			echo ""

			if [ "$adminpass" == "$confirm" ]
			then
				break
			else
				echo "Passwords doesn't match"
			fi
		done

		read -p "MongoDB common user: " cpsuser

		while true
		do
			read -s -p "MongoDB password for $cpsuser: " cpspass
			echo ""

			read -s -p "Confirm password: " confirm
			echo ""

			if [ "$cpspass" == "$confirm" ]
			then
				break
			else
				echo "Passwords doesn't match"
			fi
		done

		echo " + Create admin user ..."
		su - $HUSER -c "$PREFIX/bin/mongo admin --eval \"db.createUser({user: 'admin', pwd: '$adminpass', roles: ['readWriteAnyDatabase', 'userAdminAnyDatabase', 'dbAdminAnyDatabase']})\""

		echo " + Create $cpsuser user ..."
		su - $HUSER -c "$PREFIX/bin/mongo -u admin -p $adminpass --authenticationDatabase admin canopsis --eval \"db.createUser({user: '$cpsuser', pwd: '$cpspass', roles: ['dbOwner']})\""

		su - $HUSER -c "$PREFIX/bin/initool set $PREFIX/etc/cstorage.conf master userid $cpsuser"
		su - $HUSER -c "$PREFIX/bin/initool set $PREFIX/etc/cstorage.conf master password $cpspass"

		launch_cmd 1 python $PREFIX/opt/mongodb/filldb.py init
	fi
	
	#launch_cmd 1 service mongodb stop
	launch_cmd 1 mongod -f etc/mongodb.conf --shutdown 
	
	check_code $? "Impossible to init mongoDB ..."
}
	
function pre_remove(){
	echo "Pre-remove $NAME $VERSION-$RELEASE ..."
	su - $HUSER -c "service mongodb stop"
}

function post_remove(){
	echo "Post-remove $NAME $VERSION-$RELEASE ..."
}

function pre_update(){
	echo "Pre-update $NAME $VERSION-$RELEASE ..."
}

function post_update(){
	echo "Post-update $NAME $VERSION-$RELEASE ..."
	su - $HUSER -c "service mongodb start"
	sleep 2

	launch_cmd 1 python $PREFIX/opt/mongodb/filldb.py update
	check_code $?
}

function purge(){
	echo "Purge $NAME $VERSION-$RELEASE ..."
	check_code $?
}

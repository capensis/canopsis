#!/bin/bash

function do_start_backend(){
	echo -n "Starting backend: "
	
	service rabbitmq-server start > /dev/null 2>&1 &
	rabbitmq=$!

	service mongodb start > /dev/null 2>&1 &
	mongodb=$!

	service redis-server start > /dev/null 2>&1 &
	redis=$!

	echo -n "rabbitmq-server..."
	wait $rabbitmq
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "mongodb..."
	wait $mongodb
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "redis-server..."
	wait $redis
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo "   "
	fi
}

function do_start_middleware(){
	echo -n "Starting middleware: "

	service collectd start > /dev/null 2>&1 &
	collectd=$!

	(service apsd start && service celeryd start) > /dev/null 2>&1 &
	celeryd=$!

	service amqp2engines start > /dev/null 2>&1 &
	engines=$!

	echo -n "collectd..."
	wait $collectd
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "celeryd..."
	wait $celeryd
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "engines..."
	wait $engines
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo "   "
	fi
}

function do_start_frontend(){
	echo -n "Starting frontend: "

	service webserver start > /dev/null 2>&1 &
	webserver=$!

	service websocket start > /dev/null 2>&1 &
	websocket=$!

	echo -n "webserver..."
	wait $webserver
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "websocket..."
	wait $websocket
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo "   "
	fi
}

function do_start(){
	do_start_backend || exit 1
	do_start_middleware || exit 1
	do_start_frontend || exit 1
}

function do_stop_backend(){
	echo -n "Stopping backend: "
	
	service rabbitmq-server stop > /dev/null 2>&1 &
	rabbitmq=$!

	service mongodb stop > /dev/null 2>&1 &
	mongodb=$!

	service redis-server stop > /dev/null 2>&1 &
	redis=$!

	echo -n "rabbitmq-server..."
	wait $rabbitmq
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "mongodb..."
	wait $mongodb
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "redis-server..."
	wait $redis
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo "   "
	fi
}

function do_stop_middleware(){
	echo -n "Stopping middleware: "

	service collectd stop > /dev/null 2>&1 &
	collectd=$!

	(service apsd stop && service celeryd stop) > /dev/null 2>&1 &
	celeryd=$!

	service amqp2engines stop > /dev/null 2>&1 &
	engines=$!

	echo -n "collectd..."
	wait $collectd
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "celeryd..."
	wait $celeryd
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "engines..."
	wait $engines
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo "   "
	fi
}

function do_stop_frontend(){
	echo -n "Stopping frontend: "

	service webserver stop > /dev/null 2>&1 &
	webserver=$!

	service websocket stop > /dev/null 2>&1 &
	websocket=$!

	echo -n "webserver..."
	wait $webserver
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo -n ", "
	fi

	echo -n "websocket..."
	wait $websocket
	echo -e -n "\b\b\b"

	if [ $? -ne 0 ]
	then
		echo " KO"
		exit 1
	else
		echo "   "
	fi
}

function do_stop(){
	do_stop_frontend || exit 1
	do_stop_middleware || exit 1
	do_stop_backend || exit 1

	supervisorctl shutdown || exit 1
}

function do_restart(){
	do_stop || exit 1
	do_start || exit 1
}

case "$1" in
	start) do_start ;;
	stop) do_stop ;;
	restart) do_restart ;;

	*)
		echo "Usage: hypcontrol start|stop|restart"
		exit 1
		;;
esac
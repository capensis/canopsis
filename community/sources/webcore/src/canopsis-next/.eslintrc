{
  "root": true,
  "extends": [
    "plugin:vue/strongly-recommended",
    "@vue/airbnb",
    "plugin:vuetify/base"
  ],

  "parserOptions": {
    "parser": "@babel/eslint-parser",
    "sourceType": "module"
  },

  "plugins": [
    "vue",
    "import-newlines"
  ],
  "globals": {
    "sel": true
  },
  "rules": {
    "object-curly-newline": "off",
    "arrow-parens": [2, "as-needed", { "requireForBlockBody": true }],
    "default-case": "off",
    "max-len": ["error", { "code": 120, "ignoreStrings": true, "ignoreTemplateLiterals": true, "ignoreRegExpLiterals": true }],
    "no-param-reassign": ["error", { "props": true, "ignorePropertyModificationsFor": ["state", "config", "acc", "Vue", "browser", "wrapper"] }],
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-return-assign": "off",
    "no-underscore-dangle": ["error", { "allow": ["_id", "_embedded", "_t", "_filter", "type_", "_original"] }],
    "no-bitwise": ["error", { "allow": ["&"] }],
    "no-continue": "off",
    "no-cond-assign": "off",
    "no-promise-executor-return": "off",
    "default-param-last": "off",
    "no-restricted-exports": "off",
    "prefer-regex-literals": ["error", { "disallowRedundantWrapping": true }],
    "vue/multi-word-component-names": "off",
    "vue/no-use-computed-property-like-method": "off",
    "vue/component-definition-name-casing": "off",
    "vue/require-default-prop": "off",
    "vue/require-prop-types": "error",
    "vue/order-in-components": ["error", {
      "order": [
        "el",
        "name",
        "parent",
        "functional",
        "$_veeValidate",
        ["provide", "inject"],
        ["delimiters", "comments"],
        ["components", "directives", "filters"],
        "extends",
        "mixins",
        "inheritAttrs",
        "model",
        ["props", "propsData"],
        "data",
        "computed",
        "watch",
        "LIFECYCLE_HOOKS",
        "methods",
        ["template", "render"],
        "renderError"
      ]
    }],
    "import/no-cycle": "error",
    "import/prefer-default-export": "off",
    "import/order": ["error", {
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
      "pathGroups": [
        {
          "pattern": "@/+(config|constants)",
          "group": "internal",
          "position": "before"
        },
        {
          "pattern": "@/plugins/**",
          "group": "internal",
          "position": "before"
        },
        {
          "pattern": "@/services/**",
          "group": "internal",
          "position": "before"
        },
        {
          "pattern": "@/+(store|i18n|filters|router)",
          "group": "internal",
          "position": "before"
        },
        {
          "pattern": "@/store/**",
          "group": "internal",
          "position": "before"
        },
        {
          "pattern": "@/helpers/**",
          "group": "internal",
          "position": "before"
        },
        {
          "pattern": "@/mixins/**",
          "group": "internal",
          "position": "before"
        },
        {
          "pattern": "@/components/**",
          "group": "internal",
          "position": "before"
        }
      ],
      "newlines-between": "always"
    }],
    "no-unused-expressions": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "Program > VariableDeclaration CallExpression[callee.name='generateShallowRenderer']",
        "message": "generateShallowRenderer should be used inside describe."
      },
      {
        "selector": "Program > VariableDeclaration CallExpression[callee.name='generateRenderer']",
        "message": "generateRenderer should be used inside describe."
      },
      {
        "selector": "ImportDeclaration[source.value=/form\\u002Fpartials/]",
        "message": "All fields should be moved inside `/form/fields/`."
      },
      {
        "selector": "ImportDeclaration[source.value=/\\u002Fpartial\\u002F/]",
        "message": "`partial` folder deprecated. Please, rename to `partials`."
      },
      {
        "selector": "ImportDeclaration[source.value=/\\u002Ffield\\u002F/]",
        "message": "`field` folder deprecated. Please, rename to `field`."
      }
    ],
    "import-newlines/enforce": [
      "error",
      {
        "items": 4,
        "max-len": 120,
        "semi": true
      }
    ]
  }
}

[RabbitMQ]

# If you need to set extra arguments specific to the server implementation of
# exchange, uncomments args in section [[RabbitMQ.exchanges]] and add the
# required values. For more information see the documentation of the used
# rabbitMQ library and the documentation of our version of RabbitMQ.

# If you need to set extra arguments specific to the server implementation of
# queue, uncomments args in section [[RabbitMQ.queues]] and add the
# required values. For more information see the documentation of the used
# rabbitMQ library and the documentation of our version of RabbitMQ.

# If you need to set extra arguments specific to the server implementation for
# queue binding, uncomments args in section [[RabbitMQ.queues.bind]] and add the
# required values. For more information see the documentation of the
# used rabbitMQ library and the documentation of our version of RabbitMQ.

[[RabbitMQ.exchanges]]
name = "canopsis.events"
kind = "topic"
durable = true
autoDelete = false
internal = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_action"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_action_axe_rpc_client"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_axe"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =
  [RabbitMQ.queues.bind]
  key = "Engine_axe"
  exchange = "amq.direct"
  noWait = false
  # args =

[[RabbitMQ.queues]]
name = "Engine_axe_rpc_server"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_axe_pbehavior_rpc_client"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_che"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_fifo"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =
  [RabbitMQ.queues.bind]
  key = "#"
  exchange = "canopsis.events"
  noWait = false
  # args =

[[RabbitMQ.queues]]
name = "FIFO_ack"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_pbehavior_rpc_server"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

[[RabbitMQ.queues]]
name = "Engine_pbehavior_recompute"
durable = true
autoDelete = false
exclusive = false
noWait = false
# args =

# It's required to restart api and engines after canopsis-reconfigure updates mongodb
# to catch up following parameters.
[Canopsis.global]
PrefetchCount = 10000
PrefetchSize = 0
ReconnectTimeoutMilliseconds = 8
ReconnectRetries = 3
# Infos dictionary options enable or disable infos dictionary building.
# The dictionary is used in UI autocomplete hints for infos key and values.
BuildEntityInfosDictionary = true
BuildDynamicInfosDictionary = true
# Maximum unique infos key-value pairs to store in dictionary
InfosDictionaryLimit = 1100
# The default value for a check events count trigger threshold.
EventsCountTriggerDefaultThreshold = 10

# It's required to restart api and engines after canopsis-reconfigure updates mongodb
# to catch up following parameters.
[Canopsis.file]
# Local storage for Upload artifacts. Upload artifacts are used in Administration -> Parameters.
Upload = "/opt/canopsis/var/lib/upload-files"
UploadMaxSize = 314572800 # 300Mb
Icon = "/opt/canopsis/var/lib/icons"
IconMaxSize = 10240 # 10Kb

# Following parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
[Canopsis.alarm]
StealthyInterval = 0
CancelAutosolveDelay = "1h"
DisplayNameScheme = "{{ rand_string 3 }}-{{ rand_string 3 }}-{{ rand_string 3 }}"
OutputLength = 255
LongOutputLength = 1024
DisableActionSnoozeDelayOnPbh = false
# TimeToKeepResolvedAlarms defines how long resolved alarms will be kept in main alarm collection
TimeToKeepResolvedAlarms = "720h"
AllowDoubleAck = false
# EnableArraySortingInEntityInfos enables sorting string array infos before saving to an entity.
EnableArraySortingInEntityInfos = true

# Following parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
[Canopsis.timezone]
Timezone = "Europe/Paris"

# Following parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
[Canopsis.data_storage]
# Time to execute data archive and delete. It's used by multiple engines since different engines handle different data.
TimeToExecute = "Sunday,23"
# MaxUpdates specifies the amount of items that be updated/removed for once.
MaxUpdates = 100000
# MongoClientTimeout specifies the amount of time that a single operation run on Mongo Client can execute before returning an error.
MongoClientTimeout = "1m"

# It's required to restart api and engines after canopsis-reconfigure updates mongodb
# to catch up following parameters.
[Canopsis.import_ctx]
ThdWarnMinPerImport = "30m"
ThdCritMinPerImport = "60m"
FilePattern = "/tmp/import_%s.json"

# Following parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
[Canopsis.api]
TokenSigningMethod = "HS256"
BulkMaxSize = 10000
ExportMongoClientTimeout = "1m"
AuthorScheme = ["$username"]
#AuthorScheme = ["$username", " ", "$firstname", " ", "$lastname", " ", "$email", " ", "$_id"]

# It's required to restart api and engines after canopsis-reconfigure updates mongodb
# to catch up following parameters.
[Canopsis.logger]
Writer = "stdout"
# SystemD journalctl compatible format
# Writer = "journald"

# It's required to restart api and engines after canopsis-reconfigure updates mongodb
# to catch up following parameters.
[Canopsis.logger.console_writer]
# Enabled should be false here when Canopsis.logger.Writer configured as journald
Enabled = true
NoColor = false
TimeFormat = "2006-01-02T15:04:05Z07:00"
PartsOrder = ["time", "level", "caller", "message"]

[Canopsis.metrics]
Enabled = true
# FlushInterval defines how often metrics are flushed from memory to TimescaleDB.
FlushInterval = "10s"
# Long SLI intervals are splitted to short intervals which are defined by SliInterval paramter.
# Lower value provides more accurate metrics but requires more disk space.
# Higher value provides less accurate metrics but requires less disk space.
# 1h is recommended value since Canopsis UI lowest time sampling 1 hour.
# Change value for external tools if more accurate metrics are required.
SliInterval = "1h"
# UserSessionGapInterval splitts user activity by sessions.
UserSessionGapInterval = "1h"

[Canopsis.tech_metrics]
# DumpKeepInterval defines how long dump with tech metrics should be kept before delete.
DumpKeepInterval = "1h"
GoMetricsInterval = "1s"
GoMetrics = [
    "proc_cpu_total",
    "proc_virtual_memory",
    "proc_resident_memory",
    "proc_file_descriptors",
]

# Template vars can be used in any template like this {{ .Env.Location }}.
# Following parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
[Canopsis.template.vars]
#Location = "FR"

# It's required to restart api after canopsis-reconfigure updates mongodb to catch up following parameter.
[HealthCheck]
update_interval = "10s"

# Following engine_order parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
[[HealthCheck.engine_order]]
from = "engine-fifo"
to = "engine-che"
[[HealthCheck.engine_order]]
from = "engine-che"
to = "engine-axe"
[[HealthCheck.engine_order]]
from = "engine-axe"
to = "engine-action"
[[HealthCheck.engine_order]]
from = "engine-axe"
to = "engine-pbehavior"

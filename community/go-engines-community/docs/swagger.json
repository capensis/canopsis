{
    "swagger": "2.0",
    "info": {
        "description": "This is a Canopsis server.",
        "title": "Canopsis API",
        "contact": {},
        "license": {},
        "version": "4.0"
    },
    "basePath": "/api/v4",
    "paths": {
        "/account/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get account",
                "operationId": "account-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/active-broadcast-message": {
            "get": {
                "description": "Get all active broadcast-message",
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Get all active broadcast-message",
                "operationId": "broadcast-messages-get-active",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                            }
                        }
                    }
                }
            }
        },
        "/alarm-counters": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get counts of alarms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Count alarms",
                "operationId": "alarms-get-counts",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "active_columns[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "correlation",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instructions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instructions",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "manual",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "opened",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "resolved",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstop",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alarm.Count"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarm-export": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start export alarms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Start export alarms",
                "operationId": "alarms-export-start",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alarm.ExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alarm.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarm-export/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get status of export alarms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Get status of export alarms",
                "operationId": "alarms-export-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alarm.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarm-export/{id}/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get result of export alarms",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Get result of export alarms",
                "operationId": "alarms-export-download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarms": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of alarms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Find all alarms",
                "operationId": "alarms-find-all",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "active_columns[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "correlation",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instructions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instructions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "manual",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "opened",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "paginate",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "resolved",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_dir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_key",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstop",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_consequences",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_instructions",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_steps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/alarm.Alarm"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/associativetable": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get associativetable by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "associativetables"
                ],
                "summary": "Get associativetable by name",
                "operationId": "associativetables-get-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "associativetable name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/associativetable.AssociativeTable"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create/update associativetable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "associativetables"
                ],
                "summary": "Create/update associativetable",
                "operationId": "associativetables-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/associativetable.AssociativeTable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/associativetable.AssociativeTable"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete associativetable by name",
                "tags": [
                    "associativetables"
                ],
                "summary": "Delete associativetable by name",
                "operationId": "associativetables-delete-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "associativetable name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/broadcast-message": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of broadcast-message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Find all broadcast-message",
                "operationId": "broadcast-messages-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create broadcast-message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Create broadcast-message",
                "operationId": "broadcast-messages-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/broadcast-message/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get broadcast-message by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Get broadcast-message by id",
                "operationId": "broadcast-messages-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "broadcast-message id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update broadcast-message by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Update broadcast-message by id",
                "operationId": "broadcast-messages-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "broadcast-message id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete broadcast-message by id",
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Delete broadcast-message by id",
                "operationId": "broadcast-messages-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "broadcast-message id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/view-groups": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update view groups by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Bulk update view groups by id",
                "operationId": "viewgroups-bulk-update-by-id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.ViewGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create view groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Bulk create view groups",
                "operationId": "viewgroups-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.EditRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.EditRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete view groups by id",
                "tags": [
                    "viewgroups"
                ],
                "summary": "Bulk delete view groups by id",
                "operationId": "viewgroups-bulk-delete-by-id",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/views": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update views by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Bulk update views by id",
                "operationId": "views-bulk-update-by-id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/view.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.View"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create views",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Bulk create views",
                "operationId": "views-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/view.EditRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.View"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete views by id",
                "tags": [
                    "views"
                ],
                "summary": "Bulk delete views by id",
                "operationId": "views-bulk-delete-by-id",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contextgraph/import": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create import task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contextgraph-import"
                ],
                "summary": "Create import task",
                "operationId": "contextgraph-import-create-import",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contextgraph.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contextgraph.ImportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contextgraph/import/status/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get import status by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contextgraph-import"
                ],
                "summary": "Get import status by id",
                "operationId": "contextgraph-import-get-status-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "import id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contextgraph.ImportJob"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/data-storage": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get conf",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datastorage"
                ],
                "summary": "Get conf",
                "operationId": "datastorage-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastorage.DataStorage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update conf",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datastorage"
                ],
                "summary": "Update conf",
                "operationId": "datastorage-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datastorage.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastorage.DataStorage"
                        }
                    }
                }
            }
        },
        "/entities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of entities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Find entities",
                "operationId": "entities-find-all",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "active_columns[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.Entity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entities/pbehaviors": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get list of pbehaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Find pbehaviors by entity id",
                "operationId": "pbehaviors-find-by-entity-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pbehavior.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of entity categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Find entity categories",
                "operationId": "entity-categories-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entitycategory.Category"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create entity category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Create entity category",
                "operationId": "entity-categories-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entitycategory.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entitycategory.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-categories/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity category by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Get entity category by id",
                "operationId": "entity-categories-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitycategory.Category"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update entity category by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Update entity category by id",
                "operationId": "entity-categories-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entitycategory.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitycategory.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete entity category by id",
                "tags": [
                    "entity-categories"
                ],
                "summary": "Delete entity category by id",
                "operationId": "entity-categories-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-export": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start export entities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Start export entities",
                "operationId": "entities-export-start",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-export/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get status of export entities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Get status of export entities",
                "operationId": "entities-export-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-export/{id}/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get result of export entities",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Get result of export entities",
                "operationId": "entities-export-download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entitybasics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entitybasics"
                ],
                "summary": "Get entity by id",
                "operationId": "entitybasics-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitybasic.Entity"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update entity by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entitybasics"
                ],
                "summary": "Update entity by id",
                "operationId": "entitybasics-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entitybasic.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitybasic.Entity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete entity by id",
                "tags": [
                    "entitybasics"
                ],
                "summary": "Delete entity by id",
                "operationId": "entitybasics-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservice-dependencies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity service's dependencies by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Get entity service's dependencies by id",
                "operationId": "entityservices-get-dependencies-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entityservice.AlarmWithEntity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservice-impacts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity's impacted services by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Get entity's impacted services by id",
                "operationId": "entityservices-get-impacts-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entityservice.AlarmWithEntity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservices": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create entity service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Create entity service",
                "operationId": "entityservices-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entityservice.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entityservice.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservices/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity service by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Get entity service by id",
                "operationId": "entityservices-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entityservice.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update entity service by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Update entity service by id",
                "operationId": "entityservices-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entityservice.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entityservice.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete entity service by id",
                "tags": [
                    "entityservices"
                ],
                "summary": "Delete entity service by id",
                "operationId": "entityservices-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/event": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Send event/events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Send event/events",
                "operationId": "event-send",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/eventfilter/rules": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of eventfilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Find all eventfilter",
                "operationId": "eventfilters-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/eventfilter.EventFilter"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create eventfilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Create eventfilter",
                "operationId": "eventfilters-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/eventfilter/rules/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get eventfilter by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Get eventfilter by id",
                "operationId": "eventfilters-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "eventfilter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update eventfilter by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Update eventfilter by id",
                "operationId": "eventfilters-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "eventfilter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete eventfilter by id",
                "tags": [
                    "eventfilters"
                ],
                "summary": "Delete eventfilter by id",
                "operationId": "eventfilters-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "eventfilter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/idle-rules": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of idle rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idle rules"
                ],
                "summary": "Find idle rules",
                "operationId": "idlerules-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/idlerule.Rule"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create idle rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Create idle rule",
                "operationId": "idlerules-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idlerule.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/idlerule.Rule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/idle-rules/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Count entities and alarm matching patterns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Count entities and alarm matching patterns",
                "operationId": "idlerules-countpatterns",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idlerule.CountByPatternRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/idlerule.CountByPatternResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/idle-rules/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get idle rule by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Get idle rule by id",
                "operationId": "idlerules-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/idlerule.Rule"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update idle rule by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Update idle rule by id",
                "operationId": "idlerules-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idlerule.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/idlerule.Rule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete idle rule by id",
                "tags": [
                    "idlerules"
                ],
                "summary": "Delete idle rule by id",
                "operationId": "idlerules-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/internal/app_info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get application information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Get application information",
                "operationId": "internal-get-app-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/appinfo.AppInfoResponse"
                        }
                    }
                }
            }
        },
        "/internal/login_info": {
            "get": {
                "description": "Get login information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Get login information",
                "operationId": "internal-get-login-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/appinfo.LoginConfigResponse"
                        }
                    }
                }
            }
        },
        "/internal/user_interface": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "update user interface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "update user interface",
                "operationId": "internal-update-user-interface",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appinfo.UserInterfaceConf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/appinfo.UserInterfaceConf"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "delete user interface",
                "tags": [
                    "internal"
                ],
                "summary": "delete user interface",
                "operationId": "internal-delete-user-interface",
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/message-rate-stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message-rate-stats"
                ],
                "summary": "Find message rate stats",
                "operationId": "message-rate-stats-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "paginate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/messageratestats.StatsResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get notification settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Get notification settings",
                "operationId": "notification-get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/notification.Notification"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update notification settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Update notification settings",
                "operationId": "notification-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-comments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-comments"
                ],
                "summary": "Create pbehavior comment",
                "operationId": "pbehavior-comments-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorcomment.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-comments/:id": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior comment by id",
                "tags": [
                    "pbehavior-comments"
                ],
                "summary": "Delete pbehavior comment by id",
                "operationId": "pbehavior-comment-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-exceptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of behavior exceptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Find all pbehavior exceptions",
                "operationId": "pbehavior-exceptions-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with flags",
                        "name": "with_flags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehaviorexception.Exception"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior exception",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Create pbehavior exception",
                "operationId": "pbehavior-exceptions-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Exception"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-exceptions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior exception by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Get pbehavior exception by id",
                "operationId": "pbehavior-exceptions-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "exception id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Exception"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior exception by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Update behavior exception by id",
                "operationId": "pbehavior-exceptions-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "exception id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Exception"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior exception by id",
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Delete pbehavior exception by id",
                "operationId": "pbehavior-exceptions-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "exception id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-ics/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior ICS by id",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "pbehavior-ics"
                ],
                "summary": "Get pbehavior ICS by id",
                "operationId": "pbehavior-ics-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-reasons": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of behavior reasons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Find pbehavior reasons",
                "operationId": "pbehavior-reasons-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with flags",
                        "name": "with_flags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehaviorreason.Reason"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Create pbehavior reason",
                "operationId": "pbehavior-reasons-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Reason"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-reasons/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior reason by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Get pbehavior reason by id",
                "operationId": "pbehavior-reasons-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reason id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Reason"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior reason by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Update behavior reason by id",
                "operationId": "pbehavior-reasons-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reason id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Reason"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior reason by id",
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Delete pbehavior reason by id",
                "operationId": "pbehavior-reasons-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reason id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-timespans": {
            "post": {
                "description": "Get time spans of calendar event within view span; {by_date: false} adds exception spans with types, {by_date: true} merges adjacent spans if gap between sequential ones less than 24 hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-timespans"
                ],
                "summary": "Get all pbehavior timespans",
                "operationId": "pbehavior-timespans-get-all",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviortimespan.TimespansRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pbehaviortimespan.timespansItemResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-types": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of behavior types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Find pbehavior types",
                "operationId": "pbehavior-types-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with flags",
                        "name": "with_flags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehavior.Type"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Create pbehavior type",
                "operationId": "pbehavior-types-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviortype.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-types/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior type by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Get pbehavior type by id",
                "operationId": "pbehavior-types-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Type"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Update behavior type by id",
                "operationId": "pbehavior-types-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviortype.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior type by id",
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Delete pbehavior type by id",
                "operationId": "pbehavior-types-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of pbehaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Find all pbehaviors",
                "operationId": "pbehaviors-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehavior.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Create pbehavior",
                "operationId": "pbehaviors-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehavior.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Count entities matching filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Count entities matching filter",
                "operationId": "pbehavior-countfilter",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehavior.FilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.CountFilterResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Get pbehavior by id",
                "operationId": "pbehaviors-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Update behavior by id",
                "operationId": "pbehaviors-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehavior.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior by id",
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Delete pbehavior by id",
                "operationId": "pbehavior-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors/{id}/eids": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior eids list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Get pbehavior eids list",
                "operationId": "pbehaviors-get-eids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehavior.EID"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Find permissions",
                "operationId": "permissions-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/permission.Permission"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Find all playlist",
                "operationId": "playlists-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/playlist.Playlist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Create playlist",
                "operationId": "playlists-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get playlist by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get playlist by id",
                "operationId": "playlists-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "playlist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update playlist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Update playlist by id",
                "operationId": "playlists-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "playlist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete playlist by id",
                "tags": [
                    "playlists"
                ],
                "summary": "Delete playlist by id",
                "operationId": "playlists-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "playlist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Find roles",
                "operationId": "roles-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/role.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create role",
                "operationId": "roles-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/role.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get role by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get role by id",
                "operationId": "roles-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/role.Role"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update role by id",
                "operationId": "roles-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/role.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete role by id",
                "tags": [
                    "roles"
                ],
                "summary": "Delete role by id",
                "operationId": "roles-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of scenarios",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Find scenarios",
                "operationId": "scenarios-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/scenario.Scenario"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create scenario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Create scenario",
                "operationId": "scenarios-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/scenario.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/scenario.Scenario"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get scenario by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Get scenario by id",
                "operationId": "scenarios-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "scenario id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/scenario.Scenario"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update scenario by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Update scenario by id",
                "operationId": "scenarios-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "scenario id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/scenario.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/scenario.Scenario"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete scenario by id",
                "tags": [
                    "scenarios"
                ],
                "summary": "Delete scenario by id",
                "operationId": "scenarios-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "scenario id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions-count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get counts of active sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get counts of active sessions",
                "operationId": "auth-get-session-counts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.sessionsCountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/state-settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of state settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "state-settings"
                ],
                "summary": "Find all state settings for a widget",
                "operationId": "state-settings-list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/statesettings.StateSetting"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/state-settings/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update state setting type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "state-settings"
                ],
                "summary": "Update state setting type by id",
                "operationId": "state-settings-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/statesettings.StateSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statesettings.StateSetting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Find users",
                "operationId": "users-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "role permission",
                        "name": "permission",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "operationId": "users-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get user by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by id",
                "operationId": "users-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user by id",
                "operationId": "users-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete user by id",
                "tags": [
                    "users"
                ],
                "summary": "Delete user by id",
                "operationId": "users-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/view-groups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of view groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Find view groups",
                "operationId": "viewgroups-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/viewgroup.ViewGroup"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create view group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Create view group",
                "operationId": "viewgroups-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewgroup.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.ViewGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/view-groups/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get view group by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Get view group by id",
                "operationId": "viewgroups-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "viewgroup id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.ViewGroup"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update view group by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Update view group by id",
                "operationId": "viewgroups-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewgroup.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.ViewGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete view group by id",
                "tags": [
                    "viewgroups"
                ],
                "summary": "Delete view group by id",
                "operationId": "viewgroups-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/view-positions": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update views positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Update views positions",
                "operationId": "views-update-positions",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/view.EditPositionItemRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/views": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of views",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Find views",
                "operationId": "views-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/viewgroup.View"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create view",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Create view",
                "operationId": "views-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/views/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get view by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Get view by id",
                "operationId": "views-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.View"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update view by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Update view by id",
                "operationId": "views-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete view by id",
                "tags": [
                    "views"
                ],
                "summary": "Delete view by id",
                "operationId": "views-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/weather-services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weather-services"
                ],
                "summary": "Find all services",
                "operationId": "weather-services-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter query",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/serviceweather.Service"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/weather-services/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of entities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weather-services"
                ],
                "summary": "Find all entity by service id",
                "operationId": "weather-services-find-all-entities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/serviceweather.Entity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "authkey": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "object",
                    "$ref": "#/definitions/user.View"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "external_id": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role.Permission"
                    }
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user.Role"
                },
                "source": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "alarm.Alarm": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "assigned_instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.InstructionWithAlarms"
                    }
                },
                "causes": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Causes"
                },
                "consequences": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Children"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Entity"
                },
                "filtered_children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_state": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "is_all_auto_instructions_completed": {
                    "type": "boolean"
                },
                "is_auto_instruction_running": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "additionalProperties": true
                },
                "metaalarm": {
                    "type": "boolean"
                },
                "pbehavior": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Pbehavior"
                },
                "rule": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.MetaAlarmRule"
                },
                "t": {
                    "type": "integer"
                },
                "v": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmValue"
                }
            }
        },
        "alarm.AlarmStep": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "initiator": {
                    "type": "string"
                },
                "m": {
                    "type": "string"
                },
                "t": {
                    "type": "integer"
                },
                "val": {
                    "type": "integer"
                }
            }
        },
        "alarm.AlarmTicket": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "m": {
                    "type": "string"
                },
                "t": {
                    "type": "integer"
                },
                "val": {
                    "type": "string"
                }
            }
        },
        "alarm.AlarmValue": {
            "type": "object",
            "properties": {
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "activation_date": {
                    "type": "integer"
                },
                "canceled": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "integer"
                },
                "current_state_duration": {
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "done": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "duration": {
                    "type": "integer"
                },
                "events_count": {
                    "type": "integer"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "infos_rule_version": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "initial_long_output": {
                    "type": "string"
                },
                "initial_output": {
                    "type": "string"
                },
                "lastComment": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "last_event_date": {
                    "type": "integer"
                },
                "last_update_date": {
                    "type": "integer"
                },
                "long_output": {
                    "type": "string"
                },
                "long_output_history": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meta": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/types.PbehaviorInfo"
                },
                "resolved": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "state_changes_since_status_update": {
                    "type": "integer"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.AlarmStep"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmTicket"
                },
                "total_state_changes": {
                    "type": "integer"
                }
            }
        },
        "alarm.Causes": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.MetaAlarmRule"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "alarm.Children": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.Alarm"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "alarm.Count": {
            "type": "object",
            "properties": {
                "ack": {
                    "type": "integer"
                },
                "pbehavior_active": {
                    "type": "integer"
                },
                "snooze": {
                    "type": "integer"
                },
                "ticket": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_active": {
                    "type": "integer"
                }
            }
        },
        "alarm.Execution": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "alarm.ExportRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "correlation": {
                    "type": "boolean"
                },
                "exclude_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exclude_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fields": {
                    "type": "object",
                    "$ref": "#/definitions/export.Fields"
                },
                "filter": {
                    "type": "string"
                },
                "include_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "include_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manual": {
                    "type": "boolean"
                },
                "opened": {
                    "type": "boolean"
                },
                "resolved": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                },
                "time_format": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "with_consequences": {
                    "type": "boolean"
                },
                "with_steps": {
                    "type": "boolean"
                }
            }
        },
        "alarm.ExportResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "alarm.FilterRequest": {
            "type": "object",
            "properties": {
                "active_columns[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "correlation": {
                    "type": "boolean"
                },
                "exclude_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exclude_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string"
                },
                "include_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "include_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manual": {
                    "type": "boolean"
                },
                "opened": {
                    "type": "boolean"
                },
                "resolved": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                }
            }
        },
        "alarm.InstructionWithAlarms": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "active_on_pbh": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disabled_on_pbh": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "execution": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Execution"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "alarm.ListRequestWithPagination": {
            "type": "object",
            "properties": {
                "active_columns[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "correlation": {
                    "type": "boolean"
                },
                "exclude_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exclude_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string"
                },
                "include_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "include_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "manual": {
                    "type": "boolean"
                },
                "opened": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "paginate": {
                    "type": "boolean"
                },
                "resolved": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "sort_dir": {
                    "type": "string"
                },
                "sort_key": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "with_consequences": {
                    "type": "boolean"
                },
                "with_instructions": {
                    "type": "boolean"
                },
                "with_steps": {
                    "type": "boolean"
                }
            }
        },
        "alarm.MetaAlarmRule": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "alarm.Pbehavior": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                }
            }
        },
        "appinfo.AppInfoResponse": {
            "type": "object",
            "properties": {
                "allow_change_severity_to_info": {
                    "type": "boolean"
                },
                "app_title": {
                    "type": "string"
                },
                "check_count_request_timeout": {
                    "type": "integer"
                },
                "edition": {
                    "type": "string"
                },
                "footer": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "login_page_description": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "max_matched_items": {
                    "type": "integer"
                },
                "popup_timeout": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.PopupTimeout"
                },
                "stack": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "appinfo.IntervalUnit": {
            "type": "object",
            "properties": {
                "interval": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "appinfo.LoginConfig": {
            "type": "object",
            "properties": {
                "casconfig": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConfigMethod"
                },
                "ldapconfig": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConfigMethod"
                },
                "saml2config": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConfigMethod"
                }
            }
        },
        "appinfo.LoginConfigMethod": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "appinfo.LoginConfigResponse": {
            "type": "object",
            "properties": {
                "edition": {
                    "type": "string"
                },
                "login_config": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConfig"
                },
                "stack": {
                    "type": "string"
                },
                "user_interface": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.UserInterfaceConf"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "appinfo.PopupTimeout": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.IntervalUnit"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.IntervalUnit"
                }
            }
        },
        "appinfo.UserInterfaceConf": {
            "type": "object",
            "properties": {
                "allow_change_severity_to_info": {
                    "type": "boolean"
                },
                "app_title": {
                    "type": "string"
                },
                "check_count_request_timeout": {
                    "type": "integer"
                },
                "footer": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "login_page_description": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "max_matched_items": {
                    "type": "integer"
                },
                "popup_timeout": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.PopupTimeout"
                }
            }
        },
        "associativetable.AssociativeTable": {
            "type": "object",
            "required": [
                "content",
                "name"
            ],
            "properties": {
                "content": {
                    "type": "object",
                    "$ref": "#/definitions/associativetable.Content"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "associativetable.Content": {
            "type": "object"
        },
        "auth.sessionsCountResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "broadcastmessage.BroadcastMessage": {
            "type": "object",
            "required": [
                "color",
                "end",
                "message",
                "start"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "broadcastmessage.Payload": {
            "type": "object",
            "required": [
                "color",
                "end",
                "message",
                "start"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "common.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "common.PaginatedListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "meta": {
                    "type": "object",
                    "$ref": "#/definitions/common.PaginatedMeta"
                }
            }
        },
        "common.PaginatedMeta": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_count": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "common.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "contextgraph.ConfigurationItem": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "action_properties": {
                    "type": "object"
                },
                "category": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": true
                },
                "measurements": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "name": {
                    "type": "string"
                },
                "output_template": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "contextgraph.ImportJob": {
            "type": "object",
            "properties": {
                "creation": {
                    "type": "string"
                },
                "execTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "stats": {
                    "type": "object",
                    "$ref": "#/definitions/contextgraph.JobStats"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "contextgraph.ImportResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "contextgraph.JobStats": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "contextgraph.Link": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "action_properties": {
                    "type": "object"
                },
                "from": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": true
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "contextgraph.Request": {
            "type": "object",
            "properties": {
                "json": {
                    "type": "object",
                    "properties": {
                        "cis": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contextgraph.ConfigurationItem"
                            }
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contextgraph.Link"
                            }
                        }
                    }
                }
            }
        },
        "datastorage.Config": {
            "type": "object",
            "properties": {
                "junit": {
                    "type": "object",
                    "properties": {
                        "delete_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        }
                    }
                },
                "remediation": {
                    "type": "object",
                    "properties": {
                        "accumulate_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        },
                        "delete_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        }
                    }
                }
            }
        },
        "datastorage.DataStorage": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "$ref": "#/definitions/datastorage.Config"
                },
                "history": {
                    "type": "object",
                    "$ref": "#/definitions/datastorage.History"
                }
            }
        },
        "datastorage.History": {
            "type": "object",
            "properties": {
                "junit": {
                    "type": "integer"
                },
                "remediation": {
                    "type": "integer"
                }
            }
        },
        "entity.Entity": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "component_infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "deletable": {
                    "type": "boolean"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enable_history": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "measurements": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.ExportRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "$ref": "#/definitions/export.Fields"
                },
                "filter": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                }
            }
        },
        "entity.ExportResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "entity.Info": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "entity.Infos": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/entity.Info"
            }
        },
        "entity.ListRequest": {
            "type": "object",
            "properties": {
                "active_columns[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "filter": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "sort_by": {
                    "type": "string"
                }
            }
        },
        "entitybasic.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "impact_level"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entitybasic.InfoRequest"
                    }
                }
            }
        },
        "entitybasic.Entity": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "changeable_depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "changeable_impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "type": "string"
                },
                "component_infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "deletable": {
                    "type": "boolean"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enable_history": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "measurements": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entitybasic.InfoRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "entitycategory.Category": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "entitycategory.EditRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "entityservice.AlarmWithEntity": {
            "type": "object",
            "properties": {
                "alarm": {
                    "type": "object",
                    "$ref": "#/definitions/types.Alarm"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Entity"
                },
                "has_dependencies": {
                    "type": "boolean"
                },
                "has_impacts": {
                    "type": "boolean"
                },
                "impact_state": {
                    "type": "integer"
                }
            }
        },
        "entityservice.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "impact_level",
                "name",
                "output_template"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entitybasic.InfoRequest"
                    }
                },
                "name": {
                    "type": "string"
                },
                "output_template": {
                    "type": "string"
                }
            }
        },
        "entityservice.Response": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "component_infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "deletable": {
                    "type": "boolean"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enable_history": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "measurements": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "output_template": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "event.Event": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "string",
                    "example": "test_component"
                },
                "connector": {
                    "type": "string",
                    "example": "test_connector"
                },
                "connector_name": {
                    "type": "string",
                    "example": "test_connectorname"
                },
                "event_type": {
                    "type": "string",
                    "example": "check"
                },
                "resource": {
                    "type": "string",
                    "example": "test_resource"
                },
                "source_type": {
                    "type": "string",
                    "example": "resource"
                },
                "state": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "event.Response": {
            "type": "object",
            "properties": {
                "failed_events": {
                    "description": "FailedEvents is an empty array left for compatibility with old handler",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "retry_events": {
                    "description": "RetryEvents is an empty array left for compatibility with old handler",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "sent_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/event.Event"
                    }
                }
            }
        },
        "eventfilter.Action": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "eventfilter.EventFilter": {
            "type": "object",
            "required": [
                "description",
                "enabled",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/eventfilter.Action"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "external_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "on_failure": {
                    "type": "string"
                },
                "on_success": {
                    "type": "string"
                },
                "patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EventPatternList"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "export.Field": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "export.Fields": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/export.Field"
            }
        },
        "http.Response": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "close": {
                    "type": "boolean"
                },
                "contentLength": {
                    "type": "integer"
                },
                "header": {
                    "type": "Header"
                },
                "proto": {
                    "type": "string"
                },
                "protoMajor": {
                    "type": "integer"
                },
                "protoMinor": {
                    "type": "integer"
                },
                "request": {
                    "type": "Request"
                },
                "status": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "tls": {
                    "type": "string"
                },
                "trailer": {
                    "type": "Header"
                },
                "transferEncoding": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uncompressed": {
                    "type": "boolean"
                }
            }
        },
        "idlerule.CountByPatternRequest": {
            "type": "object",
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                }
            }
        },
        "idlerule.CountByPatternResult": {
            "type": "object",
            "properties": {
                "over_limit": {
                    "type": "boolean"
                },
                "total_count_alarms": {
                    "type": "integer"
                },
                "total_count_entities": {
                    "type": "integer"
                }
            }
        },
        "idlerule.EditRequest": {
            "type": "object",
            "required": [
                "duration",
                "enabled",
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "alarm_condition": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.OperationRequest"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.Operation": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "object"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.OperationRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "parameters": {
                    "type": "object"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.Rule": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_condition": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "description": "Only for Alarm rules",
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "description": {
                    "type": "string"
                },
                "disable_during_periods": {
                    "description": "DisableDuringPeriods is an option that allows to disable the rule\nwhen entity is in listed periods due pbehavior schedule.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.Operation"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                }
            }
        },
        "messageratestats.ListRequest": {
            "type": "object",
            "required": [
                "from",
                "interval",
                "to"
            ],
            "properties": {
                "from": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "paginate": {
                    "type": "boolean"
                },
                "sort": {
                    "type": "string"
                },
                "sort_by": {
                    "type": "string"
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "messageratestats.StatsResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "integer"
                },
                "received": {
                    "type": "integer"
                }
            }
        },
        "notification.InstructionNotification": {
            "type": "object",
            "required": [
                "rate",
                "rate_frequency"
            ],
            "properties": {
                "rate": {
                    "type": "boolean"
                },
                "rate_frequency": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                }
            }
        },
        "notification.Notification": {
            "type": "object",
            "properties": {
                "instruction": {
                    "type": "object",
                    "$ref": "#/definitions/notification.InstructionNotification"
                }
            }
        },
        "pattern.AlarmPattern": {
            "type": "object",
            "properties": {
                "entityID": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "id": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "shouldBeNil": {
                    "type": "boolean"
                },
                "shouldNotBeNil": {
                    "description": "ShouldNotBeNil is a boolean indicating that the alarm should not be nil,\nand ShouldBeNil is a boolean indicating that the alarm should be nil.\nThe two booleans are needed to be able to make the difference between\nthe case where no alarm pattern was defined (in which case the alarm can\nbe nil or not), the case where a nil alarm pattern was defined (in which\ncase the alarm should be nil), and the case where a non-nil alarm\npattern was defined (in which case the alarm should not be nil).",
                    "type": "boolean"
                },
                "time": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimePattern"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.",
                    "type": "object",
                    "additionalProperties": true
                },
                "value": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmValuePattern"
                }
            }
        },
        "pattern.AlarmPatternList": {
            "type": "object",
            "properties": {
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pattern.AlarmPattern"
                    }
                },
                "set": {
                    "description": "isSet is a boolean indicating whether the AlarmPatternList has been set\nexplicitly or not.",
                    "type": "boolean"
                },
                "valid": {
                    "description": "isValid is a boolean indicating whether the event patterns or valid or\nnot.\nisValid is also false if the AlarmPatternList has not been set.",
                    "type": "boolean"
                }
            }
        },
        "pattern.AlarmStepRefPattern": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "initiator": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "message": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "shouldBeNil": {
                    "type": "boolean"
                },
                "shouldNotBeNil": {
                    "description": "ShouldNotBeNil is a boolean indicating that the alarm step should not be\nnil, and ShouldBeNil is a boolean indicating that the alarm step should\nbe nil.\nThe two booleans are needed to be able to make the difference between\nthe case where no pattern was defined (in which case the alarm step can\nbe nil or not), the case where a nil pattern was defined (in which case\nthe alarm step should be nil), and the case where a non-nil pattern was\ndefined (in which case the alarm step should not be nil).",
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimePattern"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.",
                    "type": "object",
                    "additionalProperties": true
                },
                "value": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerPattern"
                }
            }
        },
        "pattern.AlarmTicketRefPattern": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/pattern.StringPattern"
                    }
                },
                "message": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "shouldBeNil": {
                    "type": "boolean"
                },
                "shouldNotBeNil": {
                    "description": "ShouldNotBeNil is a boolean indicating that the alarm step should not be\nnil, and ShouldBeNil is a boolean indicating that the alarm step should\nbe nil.\nThe two booleans are needed to be able to make the difference between\nthe case where no pattern was defined (in which case the alarm step can\nbe nil or not), the case where a nil pattern was defined (in which case\nthe alarm step should be nil), and the case where a non-nil pattern was\ndefined (in which case the alarm step should not be nil).",
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimePattern"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.",
                    "type": "object",
                    "additionalProperties": true
                },
                "value": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                }
            }
        },
        "pattern.AlarmValuePattern": {
            "type": "object",
            "properties": {
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmStepRefPattern"
                },
                "activationDate": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimeRefPattern"
                },
                "canceled": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmStepRefPattern"
                },
                "component": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "connector": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "connectorName": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "creationDate": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimePattern"
                },
                "displayName": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "done": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmStepRefPattern"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/pattern.InterfacePattern"
                    }
                },
                "hardLimit": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerRefPattern"
                },
                "initialLongOutput": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "initialOutput": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "lastEventDate": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimePattern"
                },
                "lastUpdateDate": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimePattern"
                },
                "longOutput": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "output": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "resolved": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimeRefPattern"
                },
                "resource": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmStepRefPattern"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmStepRefPattern"
                },
                "stateChangesSinceStatusUpdate": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerPattern"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmStepRefPattern"
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmTicketRefPattern"
                },
                "totalStateChanges": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerPattern"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.BoolPattern": {
            "type": "object",
            "properties": {
                "set": {
                    "description": "Set is a boolean indicating whether the value was set or not.",
                    "type": "boolean"
                },
                "value": {
                    "description": "Value contains the value of the bool. It should only be taken into\naccount if Set is true.",
                    "type": "boolean"
                }
            }
        },
        "pattern.EntityPattern": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "componentInfos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/pattern.InfoPattern"
                    }
                },
                "enabled": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.BoolPattern"
                },
                "id": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/pattern.InfoPattern"
                    }
                },
                "name": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "shouldBeNil": {
                    "type": "boolean"
                },
                "shouldNotBeNil": {
                    "description": "ShouldNotBeNil is a boolean indicating that the entity should not be\nnil, and ShouldBeNil is a boolean indicating that the entity should be\nnil.\nThe two booleans are needed to be able to make the difference between\nthe case where no entity pattern was defined (in which case the entity\ncan be nil or not), the case where a nil entity pattern was defined (in\nwhich case the entity should be nil), and the case where a non-nil\nentity pattern was defined (in which case the entity should not be nil).",
                    "type": "boolean"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.EntityPatternList": {
            "type": "object",
            "properties": {
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pattern.EntityPattern"
                    }
                },
                "set": {
                    "description": "Set is a boolean indicating whether the EntityPatternList has been set\nexplicitly or not.",
                    "type": "boolean"
                },
                "valid": {
                    "description": "Valid is a boolean indicating whether the event patterns or valid or\nnot.\nValid is also false if the EntityPatternList has not been set.",
                    "type": "boolean"
                }
            }
        },
        "pattern.EventPattern": {
            "type": "object",
            "properties": {
                "ackResources": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.BoolPattern"
                },
                "author": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "component": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "connector": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "connectorName": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "debug": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.BoolPattern"
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerRefPattern"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPattern"
                },
                "eventType": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "extraInfos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/pattern.InterfacePattern"
                    }
                },
                "id": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringRefPattern"
                },
                "longOutput": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "output": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "perfData": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringRefPattern"
                },
                "resource": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "rk": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "sourceType": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "statName": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerPattern"
                },
                "stateType": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerRefPattern"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.IntegerRefPattern"
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "timestamp": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.TimePattern"
                }
            }
        },
        "pattern.EventPatternList": {
            "type": "object",
            "properties": {
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pattern.EventPattern"
                    }
                },
                "set": {
                    "description": "Set is a boolean indicating whether the EventPatternList has been set\nexplicitly or not.",
                    "type": "boolean"
                },
                "valid": {
                    "description": "Valid is a boolean indicating whether the event patterns or valid or\nnot.\nValid is also false if the EventPatternList has not been set.",
                    "type": "boolean"
                }
            }
        },
        "pattern.InfoPattern": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "name": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                },
                "shouldNotBeSet": {
                    "type": "boolean"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.",
                    "type": "object",
                    "additionalProperties": true
                },
                "value": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.StringPattern"
                }
            }
        },
        "pattern.IntegerPattern": {
            "type": "object",
            "properties": {
                "equal": {
                    "description": "If Equal is set, the value of a field has to be equal to the value of\nEqual to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "gt": {
                    "description": "If Gt is set, the value of a field has to be greater than the value\nof Gt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "gte": {
                    "description": "If Gte is set, the value of a field has to be greater than the value\nof Gte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lt": {
                    "description": "If Lt is set, the value of a field has to be greater than the value\nof Lt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lte": {
                    "description": "If Lte is set, the value of a field has to be greater than the value\nof Lte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.\nUnexpectedFields should always be empty.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.IntegerRefPattern": {
            "type": "object",
            "properties": {
                "equal": {
                    "description": "If Equal is set, the value of a field has to be equal to the value of\nEqual to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "equalNil": {
                    "description": "If EqualNil is true, the field should be nil or not be set to be matched\nby the pattern.",
                    "type": "boolean"
                },
                "gt": {
                    "description": "If Gt is set, the value of a field has to be greater than the value\nof Gt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "gte": {
                    "description": "If Gte is set, the value of a field has to be greater than the value\nof Gte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lt": {
                    "description": "If Lt is set, the value of a field has to be greater than the value\nof Lt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lte": {
                    "description": "If Lte is set, the value of a field has to be greater than the value\nof Lte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.\nUnexpectedFields should always be empty.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.InterfacePattern": {
            "type": "object",
            "properties": {
                "equal": {
                    "description": "If Equal is set, the value of a field has to be equal to the value of\nEqual to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalString"
                },
                "equalNil": {
                    "description": "If EqualNil is true, the field should be nil or not be set to be matched\nby the pattern.",
                    "type": "boolean"
                },
                "gt": {
                    "description": "If Gt is set, the value of a field has to be greater than the value\nof Gt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "gte": {
                    "description": "If Gte is set, the value of a field has to be greater than the value\nof Gte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "hasEvery": {
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalStringArray"
                },
                "hasNot": {
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalStringArray"
                },
                "hasOneOf": {
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalStringArray"
                },
                "lt": {
                    "description": "If Lt is set, the value of a field has to be greater than the value\nof Lt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lte": {
                    "description": "If Lte is set, the value of a field has to be greater than the value\nof Lte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "regexMatch": {
                    "description": "If RegexMatch is set, the value of a field has to be matched by this\nregular expression to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalRegexp"
                },
                "unexpectedFields": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.StringPattern": {
            "type": "object",
            "properties": {
                "equal": {
                    "description": "If Equal is set, the value of a field has to be equal to the value of\nEqual to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalString"
                },
                "regexMatch": {
                    "description": "If RegexMatch is set, the value of a field has to be matched by this\nregular expression to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalRegexp"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.\nUnexpectedFields should always be empty.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.StringRefPattern": {
            "type": "object",
            "properties": {
                "equal": {
                    "description": "If Equal is set, the value of a field has to be equal to the value of\nEqual to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalString"
                },
                "equalNil": {
                    "description": "If EqualNil is true, the field should be nil or not be set to be matched\nby the pattern.",
                    "type": "boolean"
                },
                "regexMatch": {
                    "description": "If RegexMatch is set, the value of a field has to be matched by this\nregular expression to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalRegexp"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.\nUnexpectedFields should always be empty.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.TimePattern": {
            "type": "object",
            "properties": {
                "equal": {
                    "description": "If Equal is set, the value of a field has to be equal to the value of\nEqual to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "gt": {
                    "description": "If Gt is set, the value of a field has to be greater than the value\nof Gt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "gte": {
                    "description": "If Gte is set, the value of a field has to be greater than the value\nof Gte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lt": {
                    "description": "If Lt is set, the value of a field has to be greater than the value\nof Lt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lte": {
                    "description": "If Lte is set, the value of a field has to be greater than the value\nof Lte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.\nUnexpectedFields should always be empty.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pattern.TimeRefPattern": {
            "type": "object",
            "properties": {
                "equal": {
                    "description": "If Equal is set, the value of a field has to be equal to the value of\nEqual to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "equalNil": {
                    "description": "If EqualNil is true, the field should be nil or not be set to be matched\nby the pattern.",
                    "type": "boolean"
                },
                "gt": {
                    "description": "If Gt is set, the value of a field has to be greater than the value\nof Gt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "gte": {
                    "description": "If Gte is set, the value of a field has to be greater than the value\nof Gte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lt": {
                    "description": "If Lt is set, the value of a field has to be greater than the value\nof Lt to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "lte": {
                    "description": "If Lte is set, the value of a field has to be greater than the value\nof Lte to be matched by the pattern.",
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "unexpectedFields": {
                    "description": "When unmarshalling a BSON document, the fields of this document that are\nnot defined in this struct are added to UnexpectedFields.\nUnexpectedFields should always be empty.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "pbehavior.Comment": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "ts": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                }
            }
        },
        "pbehavior.Comments": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/pbehavior.Comment"
            }
        },
        "pbehavior.CountFilterResult": {
            "type": "object",
            "properties": {
                "over_limit": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "pbehavior.EID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "pbehavior.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "filter",
                "name",
                "reason",
                "tstart",
                "type"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.ExdateRequest"
                    }
                },
                "filter": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehavior.Filter": {
            "type": "object"
        },
        "pbehavior.FilterRequest": {
            "type": "object",
            "required": [
                "filter"
            ],
            "properties": {
                "filter": {
                    "type": "object"
                }
            }
        },
        "pbehavior.Response": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "comments": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Comments"
                },
                "created": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.Exception"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.Exdate"
                    }
                },
                "filter": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Filter"
                },
                "is_active_status": {
                    "description": "IsActiveStatus represents if pbehavior is in action for current time.",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "object",
                    "$ref": "#/definitions/pbehaviorreason.Reason"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "pbehavior.Type": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviorcomment.Request": {
            "type": "object",
            "required": [
                "message",
                "pbehavior"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "pbehavior": {
                    "type": "string"
                }
            }
        },
        "pbehaviorexception.Exception": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "deletable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.Exdate"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviorexception.Exdate": {
            "type": "object",
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                }
            }
        },
        "pbehaviorexception.ExdateRequest": {
            "type": "object",
            "required": [
                "begin",
                "end",
                "type"
            ],
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviorexception.Request": {
            "type": "object",
            "required": [
                "description",
                "exdates",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.ExdateRequest"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviorreason.Reason": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "deletable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviorreason.Request": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviortimespan.ExdateRequest": {
            "type": "object",
            "required": [
                "begin",
                "end"
            ],
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviortimespan.TimespansRequest": {
            "type": "object",
            "required": [
                "start_at",
                "view_from",
                "view_to"
            ],
            "properties": {
                "by_date": {
                    "type": "boolean"
                },
                "end_at": {
                    "type": "integer"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviortimespan.ExdateRequest"
                    }
                },
                "rrule": {
                    "type": "string"
                },
                "start_at": {
                    "type": "integer"
                },
                "view_from": {
                    "type": "integer"
                },
                "view_to": {
                    "type": "integer"
                }
            }
        },
        "pbehaviortimespan.timespansItemResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                }
            }
        },
        "pbehaviortype.EditRequest": {
            "type": "object",
            "required": [
                "description",
                "icon_name",
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviortype.Type": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "deletable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "editable": {
                    "type": "boolean"
                },
                "icon_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "permission.Permission": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "playlist.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "fullscreen",
                "interval",
                "name",
                "tabs_list"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "fullscreen": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "name": {
                    "type": "string"
                },
                "tabs_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "playlist.Playlist": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "fullscreen": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "name": {
                    "type": "string"
                },
                "tabs_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "role.CreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "defaultview": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "role.EditRequest": {
            "type": "object",
            "properties": {
                "defaultview": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "role.Permission": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "role.Role": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role.Permission"
                    }
                }
            }
        },
        "scenario.Action": {
            "type": "object",
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "drop_scenario_if_not_matched": {
                    "type": "boolean"
                },
                "emit_trigger": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "scenario.ActionRequest": {
            "type": "object",
            "required": [
                "drop_scenario_if_not_matched",
                "emit_trigger",
                "type"
            ],
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "drop_scenario_if_not_matched": {
                    "type": "boolean"
                },
                "emit_trigger": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "parameters": {
                    "type": "object"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "scenario.EditRequest": {
            "type": "object",
            "required": [
                "actions",
                "author",
                "enabled",
                "name",
                "priority",
                "triggers"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scenario.ActionRequest"
                    }
                },
                "author": {
                    "type": "string"
                },
                "delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "scenario.Scenario": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scenario.Action"
                    }
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "serviceweather.AlarmCounter": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehaviortype.Type"
                }
            }
        },
        "serviceweather.Entity": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "alarm_creation_date": {
                    "type": "integer"
                },
                "alarm_display_name": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact_level": {
                    "type": "integer"
                },
                "impact_state": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/serviceweather.Info"
                    }
                },
                "is_grey": {
                    "type": "boolean"
                },
                "last_update_date": {
                    "type": "integer"
                },
                "linklist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/serviceweather.WeatherLink"
                    }
                },
                "name": {
                    "type": "string"
                },
                "pbehaviors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehavior.Response"
                    }
                },
                "resource": {
                    "type": "string"
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "source_type": {
                    "type": "string"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "stats": {
                    "type": "object",
                    "$ref": "#/definitions/serviceweather.Stats"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmTicket"
                }
            }
        },
        "serviceweather.Info": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "serviceweather.Service": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "alarm_counters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/serviceweather.AlarmCounter"
                    }
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact_level": {
                    "type": "integer"
                },
                "impact_state": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/serviceweather.Info"
                    }
                },
                "is_action_required": {
                    "type": "boolean"
                },
                "is_grey": {
                    "type": "boolean"
                },
                "last_update_date": {
                    "type": "integer"
                },
                "linklist": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "cat_name": {
                                "type": "string"
                            },
                            "links": {
                                "type": "object"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "pbehaviors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehavior.Response"
                    }
                },
                "resource": {
                    "type": "string"
                },
                "secondary_icon": {
                    "type": "string"
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                }
            }
        },
        "serviceweather.Stats": {
            "type": "object",
            "properties": {
                "ko": {
                    "type": "integer"
                },
                "last_event": {
                    "type": "integer"
                },
                "last_ko": {
                    "type": "integer"
                },
                "ok": {
                    "type": "integer"
                }
            }
        },
        "serviceweather.WeatherLink": {
            "type": "object",
            "properties": {
                "cat_name": {
                    "type": "string"
                },
                "links": {
                    "type": "object"
                }
            }
        },
        "statesettings.JUnitThresholds": {
            "type": "object",
            "required": [
                "errors",
                "failures",
                "skipped"
            ],
            "properties": {
                "errors": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.StateThresholds"
                },
                "failures": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.StateThresholds"
                },
                "skipped": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.StateThresholds"
                }
            }
        },
        "statesettings.StateSetting": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "junit_thresholds": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.JUnitThresholds"
                },
                "method": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "statesettings.StateSettingRequest": {
            "type": "object",
            "required": [
                "method",
                "type"
            ],
            "properties": {
                "junit_thresholds": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.JUnitThresholds"
                },
                "method": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "statesettings.StateThresholds": {
            "type": "object",
            "required": [
                "critical",
                "major",
                "minor",
                "type"
            ],
            "properties": {
                "critical": {
                    "type": "number"
                },
                "major": {
                    "type": "number"
                },
                "minor": {
                    "type": "number"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "types.Alarm": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "d": {
                    "type": "string"
                },
                "t": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "v": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmValue"
                }
            }
        },
        "types.AlarmStep": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "exec": {
                    "description": "Execution contains id if instruction execution for instruction steps only.",
                    "type": "string"
                },
                "initiator": {
                    "type": "string"
                },
                "m": {
                    "type": "string"
                },
                "pbehavior_canonical_type": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "statecounter": {
                    "type": "object",
                    "$ref": "#/definitions/types.CropCounter"
                },
                "t": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "val": {
                    "type": "integer"
                }
            }
        },
        "types.AlarmSteps": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/types.AlarmStep"
            }
        },
        "types.AlarmTicket": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "m": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "t": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "val": {
                    "type": "string"
                }
            }
        },
        "types.AlarmValue": {
            "type": "object",
            "properties": {
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "activation_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "canceled": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "display_name": {
                    "type": "string"
                },
                "done": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "events_count": {
                    "description": "EventsCount accumulates count of check events.",
                    "type": "integer"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "hard_limit": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "initial_long_output": {
                    "type": "string"
                },
                "initial_output": {
                    "type": "string"
                },
                "last_event_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "last_update_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "long_output": {
                    "type": "string"
                },
                "long_output_history": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meta": {
                    "type": "string"
                },
                "meta_value_path": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/types.PbehaviorInfo"
                },
                "resolved": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "resource": {
                    "type": "string"
                },
                "ruleVersion": {
                    "description": "store version of dynamic-infos rule",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "state_changes_since_status_update": {
                    "type": "integer"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "steps": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmSteps"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmTicket"
                },
                "total_state_changes": {
                    "type": "integer"
                }
            }
        },
        "types.CpsTime": {
            "type": "object"
        },
        "types.CropCounter": {
            "type": "object",
            "properties": {
                "state:0": {
                    "type": "integer"
                },
                "state:1": {
                    "type": "integer"
                },
                "state:2": {
                    "type": "integer"
                },
                "state:3": {
                    "type": "integer"
                },
                "statechanges": {
                    "type": "integer"
                },
                "statedec": {
                    "type": "integer"
                },
                "stateinc": {
                    "type": "integer"
                }
            }
        },
        "types.DurationWithEnabled": {
            "type": "object",
            "required": [
                "enabled",
                "seconds",
                "unit"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "seconds": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "types.DurationWithUnit": {
            "type": "object",
            "required": [
                "seconds",
                "unit"
            ],
            "properties": {
                "seconds": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "types.OptionalInt64": {
            "type": "object",
            "properties": {
                "set": {
                    "description": "Set is a boolean indicating whether the value was set or not.",
                    "type": "boolean"
                },
                "value": {
                    "description": "Value contains the value of the int64. It should only be taken into\naccount if Set is true.",
                    "type": "integer"
                }
            }
        },
        "types.OptionalRegexp": {
            "type": "object",
            "properties": {
                "set": {
                    "description": "Set is a boolean indicating whether the value was set or not.",
                    "type": "boolean"
                },
                "value": {
                    "description": "Value contains the value of the regular expression. It should only be\ntaken into account if Set is true.",
                    "type": "object",
                    "$ref": "#/definitions/utils.RegexExpression"
                }
            }
        },
        "types.OptionalString": {
            "type": "object",
            "properties": {
                "set": {
                    "description": "Set is a boolean indicating whether the value was set or not.",
                    "type": "boolean"
                },
                "value": {
                    "description": "Value contains the value of the string. It should only be taken into\naccount if Set is true.",
                    "type": "string"
                }
            }
        },
        "types.OptionalStringArray": {
            "type": "object",
            "properties": {
                "set": {
                    "type": "boolean"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.PbehaviorInfo": {
            "type": "object",
            "properties": {
                "canonical_type": {
                    "description": "CanonicalType is Type of pbehavior.Type.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is ID of pbehavior.PBehavior.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is Name of pbehavior.PBehavior.",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason is Name of pbehavior.Reason.",
                    "type": "string"
                },
                "type": {
                    "description": "TypeID is ID of pbehavior.Type.",
                    "type": "string"
                },
                "type_name": {
                    "description": "TypeName is Name of pbehavior.Type.",
                    "type": "string"
                }
            }
        },
        "user.EditRequest": {
            "type": "object",
            "required": [
                "email",
                "enable",
                "name",
                "role"
            ],
            "properties": {
                "defaultview": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "user.Role": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "authkey": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "object",
                    "$ref": "#/definitions/user.View"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "external_id": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user.Role"
                },
                "source": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "user.View": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "utils.RegexExpression": {
            "type": "object"
        },
        "view.BulkDeleteRequest": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "view.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "enabled",
                "group",
                "title"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "periodic_refresh": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithEnabled"
                },
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.TabRequest"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "view.EditPositionItemRequest": {
            "type": "object",
            "required": [
                "_id",
                "views"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "view.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "group",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "periodic_refresh": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithEnabled"
                },
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.TabRequest"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "view.Tab": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.Widget"
                    }
                }
            }
        },
        "view.TabRequest": {
            "type": "object",
            "required": [
                "_id",
                "title"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.WidgetRequest"
                    }
                }
            }
        },
        "view.Widget": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "grid_parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "view.WidgetRequest": {
            "type": "object",
            "required": [
                "_id",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "grid_parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "parameters": {
                    "type": "object"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "viewgroup.BulkDeleteRequest": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "viewgroup.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "title"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "viewgroup.EditRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "viewgroup.View": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "object",
                    "$ref": "#/definitions/viewgroup.ViewGroup"
                },
                "periodic_refresh": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithEnabled"
                },
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.Tab"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "viewgroup.ViewGroup": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "deletable": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewgroup.View"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "x-canopsis-authkey",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}

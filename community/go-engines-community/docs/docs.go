// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get account",
                "operationId": "account-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/active-broadcast-message": {
            "get": {
                "description": "Get all active broadcast-message",
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Get all active broadcast-message",
                "operationId": "broadcast-messages-get-active",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                            }
                        }
                    }
                }
            }
        },
        "/alarm-counters": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get counts of alarms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Count alarms",
                "operationId": "alarms-get-counts",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "active_columns[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "correlation",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instructions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instructions",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "manual",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "opened",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstop",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alarm.Count"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarm-export": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start export alarms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Start export alarms",
                "operationId": "alarms-export-start",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alarm.ExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alarm.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarm-export/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get status of export alarms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Get status of export alarms",
                "operationId": "alarms-export-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alarm.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarm-export/{id}/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get result of export alarms",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Get result of export alarms",
                "operationId": "alarms-export-download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/alarms": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of alarms. Use parameters \"multi_sort[]=field_1,asc\u0026multi_sort[]=field_2,desc\u0026multi_sort[]=field_3,asc\" to sort list by multiple fields. \"sort_key\", \"sort_dir\" are left for compatibility with older ways of sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alarms"
                ],
                "summary": "Find all alarms",
                "operationId": "alarms-find-all",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "active_columns[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "correlation",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "exclude_instructions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instruction_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "include_instructions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "manual",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "multi_sort[]",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "opened",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "paginate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_dir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstart",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tstop",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_consequences",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_instructions",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_steps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/alarm.Alarm"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/app-info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get application information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Get application information",
                "operationId": "internal-get-app-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/appinfo.AppInfoResponse"
                        }
                    }
                }
            }
        },
        "/associativetable": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get associativetable by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "associativetables"
                ],
                "summary": "Get associativetable by name",
                "operationId": "associativetables-get-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "associativetable name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/associativetable.AssociativeTable"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create/update associativetable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "associativetables"
                ],
                "summary": "Create/update associativetable",
                "operationId": "associativetables-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/associativetable.AssociativeTable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/associativetable.AssociativeTable"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete associativetable by name",
                "tags": [
                    "associativetables"
                ],
                "summary": "Delete associativetable by name",
                "operationId": "associativetables-delete-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "associativetable name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/broadcast-message": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of broadcast-message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Find all broadcast-message",
                "operationId": "broadcast-messages-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create broadcast-message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Create broadcast-message",
                "operationId": "broadcast-messages-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/broadcast-message/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get broadcast-message by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Get broadcast-message by id",
                "operationId": "broadcast-messages-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "broadcast-message id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update broadcast-message by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Update broadcast-message by id",
                "operationId": "broadcast-messages-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "broadcast-message id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/broadcastmessage.BroadcastMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete broadcast-message by id",
                "tags": [
                    "broadcast-messages"
                ],
                "summary": "Delete broadcast-message by id",
                "operationId": "broadcast-messages-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "broadcast-message id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/entityservices": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update entityservices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Bulk update entityservices",
                "operationId": "entityservices-bulk-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entityservice.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entityservice.BulkUpdateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create entityservices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Bulk create entityservices",
                "operationId": "entityservices-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entityservice.CreateRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entityservice.BulkCreateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete entityservices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Bulk delete entityservices",
                "operationId": "entityservices-bulk-delete",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entityservice.BulkDeleteRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entityservice.BulkDeleteResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/eventfilters": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update eventfilters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Bulk update eventfilters",
                "operationId": "eventfilters-bulk-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eventfilter.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/eventfilter.BulkUpdateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create eventfilters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Bulk create eventfilters",
                "operationId": "eventfilters-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eventfilter.EventFilter"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/eventfilter.BulkCreateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete eventfilters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Bulk delete eventfilters",
                "operationId": "eventfilters-bulk-delete",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eventfilter.BulkDeleteRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/eventfilter.BulkDeleteResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/idle-rules": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update idlerules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Bulk update idlerules",
                "operationId": "idlerules-bulk-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/idlerule.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/idlerule.BulkUpdateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create idlerules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Bulk create idlerules",
                "operationId": "idlerules-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/idlerule.CreateRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/idlerule.BulkCreateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete idlerules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Bulk delete idlerules",
                "operationId": "idlerules-bulk-delete",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/idlerule.BulkDeleteRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/idlerule.BulkDeleteResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/pbehaviors": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update pbehaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Bulk update pbehaviors",
                "operationId": "pbehaviors-bulk-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pbehavior.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/pbehavior.BulkUpdateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create pbehaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Bulk create pbehaviors",
                "operationId": "pbehaviors-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pbehavior.CreateRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/pbehavior.BulkCreateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete pbehaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Bulk delete pbehaviors",
                "operationId": "pbehaviors-bulk-delete",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pbehavior.BulkDeleteRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/pbehavior.BulkDeleteResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/scenarios": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update scenarios",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Bulk update scenarios",
                "operationId": "scenarios-bulk-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/scenario.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/scenario.BulkUpdateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create scenarios",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Bulk create scenarios",
                "operationId": "scenarios-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/scenario.CreateRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/scenario.BulkCreateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete scenarios",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Bulk delete scenarios",
                "operationId": "scenarios-bulk-delete",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/scenario.BulkDeleteRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/scenario.BulkDeleteResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/users": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Bulk update users",
                "operationId": "users-bulk-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/user.BulkUpdateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Bulk create users",
                "operationId": "users-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.Request"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/user.BulkCreateResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Bulk delete users",
                "operationId": "users-bulk-delete",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.BulkDeleteRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "207": {
                        "description": "Multi-Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/user.BulkDeleteResponseItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/view-groups": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update view groups by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Bulk update view groups by id",
                "operationId": "viewgroups-bulk-update-by-id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.ViewGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create view groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Bulk create view groups",
                "operationId": "viewgroups-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.EditRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.EditRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete view groups by id",
                "tags": [
                    "viewgroups"
                ],
                "summary": "Bulk delete view groups by id",
                "operationId": "viewgroups-bulk-delete-by-id",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bulk/views": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk update views by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Bulk update views by id",
                "operationId": "views-bulk-update-by-id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/view.BulkUpdateRequestItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.View"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk create views",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Bulk create views",
                "operationId": "views-bulk-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/view.EditRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewgroup.View"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Bulk delete views by id",
                "tags": [
                    "views"
                ],
                "summary": "Bulk delete views by id",
                "operationId": "views-bulk-delete-by-id",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contextgraph/import": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create import task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contextgraph-import"
                ],
                "summary": "Create import task",
                "operationId": "contextgraph-import-create-import",
                "parameters": [
                    {
                        "type": "string",
                        "description": "source",
                        "name": "source",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contextgraph.ImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contextgraph.ImportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contextgraph/import/status/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get import status by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contextgraph-import"
                ],
                "summary": "Get import status by id",
                "operationId": "contextgraph-import-get-status-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "import id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contextgraph.ImportJob"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/data-storage": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get conf",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datastorage"
                ],
                "summary": "Get conf",
                "operationId": "datastorage-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastorage.DataStorage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update conf",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datastorage"
                ],
                "summary": "Update conf",
                "operationId": "datastorage-update",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datastorage.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/datastorage.DataStorage"
                        }
                    }
                }
            }
        },
        "/entities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of entities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Find entities",
                "operationId": "entities-find-all",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "name": "active_columns[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "no_events",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "paginate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_flags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.Entity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entities/clean": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Clean disabled entities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Clean disabled entities",
                "operationId": "entities-clean",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "archive",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "archive_dependencies",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entities/pbehaviors": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get list of pbehaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Find pbehaviors by entity id",
                "operationId": "pbehaviors-find-by-entity-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pbehavior.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of entity categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Find entity categories",
                "operationId": "entity-categories-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entitycategory.Category"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create entity category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Create entity category",
                "operationId": "entity-categories-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entitycategory.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entitycategory.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-categories/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity category by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Get entity category by id",
                "operationId": "entity-categories-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitycategory.Category"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update entity category by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-categories"
                ],
                "summary": "Update entity category by id",
                "operationId": "entity-categories-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entitycategory.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitycategory.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete entity category by id",
                "tags": [
                    "entity-categories"
                ],
                "summary": "Delete entity category by id",
                "operationId": "entity-categories-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-export": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start export entities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Start export entities",
                "operationId": "entities-export-start",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-export/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get status of export entities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Get status of export entities",
                "operationId": "entities-export-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entity-export/{id}/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get result of export entities",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Get result of export entities",
                "operationId": "entities-export-download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "export task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entitybasics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entitybasics"
                ],
                "summary": "Get entity by id",
                "operationId": "entitybasics-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitybasic.Entity"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update entity by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entitybasics"
                ],
                "summary": "Update entity by id",
                "operationId": "entitybasics-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entitybasic.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entitybasic.Entity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete entity by id",
                "tags": [
                    "entitybasics"
                ],
                "summary": "Delete entity by id",
                "operationId": "entitybasics-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity id",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservice-dependencies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity service's dependencies by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Get entity service's dependencies by id",
                "operationId": "entityservices-get-dependencies-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entityservice.AlarmWithEntity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservice-impacts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity's impacted services by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Get entity's impacted services by id",
                "operationId": "entityservices-get-impacts-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entityservice.AlarmWithEntity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservices": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create entity service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Create entity service",
                "operationId": "entityservices-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entityservice.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entityservice.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/entityservices/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get entity service by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Get entity service by id",
                "operationId": "entityservices-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entityservice.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update entity service by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entityservices"
                ],
                "summary": "Update entity service by id",
                "operationId": "entityservices-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entityservice.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entityservice.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete entity service by id",
                "tags": [
                    "entityservices"
                ],
                "summary": "Delete entity service by id",
                "operationId": "entityservices-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/event": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Send event/events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Send event/events",
                "operationId": "event-send",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/eventfilter/rules": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of eventfilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Find all eventfilter",
                "operationId": "eventfilters-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/eventfilter.EventFilter"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create eventfilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Create eventfilter",
                "operationId": "eventfilters-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/eventfilter/rules/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get eventfilter by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Get eventfilter by id",
                "operationId": "eventfilters-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "eventfilter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update eventfilter by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eventfilters"
                ],
                "summary": "Update eventfilter by id",
                "operationId": "eventfilters-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "eventfilter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/eventfilter.EventFilter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete eventfilter by id",
                "tags": [
                    "eventfilters"
                ],
                "summary": "Delete eventfilter by id",
                "operationId": "eventfilters-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "eventfilter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/file": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get list of file objects by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "List files by ID",
                "operationId": "files-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/file.File"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Upload files",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload files",
                "operationId": "file-upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "file visibility",
                        "name": "public",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/file.File"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/file-access": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get file access",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get file access",
                "operationId": "auth-get-file-access",
                "responses": {
                    "204": {}
                }
            }
        },
        "/file/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get file content by ID or download with file name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get file by ID",
                "operationId": "files-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete file by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Delete file",
                "operationId": "files-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flapping-rules": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of flapping rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flappingrules"
                ],
                "summary": "Find all flapping rule",
                "operationId": "flappingrules-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/flappingrule.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create flapping rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flappingrules"
                ],
                "summary": "Create flapping rule",
                "operationId": "flappingrules-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flappingrule.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/flappingrule.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flapping-rules/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get flapping rule by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flappingrules"
                ],
                "summary": "Get flapping rule by id",
                "operationId": "flappingrules-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "flapping rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flappingrule.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update flapping rule by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flappingrules"
                ],
                "summary": "Update flapping rule by id",
                "operationId": "flappingrules-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "flapping rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flappingrule.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flappingrule.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth` + "`" + `": []
                    }
                ],
                "description": "Delete flapping rule by id",
                "tags": [
                    "flappingrules"
                ],
                "summary": "Delete flapping rule by id",
                "operationId": "flappingrules-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "flapping rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/idle-rules": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of idle rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idle rules"
                ],
                "summary": "Find idle rules",
                "operationId": "idlerules-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/idlerule.Rule"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create idle rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Create idle rule",
                "operationId": "idlerules-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idlerule.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/idlerule.Rule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/idle-rules/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Count entities and alarm matching patterns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Count entities and alarm matching patterns",
                "operationId": "idlerules-countpatterns",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idlerule.CountByPatternRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/idlerule.CountByPatternResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/idle-rules/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get idle rule by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Get idle rule by id",
                "operationId": "idlerules-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/idlerule.Rule"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update idle rule by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idlerules"
                ],
                "summary": "Update idle rule by id",
                "operationId": "idlerules-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idlerule.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/idlerule.Rule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete idle rule by id",
                "tags": [
                    "idlerules"
                ],
                "summary": "Delete idle rule by id",
                "operationId": "idlerules-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/internal/user_interface": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "update user interface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "update user interface",
                "operationId": "internal-update-user-interface",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appinfo.UserInterfaceConf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/appinfo.UserInterfaceConf"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "delete user interface",
                "tags": [
                    "internal"
                ],
                "summary": "delete user interface",
                "operationId": "internal-delete-user-interface",
                "responses": {
                    "204": {}
                }
            }
        },
        "/logged-user-count": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get logged user count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get logged user count",
                "operationId": "auth-logged-user-count",
                "responses": {
                    "204": {}
                }
            }
        },
        "/login": {
            "post": {
                "description": "Log in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in",
                "operationId": "auth-login",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.loginResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Log out",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out",
                "operationId": "auth-logout",
                "responses": {
                    "204": {}
                }
            }
        },
        "/message-rate-stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message-rate-stats"
                ],
                "summary": "Find message rate stats",
                "operationId": "message-rate-stats-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messageratestats.StatsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get notification settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Get notification settings",
                "operationId": "notification-get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/notification.Notification"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update notification settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Update notification settings",
                "operationId": "notification-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-comments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-comments"
                ],
                "summary": "Create pbehavior comment",
                "operationId": "pbehavior-comments-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorcomment.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-comments/:id": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior comment by id",
                "tags": [
                    "pbehavior-comments"
                ],
                "summary": "Delete pbehavior comment by id",
                "operationId": "pbehavior-comment-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-exceptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of behavior exceptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Find all pbehavior exceptions",
                "operationId": "pbehavior-exceptions-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with flags",
                        "name": "with_flags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehaviorexception.Exception"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior exception",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Create pbehavior exception",
                "operationId": "pbehavior-exceptions-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Exception"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-exceptions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior exception by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Get pbehavior exception by id",
                "operationId": "pbehavior-exceptions-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "exception id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Exception"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior exception by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Update behavior exception by id",
                "operationId": "pbehavior-exceptions-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "exception id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorexception.Exception"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior exception by id",
                "tags": [
                    "pbehavior-exceptions"
                ],
                "summary": "Delete pbehavior exception by id",
                "operationId": "pbehavior-exceptions-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "exception id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-ics/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior ICS by id",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "pbehavior-ics"
                ],
                "summary": "Get pbehavior ICS by id",
                "operationId": "pbehavior-ics-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-reasons": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of behavior reasons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Find pbehavior reasons",
                "operationId": "pbehavior-reasons-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with flags",
                        "name": "with_flags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehaviorreason.Reason"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Create pbehavior reason",
                "operationId": "pbehavior-reasons-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Reason"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-reasons/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior reason by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Get pbehavior reason by id",
                "operationId": "pbehavior-reasons-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reason id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Reason"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior reason by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Update behavior reason by id",
                "operationId": "pbehavior-reasons-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reason id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehaviorreason.Reason"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior reason by id",
                "tags": [
                    "pbehavior-reasons"
                ],
                "summary": "Delete pbehavior reason by id",
                "operationId": "pbehavior-reasons-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reason id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-timespans": {
            "post": {
                "description": "Get time spans of calendar event within view span; {by_date: false} adds exception spans with types, {by_date: true} merges adjacent spans if gap between sequential ones less than 24 hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-timespans"
                ],
                "summary": "Get all pbehavior timespans",
                "operationId": "pbehavior-timespans-get-all",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviortimespan.TimespansRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pbehaviortimespan.timespansItemResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-types": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of behavior types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Find pbehavior types",
                "operationId": "pbehavior-types-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with flags",
                        "name": "with_flags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehavior.Type"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Create pbehavior type",
                "operationId": "pbehavior-types-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviortype.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehavior-types/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior type by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Get pbehavior type by id",
                "operationId": "pbehavior-types-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Type"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Update behavior type by id",
                "operationId": "pbehavior-types-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehaviortype.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior type by id",
                "tags": [
                    "pbehavior-types"
                ],
                "summary": "Delete pbehavior type by id",
                "operationId": "pbehavior-types-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of pbehaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Find all pbehaviors",
                "operationId": "pbehaviors-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pbehavior.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create pbehavior",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Create pbehavior",
                "operationId": "pbehaviors-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehavior.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior by name",
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Delete pbehavior by name",
                "operationId": "pbehaviors-delete-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors/count": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Count entities matching filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Count entities matching filter",
                "operationId": "pbehaviors-countfilter",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehavior.FilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.CountFilterResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get pbehavior by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Get pbehavior by id",
                "operationId": "pbehaviors-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update behavior by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Update behavior by id",
                "operationId": "pbehaviors-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehavior.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete pbehavior by id",
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Delete pbehavior by id",
                "operationId": "pbehaviors-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Patch partial set of behavior attributes by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Patch partial set of behavior attributes by id",
                "operationId": "pbehaviors-patch-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pbehavior.PatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pbehavior.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pbehaviors/{id}/entities": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Find entities by pbehavior id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pbehaviors"
                ],
                "summary": "Find entities by pbehavior id",
                "operationId": "pbehaviors-find-entities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pbehavior id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.Entity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Find permissions",
                "operationId": "permissions-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/permission.Permission"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Find all playlist",
                "operationId": "playlists-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/playlist.Playlist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Create playlist",
                "operationId": "playlists-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get playlist by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get playlist by id",
                "operationId": "playlists-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "playlist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update playlist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Update playlist by id",
                "operationId": "playlists-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "playlist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete playlist by id",
                "tags": [
                    "playlists"
                ],
                "summary": "Delete playlist by id",
                "operationId": "playlists-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "playlist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/resolve-rules": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of resolve rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resolverules"
                ],
                "summary": "Find all resolve rule",
                "operationId": "resolverules-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/resolverule.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create resolve rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resolverules"
                ],
                "summary": "Create resolve rule",
                "operationId": "resolverules-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resolverule.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/resolverule.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/resolve-rules/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get resolve rule by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resolverules"
                ],
                "summary": "Get resolve rule by id",
                "operationId": "resolverules-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "resolve rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resolverule.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update resolve rule by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resolverules"
                ],
                "summary": "Update resolve rule by id",
                "operationId": "resolverules-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "resolve rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resolverule.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resolverule.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth` + "`" + `": []
                    }
                ],
                "description": "Delete resolve rule by id",
                "tags": [
                    "resolverules"
                ],
                "summary": "Delete resolve rule by id",
                "operationId": "resolverules-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "resolve rule id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Find roles",
                "operationId": "roles-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/role.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create role",
                "operationId": "roles-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/role.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get role by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get role by id",
                "operationId": "roles-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/role.Role"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update role by id",
                "operationId": "roles-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/role.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete role by id",
                "tags": [
                    "roles"
                ],
                "summary": "Delete role by id",
                "operationId": "roles-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of scenarios",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Find scenarios",
                "operationId": "scenarios-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/scenario.Scenario"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create scenario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Create scenario",
                "operationId": "scenarios-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/scenario.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/scenario.Scenario"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/check-priority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Check priority",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Check priority",
                "operationId": "scenarios-check-priority",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/scenario.CheckPriorityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/scenario.CheckPriorityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/minimal-priority": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get minimal priority",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Get minimal priority",
                "operationId": "scenarios-get-minimal-priority",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/scenario.GetMinimalPriorityResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get scenario by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Get scenario by id",
                "operationId": "scenarios-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "scenario id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/scenario.Scenario"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update scenario by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Update scenario by id",
                "operationId": "scenarios-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "scenario id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/scenario.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/scenario.Scenario"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete scenario by id",
                "tags": [
                    "scenarios"
                ],
                "summary": "Delete scenario by id",
                "operationId": "scenarios-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "scenario id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/state-settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of state settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "state-settings"
                ],
                "summary": "Find all state settings for a widget",
                "operationId": "state-settings-list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/statesettings.StateSetting"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/state-settings/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update state setting type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "state-settings"
                ],
                "summary": "Update state setting type by id",
                "operationId": "state-settings-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/statesettings.StateSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statesettings.StateSetting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user-preferences": {
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update user preferences by widget id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userpreference"
                ],
                "summary": "Update user preferences by widget id",
                "operationId": "userpreference-update-by-widget-id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userpreferences.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userpreferences.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user-preferences/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get user preferences by widget id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userpreference"
                ],
                "summary": "Get user preferences by widget id",
                "operationId": "userpreference-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "widget id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userpreferences.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Find users",
                "operationId": "users-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "role permission",
                        "name": "permission",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "operationId": "users-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get user by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by id",
                "operationId": "users-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user by id",
                "operationId": "users-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete user by id",
                "tags": [
                    "users"
                ],
                "summary": "Delete user by id",
                "operationId": "users-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/view-groups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of view groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Find view groups",
                "operationId": "viewgroups-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/viewgroup.ViewGroup"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create view group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Create view group",
                "operationId": "viewgroups-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewgroup.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.ViewGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/view-groups/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get view group by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Get view group by id",
                "operationId": "viewgroups-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "viewgroup id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.ViewGroup"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update view group by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "viewgroups"
                ],
                "summary": "Update view group by id",
                "operationId": "viewgroups-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewgroup.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.ViewGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete view group by id",
                "tags": [
                    "viewgroups"
                ],
                "summary": "Delete view group by id",
                "operationId": "viewgroups-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/view-positions": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update views positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Update views positions",
                "operationId": "views-update-positions",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/view.EditPositionItemRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/views": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of views",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Find views",
                "operationId": "views-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/viewgroup.View"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create view",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Create view",
                "operationId": "views-create",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/views/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get view by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Get view by id",
                "operationId": "views-get-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.View"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update view by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Update view by id",
                "operationId": "views-update-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.EditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewgroup.View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete view by id",
                "tags": [
                    "views"
                ],
                "summary": "Delete view by id",
                "operationId": "views-delete-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "view id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/weather-services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weather-services"
                ],
                "summary": "Find all services",
                "operationId": "weather-services-find-all",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter query",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/serviceweather.Service"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        },
        "/weather-services/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get paginated list of entities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weather-services"
                ],
                "summary": "Find all entity by service id",
                "operationId": "weather-services-find-all-entities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort query",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "show assigned instructions and execution flags",
                        "name": "with_instructions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.PaginatedListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/serviceweather.Entity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "authkey": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "object",
                    "$ref": "#/definitions/user.View"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "external_id": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role.Permission"
                    }
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user.Role"
                },
                "source": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "action.Parameters": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "declare_ticket": {
                    "type": "object",
                    "$ref": "#/definitions/types.WebhookDeclareTicket"
                },
                "duration": {
                    "description": "Snooze and Pbehavior",
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "forward_author": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Pbehavior",
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "request": {
                    "description": "Webhook",
                    "type": "object",
                    "$ref": "#/definitions/types.WebhookRequest"
                },
                "retry_count": {
                    "type": "integer"
                },
                "retry_delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "rrule": {
                    "type": "string"
                },
                "start_on_trigger": {
                    "type": "boolean"
                },
                "state": {
                    "description": "ChangeState",
                    "type": "integer"
                },
                "ticket": {
                    "description": "AssocTicket",
                    "type": "string"
                },
                "tstart": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "tstop": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "alarm.Alarm": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "assigned_instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.InstructionWithAlarms"
                    }
                },
                "causes": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Causes"
                },
                "children_instructions": {
                    "type": "boolean"
                },
                "consequences": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Children"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Entity"
                },
                "filtered_children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_state": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "is_all_auto_instructions_completed": {
                    "type": "boolean"
                },
                "is_auto_instruction_running": {
                    "type": "boolean"
                },
                "is_manual_instruction_running": {
                    "type": "boolean"
                },
                "is_manual_instruction_waiting_result": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "additionalProperties": true
                },
                "metaalarm": {
                    "type": "boolean"
                },
                "pbehavior": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Pbehavior"
                },
                "rule": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.MetaAlarmRule"
                },
                "t": {
                    "type": "integer"
                },
                "v": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmValue"
                }
            }
        },
        "alarm.AlarmStep": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "initiator": {
                    "type": "string"
                },
                "m": {
                    "type": "string"
                },
                "statecounter": {
                    "type": "object",
                    "$ref": "#/definitions/types.CropCounter"
                },
                "t": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "val": {
                    "type": "integer"
                }
            }
        },
        "alarm.AlarmTicket": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "m": {
                    "type": "string"
                },
                "t": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "val": {
                    "type": "string"
                }
            }
        },
        "alarm.AlarmValue": {
            "type": "object",
            "properties": {
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "activation_date": {
                    "type": "integer"
                },
                "active_duration": {
                    "type": "integer"
                },
                "canceled": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "integer"
                },
                "current_state_duration": {
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "done": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "duration": {
                    "type": "integer"
                },
                "events_count": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "infos_rule_version": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "initial_long_output": {
                    "type": "string"
                },
                "initial_output": {
                    "type": "string"
                },
                "lastComment": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "last_event_date": {
                    "type": "integer"
                },
                "last_update_date": {
                    "type": "integer"
                },
                "long_output": {
                    "type": "string"
                },
                "long_output_history": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meta": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/entity.PbehaviorInfo"
                },
                "pbh_inactive_duration": {
                    "type": "integer"
                },
                "resolved": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "snooze_duration": {
                    "type": "integer"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "state_changes_since_status_update": {
                    "type": "integer"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.AlarmStep"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmTicket"
                },
                "total_state_changes": {
                    "type": "integer"
                }
            }
        },
        "alarm.Causes": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.MetaAlarmRule"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "alarm.Children": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.Alarm"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "alarm.Count": {
            "type": "object",
            "properties": {
                "ack": {
                    "type": "integer"
                },
                "pbehavior_active": {
                    "type": "integer"
                },
                "snooze": {
                    "type": "integer"
                },
                "ticket": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_active": {
                    "type": "integer"
                }
            }
        },
        "alarm.Execution": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "alarm.ExportRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "correlation": {
                    "type": "boolean"
                },
                "exclude_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exclude_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fields": {
                    "type": "object",
                    "$ref": "#/definitions/export.Fields"
                },
                "filter": {
                    "type": "string"
                },
                "include_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "include_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manual": {
                    "type": "boolean"
                },
                "opened": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                },
                "time_field": {
                    "type": "string"
                },
                "time_format": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "with_consequences": {
                    "type": "boolean"
                },
                "with_steps": {
                    "type": "boolean"
                }
            }
        },
        "alarm.ExportResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "alarm.FilterRequest": {
            "type": "object",
            "properties": {
                "active_columns[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "correlation": {
                    "type": "boolean"
                },
                "exclude_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exclude_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string"
                },
                "include_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "include_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manual": {
                    "type": "boolean"
                },
                "opened": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "time_field": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                }
            }
        },
        "alarm.InstructionWithAlarms": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "execution": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.Execution"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "alarm.ListRequestWithPagination": {
            "type": "object",
            "properties": {
                "active_columns[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "correlation": {
                    "type": "boolean"
                },
                "exclude_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "exclude_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "type": "string"
                },
                "include_instruction_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "include_instructions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "manual": {
                    "type": "boolean"
                },
                "multi_sort[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "opened": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "paginate": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "sort_dir": {
                    "type": "string"
                },
                "sort_key": {
                    "type": "string"
                },
                "time_field": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "with_consequences": {
                    "type": "boolean"
                },
                "with_instructions": {
                    "type": "boolean"
                },
                "with_steps": {
                    "type": "boolean"
                }
            }
        },
        "alarm.MetaAlarmRule": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "alarm.Pbehavior": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "comments": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Comments"
                },
                "name": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                }
            }
        },
        "appinfo.AppInfoResponse": {
            "type": "object",
            "properties": {
                "allow_change_severity_to_info": {
                    "type": "boolean"
                },
                "app_title": {
                    "type": "string"
                },
                "check_count_request_timeout": {
                    "type": "integer"
                },
                "edition": {
                    "type": "string"
                },
                "file_upload_max_size": {
                    "type": "integer"
                },
                "footer": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "login": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConf"
                },
                "login_page_description": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "max_matched_items": {
                    "type": "integer"
                },
                "popup_timeout": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.PopupTimeout"
                },
                "remediation": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.RemediationConf"
                },
                "stack": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "appinfo.JobConfigType": {
            "type": "object",
            "properties": {
                "auth_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "appinfo.LoginConf": {
            "type": "object",
            "properties": {
                "casconfig": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConfigMethod"
                },
                "ldapconfig": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConfigMethod"
                },
                "saml2config": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.LoginConfigMethod"
                }
            }
        },
        "appinfo.LoginConfigMethod": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "appinfo.PopupTimeout": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                }
            }
        },
        "appinfo.RemediationConf": {
            "type": "object",
            "properties": {
                "job_config_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appinfo.JobConfigType"
                    }
                }
            }
        },
        "appinfo.UserInterfaceConf": {
            "type": "object",
            "properties": {
                "allow_change_severity_to_info": {
                    "type": "boolean"
                },
                "app_title": {
                    "type": "string"
                },
                "check_count_request_timeout": {
                    "type": "integer"
                },
                "footer": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "login_page_description": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "max_matched_items": {
                    "type": "integer"
                },
                "popup_timeout": {
                    "type": "object",
                    "$ref": "#/definitions/appinfo.PopupTimeout"
                }
            }
        },
        "associativetable.AssociativeTable": {
            "type": "object",
            "required": [
                "content",
                "name"
            ],
            "properties": {
                "content": {
                    "type": "object",
                    "$ref": "#/definitions/associativetable.Content"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "associativetable.Content": {
            "type": "object"
        },
        "auth.loginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.loginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "broadcastmessage.BroadcastMessage": {
            "type": "object",
            "required": [
                "color",
                "end",
                "message",
                "start"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "broadcastmessage.Payload": {
            "type": "object",
            "required": [
                "color",
                "end",
                "message",
                "start"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "common.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "common.PaginatedListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "meta": {
                    "type": "object",
                    "$ref": "#/definitions/common.PaginatedMeta"
                }
            }
        },
        "common.PaginatedMeta": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_count": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "common.User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "common.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "config.TimezoneConfig": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                }
            }
        },
        "contextgraph.ImportJob": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "creation": {
                    "type": "string"
                },
                "exec_time": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "stats": {
                    "type": "object",
                    "$ref": "#/definitions/importcontextgraph.Stats"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "contextgraph.ImportRequest": {
            "type": "object",
            "properties": {
                "json": {
                    "type": "object",
                    "properties": {
                        "cis": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/importcontextgraph.ConfigurationItem"
                            }
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/importcontextgraph.Link"
                            }
                        }
                    }
                }
            }
        },
        "contextgraph.ImportResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "datastorage.Config": {
            "type": "object",
            "properties": {
                "alarm": {
                    "type": "object",
                    "properties": {
                        "archive_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        },
                        "delete_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        }
                    }
                },
                "health_check": {
                    "type": "object",
                    "properties": {
                        "delete_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        }
                    }
                },
                "junit": {
                    "type": "object",
                    "properties": {
                        "delete_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        }
                    }
                },
                "pbehavior": {
                    "type": "object",
                    "properties": {
                        "delete_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        }
                    }
                },
                "remediation": {
                    "type": "object",
                    "properties": {
                        "accumulate_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        },
                        "delete_after": {
                            "type": "object",
                            "$ref": "#/definitions/types.DurationWithEnabled"
                        }
                    }
                }
            }
        },
        "datastorage.DataStorage": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "$ref": "#/definitions/datastorage.Config"
                },
                "history": {
                    "type": "object",
                    "$ref": "#/definitions/datastorage.History"
                }
            }
        },
        "datastorage.History": {
            "type": "object",
            "properties": {
                "alarm": {
                    "type": "object",
                    "$ref": "#/definitions/datastorage.HistoryWithCount"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/datastorage.HistoryWithCount"
                },
                "health_check": {
                    "type": "integer"
                },
                "junit": {
                    "type": "integer"
                },
                "pbehavior": {
                    "type": "integer"
                },
                "remediation": {
                    "type": "integer"
                }
            }
        },
        "datastorage.HistoryWithCount": {
            "type": "object",
            "properties": {
                "archived": {
                    "type": "integer"
                },
                "deleted": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "entity.CleanRequest": {
            "type": "object",
            "required": [
                "archive"
            ],
            "properties": {
                "archive": {
                    "type": "boolean"
                },
                "archive_dependencies": {
                    "type": "boolean"
                }
            }
        },
        "entity.Entity": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "component_infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "deletable": {
                    "type": "boolean"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enable_history": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "ko_events": {
                    "type": "integer"
                },
                "last_event_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "measurements": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "ok_events": {
                    "type": "integer"
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/entity.PbehaviorInfo"
                },
                "state": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.ExportRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "$ref": "#/definitions/export.Fields"
                },
                "filter": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                }
            }
        },
        "entity.ExportResponse": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "entity.Info": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "entity.Infos": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/entity.Info"
            }
        },
        "entity.ListRequestWithPagination": {
            "type": "object",
            "properties": {
                "active_columns[]": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "filter": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "no_events": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "paginate": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "sort_by": {
                    "type": "string"
                },
                "with_flags": {
                    "type": "boolean"
                }
            }
        },
        "entity.PbehaviorInfo": {
            "type": "object",
            "properties": {
                "canonical_type": {
                    "description": "CanonicalType is Type of pbehavior.Type.",
                    "type": "string"
                },
                "icon_name": {
                    "type": "string"
                },
                "id": {
                    "description": "ID is ID of pbehavior.PBehavior.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is Name of pbehavior.PBehavior.",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason is Name of pbehavior.Reason.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp is time when entity enters pbehavior.\nUse pointer of CpsTime to unmarshal null and undefined to nil pointer instead of zero CpsTime.",
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "type": {
                    "description": "TypeID is ID of pbehavior.Type.",
                    "type": "string"
                },
                "type_name": {
                    "description": "TypeName is Name of pbehavior.Type.",
                    "type": "string"
                }
            }
        },
        "entitybasic.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "impact_level",
                "sli_avail_state"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entitybasic.InfoRequest"
                    }
                },
                "sli_avail_state": {
                    "type": "integer"
                }
            }
        },
        "entitybasic.Entity": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "changeable_depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "changeable_impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "type": "string"
                },
                "component_infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "deletable": {
                    "type": "boolean"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enable_history": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "ko_events": {
                    "type": "integer"
                },
                "last_event_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "measurements": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "ok_events": {
                    "type": "integer"
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/entity.PbehaviorInfo"
                },
                "sli_avail_state": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entitybasic.InfoRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "entitycategory.Category": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "entitycategory.EditRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "entityservice.AlarmWithEntity": {
            "type": "object",
            "properties": {
                "alarm": {
                    "type": "object",
                    "$ref": "#/definitions/types.Alarm"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Entity"
                },
                "has_dependencies": {
                    "type": "boolean"
                },
                "has_impacts": {
                    "type": "boolean"
                },
                "impact_state": {
                    "type": "integer"
                }
            }
        },
        "entityservice.BulkCreateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entityservice.CreateRequest"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "entityservice.BulkDeleteRequestItem": {
            "type": "object",
            "required": [
                "_id"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "entityservice.BulkDeleteResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entityservice.BulkDeleteRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "entityservice.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "enabled",
                "impact_level",
                "name",
                "output_template",
                "sli_avail_state"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entitybasic.InfoRequest"
                    }
                },
                "name": {
                    "type": "string"
                },
                "output_template": {
                    "type": "string"
                },
                "sli_avail_state": {
                    "type": "integer"
                }
            }
        },
        "entityservice.BulkUpdateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entityservice.BulkUpdateRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "entityservice.CreateRequest": {
            "type": "object",
            "required": [
                "enabled",
                "impact_level",
                "name",
                "output_template",
                "sli_avail_state"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entitybasic.InfoRequest"
                    }
                },
                "name": {
                    "type": "string"
                },
                "output_template": {
                    "type": "string"
                },
                "sli_avail_state": {
                    "type": "integer"
                }
            }
        },
        "entityservice.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "impact_level",
                "name",
                "output_template",
                "sli_avail_state"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entitybasic.InfoRequest"
                    }
                },
                "name": {
                    "type": "string"
                },
                "output_template": {
                    "type": "string"
                },
                "sli_avail_state": {
                    "type": "integer"
                }
            }
        },
        "entityservice.Response": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "component_infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "deletable": {
                    "type": "boolean"
                },
                "depends": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enable_history": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Infos"
                },
                "ko_events": {
                    "type": "integer"
                },
                "last_event_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "measurements": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "ok_events": {
                    "type": "integer"
                },
                "output_template": {
                    "type": "string"
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/entity.PbehaviorInfo"
                },
                "sli_avail_state": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "event.Event": {
            "type": "object",
            "properties": {
                "component": {
                    "type": "string",
                    "example": "test_component"
                },
                "connector": {
                    "type": "string",
                    "example": "test_connector"
                },
                "connector_name": {
                    "type": "string",
                    "example": "test_connectorname"
                },
                "event_type": {
                    "type": "string",
                    "example": "check"
                },
                "resource": {
                    "type": "string",
                    "example": "test_resource"
                },
                "source_type": {
                    "type": "string",
                    "example": "resource"
                },
                "state": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "event.Response": {
            "type": "object",
            "properties": {
                "failed_events": {
                    "description": "FailedEvents is an empty array left for compatibility with old handler",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "retry_events": {
                    "description": "RetryEvents is an empty array left for compatibility with old handler",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "sent_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/event.Event"
                    }
                }
            }
        },
        "eventfilter.Action": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "eventfilter.BulkCreateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/eventfilter.EventFilter"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventfilter.BulkDeleteRequestItem": {
            "type": "object",
            "required": [
                "_id"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "eventfilter.BulkDeleteResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/eventfilter.BulkDeleteRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventfilter.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "description",
                "enabled",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/eventfilter.Action"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "external_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "on_failure": {
                    "type": "string"
                },
                "on_success": {
                    "type": "string"
                },
                "patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EventPatternList"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "eventfilter.BulkUpdateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/eventfilter.BulkUpdateRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventfilter.EventFilter": {
            "type": "object",
            "required": [
                "description",
                "enabled",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/eventfilter.Action"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "external_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "on_failure": {
                    "type": "string"
                },
                "on_success": {
                    "type": "string"
                },
                "patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EventPatternList"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "export.Field": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "export.Fields": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/export.Field"
            }
        },
        "file.File": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "filename": {
                    "type": "string"
                },
                "mediatype": {
                    "type": "string"
                }
            }
        },
        "flappingrule.CreateRequest": {
            "type": "object",
            "required": [
                "duration",
                "freq_limit",
                "name",
                "priority"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "freq_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "flappingrule.Response": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "author": {
                    "type": "object",
                    "$ref": "#/definitions/common.User"
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "freq_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "flappingrule.UpdateRequest": {
            "type": "object",
            "required": [
                "duration",
                "freq_limit",
                "name",
                "priority"
            ],
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "freq_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "http.Response": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "close": {
                    "type": "boolean"
                },
                "contentLength": {
                    "type": "integer"
                },
                "header": {
                    "type": "Header"
                },
                "proto": {
                    "type": "string"
                },
                "protoMajor": {
                    "type": "integer"
                },
                "protoMinor": {
                    "type": "integer"
                },
                "request": {
                    "type": "Request"
                },
                "status": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "tls": {
                    "type": "string"
                },
                "trailer": {
                    "type": "Header"
                },
                "transferEncoding": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uncompressed": {
                    "type": "boolean"
                }
            }
        },
        "idlerule.BulkCreateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.CreateRequest"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "idlerule.BulkDeleteRequestItem": {
            "type": "object",
            "required": [
                "_id"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "idlerule.BulkDeleteResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.BulkDeleteRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "idlerule.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "duration",
                "enabled",
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_condition": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.OperationRequest"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.BulkUpdateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.BulkUpdateRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "idlerule.CountByPatternRequest": {
            "type": "object",
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                }
            }
        },
        "idlerule.CountByPatternResult": {
            "type": "object",
            "properties": {
                "over_limit": {
                    "type": "boolean"
                },
                "total_count_alarms": {
                    "type": "integer"
                },
                "total_count_entities": {
                    "type": "integer"
                }
            }
        },
        "idlerule.CreateRequest": {
            "type": "object",
            "required": [
                "duration",
                "enabled",
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_condition": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.OperationRequest"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.EditRequest": {
            "type": "object",
            "required": [
                "duration",
                "enabled",
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "alarm_condition": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.OperationRequest"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.Operation": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.Parameters"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.OperationRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "parameters": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.Parameters"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.Parameters": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "Snooze and Pbehavior",
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "name": {
                    "description": "Pbehavior",
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "start_on_trigger": {
                    "type": "boolean"
                },
                "state": {
                    "description": "ChangeState",
                    "type": "integer"
                },
                "ticket": {
                    "description": "AssocTicket",
                    "type": "string"
                },
                "tstart": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "tstop": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "idlerule.Rule": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_condition": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "description": "Only for Alarm rules",
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "description": {
                    "type": "string"
                },
                "disable_during_periods": {
                    "description": "DisableDuringPeriods is an option that allows to disable the rule\nwhen entity is in listed periods due pbehavior schedule.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "object",
                    "$ref": "#/definitions/idlerule.Operation"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                }
            }
        },
        "importcontextgraph.ConfigurationItem": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "action_properties": {
                    "type": "object"
                },
                "category": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "impact_level": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": true
                },
                "measurements": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "name": {
                    "type": "string"
                },
                "output_template": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "importcontextgraph.Link": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "action_properties": {
                    "type": "object"
                },
                "from": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": true
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "importcontextgraph.Stats": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "messageratestats.ListRequest": {
            "type": "object",
            "required": [
                "from",
                "interval",
                "to"
            ],
            "properties": {
                "from": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string"
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "messageratestats.StatsListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/messageratestats.StatsResponse"
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "deleted_before": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "messageratestats.StatsResponse": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "notification.InstructionNotification": {
            "type": "object",
            "required": [
                "rate",
                "rate_frequency"
            ],
            "properties": {
                "rate": {
                    "type": "boolean"
                },
                "rate_frequency": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                }
            }
        },
        "notification.Notification": {
            "type": "object",
            "properties": {
                "instruction": {
                    "type": "object",
                    "$ref": "#/definitions/notification.InstructionNotification"
                }
            }
        },
        "pattern.AlarmPatternList": {
            "type": "object"
        },
        "pattern.EntityPatternList": {
            "type": "object"
        },
        "pattern.EventPatternList": {
            "type": "object"
        },
        "pbehavior.BulkCreateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.CreateRequest"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pbehavior.BulkDeleteRequestItem": {
            "type": "object",
            "required": [
                "_id"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "pbehavior.BulkDeleteResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.BulkDeleteRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pbehavior.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "enabled",
                "filter",
                "name",
                "reason",
                "tstart",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.ExdateRequest"
                    }
                },
                "filter": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehavior.BulkUpdateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.BulkUpdateRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pbehavior.Comment": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "ts": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                }
            }
        },
        "pbehavior.Comments": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/pbehavior.Comment"
            }
        },
        "pbehavior.CountFilterResult": {
            "type": "object",
            "properties": {
                "over_limit": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "pbehavior.CreateRequest": {
            "type": "object",
            "required": [
                "enabled",
                "filter",
                "name",
                "reason",
                "tstart",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.ExdateRequest"
                    }
                },
                "filter": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehavior.Filter": {
            "type": "object"
        },
        "pbehavior.FilterRequest": {
            "type": "object",
            "required": [
                "filter"
            ],
            "properties": {
                "filter": {
                    "type": "object"
                }
            }
        },
        "pbehavior.PatchRequest": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.ExdateRequest"
                    }
                },
                "filter": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehavior.Reason": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehavior.Response": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "comments": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Comments"
                },
                "created": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.Exception"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.Exdate"
                    }
                },
                "filter": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Filter"
                },
                "is_active_status": {
                    "description": "IsActiveStatus represents if pbehavior is in action for current time.",
                    "type": "boolean"
                },
                "last_alarm_date": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "object",
                    "$ref": "#/definitions/pbehaviorreason.Reason"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "pbehavior.Type": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehavior.UpdateRequest": {
            "type": "object",
            "required": [
                "enabled",
                "filter",
                "name",
                "reason",
                "tstart",
                "type"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.ExdateRequest"
                    }
                },
                "filter": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "rrule": {
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviorcomment.Request": {
            "type": "object",
            "required": [
                "message",
                "pbehavior"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "pbehavior": {
                    "type": "string"
                }
            }
        },
        "pbehaviorexception.Exception": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "deletable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.Exdate"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviorexception.Exdate": {
            "type": "object",
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                }
            }
        },
        "pbehaviorexception.ExdateRequest": {
            "type": "object",
            "required": [
                "begin",
                "end",
                "type"
            ],
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviorexception.Request": {
            "type": "object",
            "required": [
                "description",
                "exdates",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviorexception.ExdateRequest"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviorreason.Reason": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "deletable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviorreason.Request": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pbehaviortimespan.ExdateRequest": {
            "type": "object",
            "required": [
                "begin",
                "end"
            ],
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviortimespan.TimespansRequest": {
            "type": "object",
            "required": [
                "start_at",
                "view_from",
                "view_to"
            ],
            "properties": {
                "by_date": {
                    "type": "boolean"
                },
                "end_at": {
                    "type": "integer"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehaviortimespan.ExdateRequest"
                    }
                },
                "rrule": {
                    "type": "string"
                },
                "start_at": {
                    "type": "integer"
                },
                "view_from": {
                    "type": "integer"
                },
                "view_to": {
                    "type": "integer"
                }
            }
        },
        "pbehaviortimespan.timespansItemResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                }
            }
        },
        "pbehaviortype.EditRequest": {
            "type": "object",
            "required": [
                "description",
                "icon_name",
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pbehaviortype.Type": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "deletable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "editable": {
                    "type": "boolean"
                },
                "icon_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "permission.Permission": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "playlist.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "fullscreen",
                "interval",
                "name",
                "tabs_list"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "fullscreen": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "name": {
                    "type": "string"
                },
                "tabs_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "playlist.Playlist": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "fullscreen": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "name": {
                    "type": "string"
                },
                "tabs_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "resolverule.CreateRequest": {
            "type": "object",
            "required": [
                "duration",
                "name",
                "priority"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "resolverule.Response": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "author": {
                    "type": "object",
                    "$ref": "#/definitions/common.User"
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "resolverule.UpdateRequest": {
            "type": "object",
            "required": [
                "duration",
                "name",
                "priority"
            ],
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "role.CreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "defaultview": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "role.EditRequest": {
            "type": "object",
            "properties": {
                "defaultview": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "role.Permission": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "role.Role": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role.Permission"
                    }
                }
            }
        },
        "scenario.Action": {
            "type": "object",
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "comment": {
                    "type": "string"
                },
                "drop_scenario_if_not_matched": {
                    "type": "boolean"
                },
                "emit_trigger": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "parameters": {
                    "type": "object",
                    "$ref": "#/definitions/scenario.Parameters"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "scenario.ActionRequest": {
            "type": "object",
            "required": [
                "drop_scenario_if_not_matched",
                "emit_trigger",
                "type"
            ],
            "properties": {
                "alarm_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.AlarmPatternList"
                },
                "comment": {
                    "type": "string"
                },
                "drop_scenario_if_not_matched": {
                    "type": "boolean"
                },
                "emit_trigger": {
                    "type": "boolean"
                },
                "entity_patterns": {
                    "type": "object",
                    "$ref": "#/definitions/pattern.EntityPatternList"
                },
                "parameters": {
                    "type": "object",
                    "$ref": "#/definitions/action.Parameters"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "scenario.BulkCreateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/scenario.CreateRequest"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "scenario.BulkDeleteRequestItem": {
            "type": "object",
            "required": [
                "_id"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "scenario.BulkDeleteResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/scenario.BulkDeleteRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "scenario.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "actions",
                "author",
                "enabled",
                "name",
                "triggers"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scenario.ActionRequest"
                    }
                },
                "author": {
                    "type": "string"
                },
                "delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "scenario.BulkUpdateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/scenario.BulkUpdateRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "scenario.CheckPriorityRequest": {
            "type": "object",
            "required": [
                "priority"
            ],
            "properties": {
                "priority": {
                    "type": "integer"
                }
            }
        },
        "scenario.CheckPriorityResponse": {
            "type": "object",
            "properties": {
                "recommended_priority": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "scenario.CreateRequest": {
            "type": "object",
            "required": [
                "actions",
                "author",
                "enabled",
                "name",
                "triggers"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scenario.ActionRequest"
                    }
                },
                "author": {
                    "type": "string"
                },
                "delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "scenario.EditRequest": {
            "type": "object",
            "required": [
                "actions",
                "author",
                "enabled",
                "name",
                "triggers"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scenario.ActionRequest"
                    }
                },
                "author": {
                    "type": "string"
                },
                "delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "scenario.GetMinimalPriorityResponse": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                }
            }
        },
        "scenario.Parameters": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "declare_ticket": {
                    "type": "object",
                    "$ref": "#/definitions/types.WebhookDeclareTicket"
                },
                "duration": {
                    "description": "Snooze and Pbehavior",
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "forward_author": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Pbehavior",
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "reason": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Reason"
                },
                "request": {
                    "description": "Webhook",
                    "type": "object",
                    "$ref": "#/definitions/types.WebhookRequest"
                },
                "retry_count": {
                    "type": "integer"
                },
                "retry_delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "rrule": {
                    "type": "string"
                },
                "start_on_trigger": {
                    "type": "boolean"
                },
                "state": {
                    "description": "ChangeState",
                    "type": "integer"
                },
                "ticket": {
                    "description": "AssocTicket",
                    "type": "string"
                },
                "tstart": {
                    "type": "integer"
                },
                "tstop": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehavior.Type"
                }
            }
        },
        "scenario.Scenario": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scenario.Action"
                    }
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "delay": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithUnit"
                },
                "disable_during_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "serviceweather.AlarmCounter": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/pbehaviortype.Type"
                }
            }
        },
        "serviceweather.Entity": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "alarm_creation_date": {
                    "type": "integer"
                },
                "alarm_display_name": {
                    "type": "string"
                },
                "alarm_id": {
                    "type": "string"
                },
                "assigned_instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alarm.InstructionWithAlarms"
                    }
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact_level": {
                    "type": "integer"
                },
                "impact_state": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/serviceweather.Info"
                    }
                },
                "is_all_auto_instructions_completed": {
                    "type": "boolean"
                },
                "is_auto_instruction_running": {
                    "type": "boolean"
                },
                "is_grey": {
                    "type": "boolean"
                },
                "is_manual_instruction_running": {
                    "type": "boolean"
                },
                "is_manual_instruction_waiting_result": {
                    "type": "boolean"
                },
                "last_update_date": {
                    "type": "integer"
                },
                "linklist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/serviceweather.WeatherLink"
                    }
                },
                "name": {
                    "type": "string"
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/types.PbehaviorInfo"
                },
                "pbehaviors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehavior.Response"
                    }
                },
                "resource": {
                    "type": "string"
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "source_type": {
                    "type": "string"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "stats": {
                    "type": "object",
                    "$ref": "#/definitions/statistics.EventStatistics"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmTicket"
                }
            }
        },
        "serviceweather.Info": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "serviceweather.Service": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "alarm_counters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/serviceweather.AlarmCounter"
                    }
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entitycategory.Category"
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "idle_since": {
                    "type": "integer"
                },
                "impact_level": {
                    "type": "integer"
                },
                "impact_state": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/serviceweather.Info"
                    }
                },
                "is_action_required": {
                    "type": "boolean"
                },
                "is_grey": {
                    "type": "boolean"
                },
                "last_update_date": {
                    "type": "integer"
                },
                "linklist": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "cat_name": {
                                "type": "string"
                            },
                            "links": {
                                "type": "object"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/types.PbehaviorInfo"
                },
                "pbehaviors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pbehavior.Response"
                    }
                },
                "resource": {
                    "type": "string"
                },
                "secondary_icon": {
                    "type": "string"
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/alarm.AlarmStep"
                }
            }
        },
        "serviceweather.WeatherLink": {
            "type": "object",
            "properties": {
                "cat_name": {
                    "type": "string"
                },
                "links": {
                    "type": "object"
                }
            }
        },
        "statesettings.JUnitThresholds": {
            "type": "object",
            "required": [
                "errors",
                "failures",
                "skipped"
            ],
            "properties": {
                "errors": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.StateThresholds"
                },
                "failures": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.StateThresholds"
                },
                "skipped": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.StateThresholds"
                }
            }
        },
        "statesettings.StateSetting": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "junit_thresholds": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.JUnitThresholds"
                },
                "method": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "statesettings.StateSettingRequest": {
            "type": "object",
            "required": [
                "method",
                "type"
            ],
            "properties": {
                "junit_thresholds": {
                    "type": "object",
                    "$ref": "#/definitions/statesettings.JUnitThresholds"
                },
                "method": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "statesettings.StateThresholds": {
            "type": "object",
            "required": [
                "critical",
                "major",
                "minor",
                "type"
            ],
            "properties": {
                "critical": {
                    "type": "number"
                },
                "major": {
                    "type": "number"
                },
                "minor": {
                    "type": "number"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "statistics.EventStatistics": {
            "type": "object",
            "properties": {
                "ko": {
                    "type": "integer"
                },
                "last_event": {
                    "type": "integer"
                },
                "last_ko": {
                    "type": "integer"
                },
                "ok": {
                    "type": "integer"
                }
            }
        },
        "types.Alarm": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "d": {
                    "type": "string"
                },
                "t": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "v": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmValue"
                }
            }
        },
        "types.AlarmStep": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "exec": {
                    "description": "Execution contains id if instruction execution for instruction steps only.",
                    "type": "string"
                },
                "initiator": {
                    "type": "string"
                },
                "m": {
                    "type": "string"
                },
                "pbehavior_canonical_type": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "statecounter": {
                    "type": "object",
                    "$ref": "#/definitions/types.CropCounter"
                },
                "t": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "user_id": {
                    "type": "string"
                },
                "val": {
                    "type": "integer"
                }
            }
        },
        "types.AlarmSteps": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/types.AlarmStep"
            }
        },
        "types.AlarmTicket": {
            "type": "object",
            "properties": {
                "_t": {
                    "type": "string"
                },
                "a": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "m": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "t": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "user_id": {
                    "type": "string"
                },
                "val": {
                    "type": "string"
                }
            }
        },
        "types.AlarmValue": {
            "type": "object",
            "properties": {
                "ack": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "activation_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "canceled": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "display_name": {
                    "type": "string"
                },
                "done": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "events_count": {
                    "description": "EventsCount accumulates count of check events.",
                    "type": "integer"
                },
                "hard_limit": {
                    "type": "integer"
                },
                "infos": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "initial_long_output": {
                    "type": "string"
                },
                "initial_output": {
                    "type": "string"
                },
                "last_event_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "last_update_date": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "long_output": {
                    "type": "string"
                },
                "long_output_history": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meta": {
                    "type": "string"
                },
                "meta_value_path": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pbehavior_info": {
                    "type": "object",
                    "$ref": "#/definitions/types.PbehaviorInfo"
                },
                "pbh_inactive_duration": {
                    "type": "integer"
                },
                "related_parents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resolved": {
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "resource": {
                    "type": "string"
                },
                "ruleVersion": {
                    "description": "store version of dynamic-infos rule",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "snooze": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "snooze_duration": {
                    "type": "integer"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "state_changes_since_status_update": {
                    "type": "integer"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmStep"
                },
                "steps": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmSteps"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ticket": {
                    "type": "object",
                    "$ref": "#/definitions/types.AlarmTicket"
                },
                "total_state_changes": {
                    "type": "integer"
                }
            }
        },
        "types.CpsTime": {
            "type": "object"
        },
        "types.CropCounter": {
            "type": "object",
            "properties": {
                "state:0": {
                    "type": "integer"
                },
                "state:1": {
                    "type": "integer"
                },
                "state:2": {
                    "type": "integer"
                },
                "state:3": {
                    "type": "integer"
                },
                "statechanges": {
                    "type": "integer"
                },
                "statedec": {
                    "type": "integer"
                },
                "stateinc": {
                    "type": "integer"
                }
            }
        },
        "types.DurationWithEnabled": {
            "type": "object",
            "required": [
                "enabled",
                "unit",
                "value"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "types.DurationWithUnit": {
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "types.PbehaviorInfo": {
            "type": "object",
            "properties": {
                "canonical_type": {
                    "description": "CanonicalType is Type of pbehavior.Type.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is ID of pbehavior.PBehavior.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is Name of pbehavior.PBehavior.",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason is Name of pbehavior.Reason.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp is time when entity enters pbehavior.\nUse pointer of CpsTime to unmarshal null and undefined to nil pointer instead of zero CpsTime.",
                    "type": "object",
                    "$ref": "#/definitions/types.CpsTime"
                },
                "type": {
                    "description": "TypeID is ID of pbehavior.Type.",
                    "type": "string"
                },
                "type_name": {
                    "description": "TypeName is Name of pbehavior.Type.",
                    "type": "string"
                }
            }
        },
        "types.WebhookBasicAuth": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.WebhookDeclareTicket": {
            "type": "object",
            "properties": {
                "empty_response": {
                    "type": "boolean"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "is_regexp": {
                    "type": "boolean"
                },
                "ticket_id": {
                    "type": "string"
                }
            }
        },
        "types.WebhookRequest": {
            "type": "object",
            "required": [
                "method",
                "url"
            ],
            "properties": {
                "auth": {
                    "type": "object",
                    "$ref": "#/definitions/types.WebhookBasicAuth"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "skip_verify": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "user.BulkCreateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.Request"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "user.BulkDeleteRequestItem": {
            "type": "object",
            "required": [
                "_id"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                }
            }
        },
        "user.BulkDeleteResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.BulkDeleteRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "user.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "email",
                "enable",
                "name",
                "role"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "user.BulkUpdateResponseItem": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.BulkUpdateRequestItem"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "user.EditRequest": {
            "type": "object",
            "required": [
                "email",
                "enable",
                "name",
                "role"
            ],
            "properties": {
                "defaultview": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "user.Request": {
            "type": "object",
            "required": [
                "email",
                "enable",
                "name",
                "role"
            ],
            "properties": {
                "defaultview": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "user.Role": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "object",
                    "$ref": "#/definitions/user.View"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "authkey": {
                    "type": "string"
                },
                "defaultview": {
                    "type": "object",
                    "$ref": "#/definitions/user.View"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "external_id": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user.Role"
                },
                "source": {
                    "type": "string"
                },
                "ui_groups_navigation_type": {
                    "type": "string"
                },
                "ui_language": {
                    "type": "string"
                },
                "ui_tours": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "user.View": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "userpreferences.EditRequest": {
            "type": "object",
            "required": [
                "content",
                "widget"
            ],
            "properties": {
                "content": {
                    "type": "object",
                    "additionalProperties": true
                },
                "widget": {
                    "type": "string"
                }
            }
        },
        "userpreferences.Response": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "object",
                    "additionalProperties": true
                },
                "widget": {
                    "type": "string"
                }
            }
        },
        "view.BulkDeleteRequest": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "view.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "enabled",
                "group",
                "title"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "periodic_refresh": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithEnabled"
                },
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.TabRequest"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "view.EditPositionItemRequest": {
            "type": "object",
            "required": [
                "_id",
                "views"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "view.EditRequest": {
            "type": "object",
            "required": [
                "enabled",
                "group",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "periodic_refresh": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithEnabled"
                },
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.TabRequest"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "view.Tab": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.Widget"
                    }
                }
            }
        },
        "view.TabRequest": {
            "type": "object",
            "required": [
                "_id",
                "title"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.WidgetRequest"
                    }
                }
            }
        },
        "view.Widget": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "grid_parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "view.WidgetRequest": {
            "type": "object",
            "required": [
                "_id",
                "type"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "grid_parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "parameters": {
                    "type": "object"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "viewgroup.BulkDeleteRequest": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "viewgroup.BulkUpdateRequestItem": {
            "type": "object",
            "required": [
                "_id",
                "title"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "viewgroup.EditRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "viewgroup.View": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "object",
                    "$ref": "#/definitions/viewgroup.ViewGroup"
                },
                "periodic_refresh": {
                    "type": "object",
                    "$ref": "#/definitions/types.DurationWithEnabled"
                },
                "tabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.Tab"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "viewgroup.ViewGroup": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "deletable": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewgroup.View"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "x-canopsis-authkey",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "JWTAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "4.0",
	Host:        "",
	BasePath:    "/api/v4",
	Schemes:     []string{},
	Title:       "Canopsis API",
	Description: "This is a Canopsis server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}

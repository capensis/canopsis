// Code generated by MockGen. DO NOT EDIT.
// Source: git.canopsis.net/canopsis/go-engines/lib/canopsis/view (interfaces: Adapter)

// Package mock_view is a generated GoMock package.
package mock_view

import (
	context "context"
	view "git.canopsis.net/canopsis/go-engines/lib/canopsis/view"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAdapter is a mock of Adapter interface
type MockAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockAdapterMockRecorder
}

// MockAdapterMockRecorder is the mock recorder for MockAdapter
type MockAdapterMockRecorder struct {
	mock *MockAdapter
}

// NewMockAdapter creates a new mock instance
func NewMockAdapter(ctrl *gomock.Controller) *MockAdapter {
	mock := &MockAdapter{ctrl: ctrl}
	mock.recorder = &MockAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdapter) EXPECT() *MockAdapterMockRecorder {
	return m.recorder
}

// AddTestSuitesToJunitWidgets mocks base method
func (m *MockAdapter) AddTestSuitesToJunitWidgets(arg0 context.Context, arg1, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTestSuitesToJunitWidgets", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddTestSuitesToJunitWidgets indicates an expected call of AddTestSuitesToJunitWidgets
func (mr *MockAdapterMockRecorder) AddTestSuitesToJunitWidgets(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTestSuitesToJunitWidgets", reflect.TypeOf((*MockAdapter)(nil).AddTestSuitesToJunitWidgets), arg0, arg1, arg2)
}

// FindJunitWidgets mocks base method
func (m *MockAdapter) FindJunitWidgets(arg0 context.Context) ([]view.Widget, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindJunitWidgets", arg0)
	ret0, _ := ret[0].([]view.Widget)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindJunitWidgets indicates an expected call of FindJunitWidgets
func (mr *MockAdapterMockRecorder) FindJunitWidgets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindJunitWidgets", reflect.TypeOf((*MockAdapter)(nil).FindJunitWidgets), arg0)
}

// FindJunitWidgetsTestSuiteIDs mocks base method
func (m *MockAdapter) FindJunitWidgetsTestSuiteIDs(arg0 context.Context, arg1 []string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindJunitWidgetsTestSuiteIDs", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindJunitWidgetsTestSuiteIDs indicates an expected call of FindJunitWidgetsTestSuiteIDs
func (mr *MockAdapterMockRecorder) FindJunitWidgetsTestSuiteIDs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindJunitWidgetsTestSuiteIDs", reflect.TypeOf((*MockAdapter)(nil).FindJunitWidgetsTestSuiteIDs), arg0, arg1)
}

// RemoveTestSuitesFromJunitWidgets mocks base method
func (m *MockAdapter) RemoveTestSuitesFromJunitWidgets(arg0 context.Context, arg1 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTestSuitesFromJunitWidgets", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveTestSuitesFromJunitWidgets indicates an expected call of RemoveTestSuitesFromJunitWidgets
func (mr *MockAdapterMockRecorder) RemoveTestSuitesFromJunitWidgets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTestSuitesFromJunitWidgets", reflect.TypeOf((*MockAdapter)(nil).RemoveTestSuitesFromJunitWidgets), arg0, arg1)
}

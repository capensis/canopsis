// Code generated by MockGen. DO NOT EDIT.
// Source: git.canopsis.net/canopsis/go-engines/lib/canopsis/entity (interfaces: Adapter)

// Package mock_entity is a generated GoMock package.
package mock_entity

import (
	types "git.canopsis.net/canopsis/go-engines/lib/canopsis/types"
	bson "github.com/globalsign/mgo/bson"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAdapter is a mock of Adapter interface
type MockAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockAdapterMockRecorder
}

// MockAdapterMockRecorder is the mock recorder for MockAdapter
type MockAdapterMockRecorder struct {
	mock *MockAdapter
}

// NewMockAdapter creates a new mock instance
func NewMockAdapter(ctrl *gomock.Controller) *MockAdapter {
	mock := &MockAdapter{ctrl: ctrl}
	mock.recorder = &MockAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdapter) EXPECT() *MockAdapterMockRecorder {
	return m.recorder
}

// AddToBulkUpdate mocks base method
func (m *MockAdapter) AddToBulkUpdate(arg0 string, arg1 bson.M) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToBulkUpdate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToBulkUpdate indicates an expected call of AddToBulkUpdate
func (mr *MockAdapterMockRecorder) AddToBulkUpdate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToBulkUpdate", reflect.TypeOf((*MockAdapter)(nil).AddToBulkUpdate), arg0, arg1)
}

// BulkInsert mocks base method
func (m *MockAdapter) BulkInsert(arg0 types.Entity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkInsert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkInsert indicates an expected call of BulkInsert
func (mr *MockAdapterMockRecorder) BulkInsert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkInsert", reflect.TypeOf((*MockAdapter)(nil).BulkInsert), arg0)
}

// BulkUpdate mocks base method
func (m *MockAdapter) BulkUpdate(arg0 types.Entity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkUpdate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkUpdate indicates an expected call of BulkUpdate
func (mr *MockAdapterMockRecorder) BulkUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkUpdate", reflect.TypeOf((*MockAdapter)(nil).BulkUpdate), arg0)
}

// BulkUpsert mocks base method
func (m *MockAdapter) BulkUpsert(arg0 types.Entity, arg1, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkUpsert", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkUpsert indicates an expected call of BulkUpsert
func (mr *MockAdapterMockRecorder) BulkUpsert(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkUpsert", reflect.TypeOf((*MockAdapter)(nil).BulkUpsert), arg0, arg1, arg2)
}

// Count mocks base method
func (m *MockAdapter) Count() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Count")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Count indicates an expected call of Count
func (mr *MockAdapterMockRecorder) Count() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Count", reflect.TypeOf((*MockAdapter)(nil).Count))
}

// FlushBulk mocks base method
func (m *MockAdapter) FlushBulk() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlushBulk")
	ret0, _ := ret[0].(error)
	return ret0
}

// FlushBulk indicates an expected call of FlushBulk
func (mr *MockAdapterMockRecorder) FlushBulk() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlushBulk", reflect.TypeOf((*MockAdapter)(nil).FlushBulk))
}

// FlushBulkInsert mocks base method
func (m *MockAdapter) FlushBulkInsert() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlushBulkInsert")
	ret0, _ := ret[0].(error)
	return ret0
}

// FlushBulkInsert indicates an expected call of FlushBulkInsert
func (mr *MockAdapterMockRecorder) FlushBulkInsert() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlushBulkInsert", reflect.TypeOf((*MockAdapter)(nil).FlushBulkInsert))
}

// FlushBulkUpdate mocks base method
func (m *MockAdapter) FlushBulkUpdate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlushBulkUpdate")
	ret0, _ := ret[0].(error)
	return ret0
}

// FlushBulkUpdate indicates an expected call of FlushBulkUpdate
func (mr *MockAdapterMockRecorder) FlushBulkUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlushBulkUpdate", reflect.TypeOf((*MockAdapter)(nil).FlushBulkUpdate))
}

// Get mocks base method
func (m *MockAdapter) Get(arg0 string) (types.Entity, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(types.Entity)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockAdapterMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAdapter)(nil).Get), arg0)
}

// GetEntityByID mocks base method
func (m *MockAdapter) GetEntityByID(arg0 string) (types.Entity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntityByID", arg0)
	ret0, _ := ret[0].(types.Entity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntityByID indicates an expected call of GetEntityByID
func (mr *MockAdapterMockRecorder) GetEntityByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntityByID", reflect.TypeOf((*MockAdapter)(nil).GetEntityByID), arg0)
}

// GetIDs mocks base method
func (m *MockAdapter) GetIDs(arg0 bson.M, arg1 *[]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIDs", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetIDs indicates an expected call of GetIDs
func (mr *MockAdapterMockRecorder) GetIDs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIDs", reflect.TypeOf((*MockAdapter)(nil).GetIDs), arg0, arg1)
}

// Insert mocks base method
func (m *MockAdapter) Insert(arg0 types.Entity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert
func (mr *MockAdapterMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockAdapter)(nil).Insert), arg0)
}

// Remove mocks base method
func (m *MockAdapter) Remove(arg0 types.Entity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove
func (mr *MockAdapterMockRecorder) Remove(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockAdapter)(nil).Remove), arg0)
}

// RemoveAll mocks base method
func (m *MockAdapter) RemoveAll() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveAll")
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveAll indicates an expected call of RemoveAll
func (mr *MockAdapterMockRecorder) RemoveAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveAll", reflect.TypeOf((*MockAdapter)(nil).RemoveAll))
}

// Update mocks base method
func (m *MockAdapter) Update(arg0 types.Entity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockAdapterMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAdapter)(nil).Update), arg0)
}

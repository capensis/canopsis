// Code generated by MockGen. DO NOT EDIT.
// Source: git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/security/proxy (interfaces: AccessConfig)

// Package mock_proxy is a generated GoMock package.
package mock_proxy

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccessConfig is a mock of AccessConfig interface.
type MockAccessConfig struct {
	ctrl     *gomock.Controller
	recorder *MockAccessConfigMockRecorder
}

// MockAccessConfigMockRecorder is the mock recorder for MockAccessConfig.
type MockAccessConfigMockRecorder struct {
	mock *MockAccessConfig
}

// NewMockAccessConfig creates a new mock instance.
func NewMockAccessConfig(ctrl *gomock.Controller) *MockAccessConfig {
	mock := &MockAccessConfig{ctrl: ctrl}
	mock.recorder = &MockAccessConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessConfig) EXPECT() *MockAccessConfigMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockAccessConfig) Get(arg0, arg1 string) (string, string) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAccessConfigMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAccessConfig)(nil).Get), arg0, arg1)
}

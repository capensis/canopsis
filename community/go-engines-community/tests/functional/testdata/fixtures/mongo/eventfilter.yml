template:
  - &eventfilter {
    _id: <UUID()>,
    author: root,
    config: {
      actions: [
        {
          name: connector,
          type: set_field,
          value: <LoremIpsumWord()>
        }
      ],
      on_failure: pass,
      on_success: pass
    },
    created: <NowUnix()>,
    updated: <Current().created>,
    description: <LoremIpsumSentence(3)>,
    enabled: true,
    event_pattern: [
      [
        {
          field: resource,
          cond: {
            type: eq,
            value: <LoremIpsumWord()>
          }
        }
      ]
    ],
    entity_pattern: [
      [
        {
          field: name,
          cond: {
            type: eq,
            value: <LoremIpsumWord()>
          }
        }
      ]
    ],
    priority: <Index()>,
    type: enrichment
  }
  - &failure {
    _id: <UUID()>,
    rule: test-eventfilter,
    type: 0,
    t: <NowUnix()>,
    message: <LoremIpsumSentence(3)>
  }

eventfilter:
  eventfilter_to_get_1:
    <<: *eventfilter
    _id: test-eventfilter-to-get-1
    config:
      actions:
        - name: connector
          type: set_field
          value: kafka_connector
      on_failure: pass
      on_success: pass
    description: how it should have ended.
    external_data:
      entity:
        type: entity
    event_pattern:
      - - field: resource
          cond:
            type: eq
            value: test-eventfilter-to-get-1-pattern

  eventfilter_to_get_2:
    <<: *eventfilter
    _id: test-eventfilter-to-get-2
    description: drop filter
    config: { }
    event_pattern:
      - - field: resource
          cond:
            type: eq
            value: test-eventfilter-to-get-2-pattern
    type: drop

  eventfilter_to_get_3:
    <<: *eventfilter
    _id: test-eventfilter-to-get-3
    description: break filter
    config: { }
    event_pattern:
      - - field: resource
          cond:
            type: eq
            value: test-eventfilter-to-get-3-pattern
    type: break

  eventfilter_to_update_1:
    <<: *eventfilter
    _id: test-eventfilter-to-update-1

  eventfilter_to_update_2:
    <<: *eventfilter
    _id: test-eventfilter-to-update-2

  eventfilter_to_update_3:
    <<: *eventfilter
    _id: test-eventfilter-to-update-3

  eventfilter_to_update_4:
    <<: *eventfilter
    _id: test-eventfilter-to-update-4

  eventfilter_to_bulk_update_1:
    <<: *eventfilter
    _id: test-eventfilter-bulk-update-1

  eventfilter_to_bulk_update_2:
    <<: *eventfilter
    _id: test-eventfilter-bulk-update-2

  eventfilter_to_bulk_update_3:
    <<: *eventfilter
    _id: test-eventfilter-bulk-update-3

  eventfilter_to_bulk_update_4:
    <<: *eventfilter
    _id: test-eventfilter-bulk-update-4

  eventfilter_to_bulk_update_5:
    <<: *eventfilter
    _id: test-eventfilter-bulk-update-5
    description: break filter
    event_pattern:
      - - field: resource
          cond:
            type: eq
            value: test-eventfilter-bulk-update-5-pattern
    type: break

  eventfilter_to_delete:
    <<: *eventfilter
    _id: test-eventfilter-to-delete

  eventfilter_to_bulk_delete_1:
    <<: *eventfilter
    _id: test-eventfilter-to-bulk-delete-1

  eventfilter_to_bulk_delete_2:
    <<: *eventfilter
    _id: test-eventfilter-to-bulk-delete-2

  eventfilter_to_check_unique_id:
    <<: *eventfilter
    _id: test-eventfilter-check-id

  eventfilter_to_update_change_entity:
    _id: test-update-change-entity
    config:
      component: change_entity
    type: change_entity

  eventfilter_to_update_5:
    <<: *eventfilter
    _id: test-eventfilter-to-update-5
  eventfilter_to_update_6:
    <<: *eventfilter
    _id: test-eventfilter-to-update-6
  eventfilter_to_update_7:
    <<: *eventfilter
    _id: test-eventfilter-to-update-7
  eventfilter_to_update_8:
    <<: *eventfilter
    _id: test-eventfilter-to-update-8
  eventfilter_to_update_9:
    <<: *eventfilter
    _id: test-eventfilter-to-update-9
  eventfilter_to_update_10:
    <<: *eventfilter
    _id: test-eventfilter-to-update-10
  eventfilter_to_update_11:
    <<: *eventfilter
    _id: test-eventfilter-to-update-11
  eventfilter_to_update_12:
    <<: *eventfilter
    _id: test-eventfilter-to-update-12
  eventfilter_to_update_13:
    <<: *eventfilter
    _id: test-eventfilter-to-update-13
  eventfilter_to_update_14:
    <<: *eventfilter
    _id: test-eventfilter-to-update-14
  eventfilter_to_update_15:
    <<: *eventfilter
    _id: test-eventfilter-to-update-15
  eventfilter_to_update_16:
    <<: *eventfilter
    _id: test-eventfilter-to-update-16
  eventfilter_to_update_17:
    <<: *eventfilter
    _id: test-eventfilter-to-update-17
  eventfilter_to_update_18:
    <<: *eventfilter
    _id: test-eventfilter-to-update-18
  eventfilter_to_update_19:
    <<: *eventfilter
    _id: test-eventfilter-to-update-19
  eventfilter_to_update_20:
    <<: *eventfilter
    _id: test-eventfilter-to-update-20
  eventfilter_to_update_21:
    <<: *eventfilter
    _id: test-eventfilter-to-update-21
    start: 1591164001
    stop: 1591166001

  eventfilter_backward_compatibility_1:
    <<: *eventfilter
    _id: test-eventfilter-to-backward-compatibility-1
    config:
      actions:
        - name: customer
          description: customer
          type: set_entity_info_from_template
          value: '{{ .RegexMatch.Resource.SI_CMDB }}'
        - name: manager
          description: manager
          type: set_entity_info_from_template
          value: '{{ .RegexMatch.Resource.SI_CMDB }}'
      on_failure: pass
      on_success: pass
    entity_pattern: [ ]
    event_pattern: [ ]
    old_patterns:
      - resource:
          regex_match: 'CMDD:(?P<SI_CMDB>.*?)($|,)'
    type: enrichment

  eventfilter_backward_compatibility_to_get:
    _id: test-eventfilter-to-backward-compatibility-to-get
    author: root
    config:
      actions:
        - name: customer
          description: customer
          type: set_entity_info_from_template
          value: 'test'
      on_failure: pass
      on_success: pass
    created: 1608284568
    description: how it should have ended.
    enabled: true
    old_patterns:
      - resource:
          regex_match: 'test-eventfilter-to-backward-compatibility-to-get'
    priority: 0
    type: enrichment
    updated: 1608285370

  eventfilter_backward_compatibility_to_update:
    <<: *eventfilter
    _id: test-eventfilter-to-backward-compatibility-to-update
    old_patterns:
      - resource:
          regex_match: 'test-eventfilter-to-backward-compatibility-to-update'
    type: drop

  eventfilter_to_test_deletable_exception:
    <<: *eventfilter
    _id: test-eventfilter-to-test-deletable-exception
    description: break filter
    config: {}
    event_pattern: [
      [
        {
          field: resource,
          cond: {
            type: eq,
            value: test-eventfilter-to-test-deletable-exception
          }
        }
      ]
    ]
    exceptions:
      - test-exception-to-get-3
    type: break

  eventfilter_to_failure_get_1:
    <<: *eventfilter
    _id: test-eventfilter-to-failure-get-1
    description: test-eventfilter-to-failure-get-1-description
    events_count: 100
    created: 1592215336
    updated: 1592215336
  eventfilter_to_failure_read_1:
    <<: *eventfilter
    _id: test-eventfilter-to-failure-read-1
    description: test-eventfilter-to-failure-read-1-description
    created: 1592215336
    updated: 1592215336

  eventfilter_che_event_filters_failure_7:
    <<: *eventfilter
    _id: test-event-filter-che-event-filters-failure-7
    entity_pattern:
    event_pattern:
      - - field: component
          cond:
            type: eq
            value: test-component-che-event-filters-failure-7
        - field: event_type
          cond:
            type: eq
            value: check
    config:
      actions:
        - type: set_entity_info
          name: info1
          value:
            - 1
            - 2
      on_success: pass
      on_failure: pass
  eventfilter_che_event_filters_failure_second_3_1:
    <<: *eventfilter
    _id: test-event-filter-che-event-filters-failure-second-3-1
    entity_pattern:
    event_pattern:
        - - field: event_type
            cond:
              type: eq
              value: 1
  eventfilter_che_event_filters_failure_second_3_2:
    <<: *eventfilter
    _id: test-event-filter-che-event-filters-failure-second-3-2
    entity_pattern:
        - - field: type
            cond:
              type: eq
              value: 1
    event_pattern:
  eventfilter_che_event_filters_failure_second_3_3:
    <<: *eventfilter
    _id: test-event-filter-che-event-filters-failure-second-3-3
    entity_pattern:
    event_pattern:
    old_patterns:
      - state:
          regex_match: 'CMDD:(?P<SI_CMDB>.*?)($|,)'

  eventfilter_che_event_filters_failure_api_8:
    <<: *eventfilter
    _id: test-event-filter-che-event-filters-failure-api-8
    entity_pattern:
    event_pattern:
      - - field: component
          cond:
            type: eq
            value: test-component-che-event-filters-failure-api-8
        - field: event_type
          cond:
            type: eq
            value: check
    external_data:
      title:
        type: api
        request:
          url: INVALID
          method: ?INVALID?
  eventfilter_che_event_filters_failure_api_9:
    <<: *eventfilter
    _id: test-event-filter-che-event-filters-failure-api-9
    entity_pattern:
    event_pattern:
      - - field: component
          cond:
            type: eq
            value: test-component-che-event-filters-failure-api-9
        - field: event_type
          cond:
            type: eq
            value: check
    external_data:
      title:
        type: api

eventfilter_mongo_data:
  data_1:
    _id: test-eventfilter-mongo-data-1
    customer: test-eventfilter-mongo-data-1-customer
    status: test-eventfilter-mongo-data-1-status
  data_2:
    _id: test-eventfilter-mongo-data-2
    customer: test-eventfilter-mongo-data-2-customer
    status: test-eventfilter-mongo-data-2-status
  data_3:
    _id: test-eventfilter-mongo-data-3
    customer: test-eventfilter-mongo-data-1-customer
    status: test-eventfilter-mongo-data-3-status

eventfilter_mongo_data_regexp:
  data_1:
    _id: test-eventfilter-mongo-data-regexp-1
    customer: test-eventfilter-mongo-data-regexp-1-customer
    message: test-eventfilter-mongo-data-regexp-1-.*
    status: test-eventfilter-mongo-data-regexp-1-status
    state: 1
  data_2:
    _id: test-eventfilter-mongo-data-regexp-2
    customer: test-eventfilter-mongo-data-regexp-1-customer
    message: test-eventfilter-mongo-data-regexp-2-.*
    status: test-eventfilter-mongo-data-regexp-2-status
    state: 1
  data_3:
    _id: test-eventfilter-mongo-data-regexp-3
    customer: test-eventfilter-mongo-data-regexp-1-customer
    message: test-eventfilter-mongo-data-regexp-1-.*
    status: test-eventfilter-mongo-data-regexp-3-status
    state: 1
  data_4:
    _id: test-eventfilter-mongo-data-regexp-4
    customer: test-eventfilter-mongo-data-regexp-4-customer
    message: test-eventfilter-mongo-data-regexp-1-(.*
    status: test-eventfilter-mongo-data-regexp-4-status
    state: 1

eventfilter_failure:
  failure_to_get_1:
    <<: *failure
    _id: test-eventfilter-failure-to-get-1
    rule: test-eventfilter-to-failure-get-1
    type: 0
    t: 1592215337
    message: test-eventfilter-failure-to-get-1-message
    unread: true
  failure_to_get_2:
    <<: *failure
    _id: test-eventfilter-failure-to-get-2
    rule: test-eventfilter-to-failure-get-1
    type: 1
    t: 1592215338
    message: test-eventfilter-failure-to-get-2-message
    event:
      event_type: check
      connector: test-eventfilter-failure-to-get-2-connector
      connector_name: test-eventfilter-failure-to-get-2-connector-name
      component: test-eventfilter-failure-to-get-2-component
      resource: test-eventfilter-failure-to-get-2-resource
  failure_to_get_3:
    <<: *failure
    _id: test-eventfilter-failure-to-get-3
    rule: test-eventfilter-to-failure-get-1
    type: 2
    t: 1492215338
    message: test-eventfilter-failure-to-get-3-message
  failure_to_read_1:
    <<: *failure
    _id: test-eventfilter-failure-to-read-1
    rule: test-eventfilter-to-failure-read-1
    t: 1592215337
    unread: true
  failure_to_read_2:
    <<: *failure
    _id: test-eventfilter-failure-to-read-2
    rule: test-eventfilter-to-failure-read-1
    t: 1592215338
    unread: true

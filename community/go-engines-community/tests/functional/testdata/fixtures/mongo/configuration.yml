configuration:
  configuration_version:
    _id: canopsis_version
    edition: pro
    stack: go
    version: development

  configuration_user_interface:
    _id: user_interface
    app_title: Canopsis Test
    check_count_request_timeout: 30
    footer: Test footer
    language: en
    loader_no_update: true
    login_page_description: Test login
    max_matched_items: 4
    allow_change_severity_to_info: true
    show_header_on_kiosk_mode: false
    required_instruction_approve: false

  configuration_global:
    _id: global_config
    alarm:
      activatealarmafterautoremediation: false
      allowdoubleack: true
      cancelautosolvedelay: 1h
      disableactionsnoozedelayonpbh: true
      displaynamescheme: '{{ rand_string 3 }}-{{ rand_string 3 }}-{{ rand_string 3
        }}'
      longoutputlength: 1024
      outputlength: 255
      stealthyinterval: 0
      timetokeepresolvedalarms: 0h
    api:
      bulkmaxsize: 10000
      tokensigningmethod: HS256
      exportmongoclienttimeout: 1m
      authorscheme: ["$username", " ", "$firstname", " ", "$lastname", " ", "$email"]
      metricscacheexpiration: 24h
    data_storage:
      timetoexecute: ""
      maxupdates: 100000
      mongoclienttimeout: 1m
    file:
      junit: /tmp/canopsis/junit
      junitapi: /tmp/canopsis/junitapi
      upload: /tmp/canopsis/upload
      uploadmaxsize: 314572800
      icon: /tmp/canopsis/icons
      iconmaxsize: 10240
    global:
      prefetchcount: 10000
      prefetchsize: 0
      reconnectretries: 3
      reconnecttimeoutmilliseconds: 8
      maxexternalresponsesize: 10485760
      buildentityinfosdictionary: true
      builddynamicinfosdictionary: true
      eventscounttriggerdefaultthreshold: 15
    import_ctx:
      filepattern: /tmp/import_%s.json
      thdcritminperimport: 60m
      thdwarnminperimport: 30m
    metrics:
      flushinterval: 1s
      sliinterval: 1h
      usersessiongapinterval: 1h
      enabledinstructions: true
      enablednotackedmetrics: true
    tech_metrics:
      enabled: true
      dumpkeepinterval: 1h
    timezone:
      timezone: Europe/Paris
    template:
      system_env_var_prefixes:
        - "CPS_"
      vars:
        Name: Test
        Location: FR

  configuration_remediation:
    _id: remediation
    external_api:
      awx:
        auth:
          type: bearer-token
        launch_endpoint:
          headers:
            Accept: application/json
            Content-Type: application/json
          method: POST
          response_status_url_key: url
          url_tpl: '{{ .host }}/api/v2/job_templates/{{ .jobID }}/launch/'
          with_body: true
          with_url_query: false
        output_endpoint:
          headers:
            Accept: text/plain
          method: GET
          url_tpl: '{{ .host }}/api/v2/jobs/{{ .executionID }}/stdout'
        response_err_msg_key: detail
        status_endpoint:
          headers:
            Accept: application/json
            Content-Type: application/json
          method: GET
          response_id_key: id
          response_status_key: status
          statuses:
            canceled: aborted
            failed: failed
            pending: running
            running: running
            successful: succeeded
            waiting: running
          url_tpl: '{{ .host }}{{ .responseUrl }}'
      jenkins:
        auth:
          type: basic-auth
        launch_endpoint:
          headers:
            Accept: application/json
          method: POST
          response_status_header_url_key: Location
          url_tpl: '{{ .host }}/job/{{ .jobID }}/build'
          url_tpl_with_params: '{{ .host }}/job/{{ .jobID }}/buildWithParameters'
          with_body: false
          with_url_query: true
        output_endpoint:
          method: GET
          url_tpl: '{{ .host }}/job/{{ .jobID }}/{{ .executionID }}/consoleText'
        queue_endpoint:
          method: GET
          response_status_url_key: executable.url
          url_tpl: '{{ .host }}{{ .responseUrl }}/api/json'
        response_err_msg_key: message
        status_endpoint:
          method: GET
          response_id_key: id
          response_status_key: result
          statuses:
            ABORTED: aborted
            ERROR: failed
            FAIL: failed
            FIXED: failed
            PASSED: failed
            REGRESSION: failed
            SUCCESS: succeeded
          url_tpl: '{{ .host }}{{ .responseUrl }}/api/json'
      rundeck:
        auth:
          header: X-Rundeck-Auth-Token
          type: header-token
        launch_endpoint:
          headers:
            Accept: application/json
            Content-Type: application/json
          method: POST
          response_external_url_key: permalink
          response_status_url_key: href
          url_tpl: '{{ .host }}/api/35/job/{{ .jobID }}/run'
          with_body: true
          with_url_query: false
        output_endpoint:
          headers:
            Accept: text/plain
          method: GET
          url_tpl: '{{ .host }}/api/35/execution/{{ .executionID }}/output'
        response_err_msg_key: message
        status_endpoint:
          headers:
            Accept: application/json
            Content-Type: application/json
          method: GET
          response_id_key: id
          response_status_key: status
          statuses:
            aborted: aborted
            failed: failed
            running: running
            succeeded: succeeded
          url_tpl: '{{ .host }}{{ .responseUrl }}'
      vtom:
        auth:
          type: header-token
          header: X-API-KEY
        reset_endpoint:
          url_tpl: "{{ .host }}/jobs/{{ .jobID }}/action"
          method: POST
          headers:
            "Content-Type": "application/json"
            "Accept": "application/json"
          body: "{\"type\":\"ChangeStatus\",\"status\":\"Waiting\"}"
        launch_endpoint:
          url_tpl: "{{ .host }}/jobs/{{ .jobID }}/action"
          method: POST
          headers:
            "Content-Type": "application/json"
            "Accept": "application/json"
          body: "{\"type\":\"Request\"}"
          with_body: true
          with_url_query: false
        status_endpoint:
          url_tpl: "{{ .host }}/jobs/{{ .jobID }}/status"
          method: GET
          response_status_key: status
          statuses:
            Waiting: waiting
            Running: running
            Finished: succeeded
            Error: failed
        output_endpoint:
          url_tpl: "{{ .host }}/jobs/{{ .jobID }}/logs/last/stdout"
          method: GET
        err_output_endpoint:
          url_tpl: "{{ .host }}/jobs/{{ .jobID }}/logs/last/stderr"
          method: GET
        response_err_msg_key: message
    http_timeout: 1m
    pause_manual_instruction_interval: 30m
    job_wait_interval: 4s
    job_retry_interval: 4s

  configuration_healthcheck:
    _id: health_check
    update_interval: 10s
    engine_order:
    - from: engine-fifo
      to: engine-che
    - from: engine-che
      to: engine-axe
    - from: engine-axe
      to: engine-correlation
    - from: engine-axe
      to: engine-remediation
    - from: engine-axe
      to: engine-pbehavior
    - from: engine-correlation
      to: engine-dynamic-infos
    - from: engine-dynamic-infos
      to: engine-action
    - from: engine-action
      to: engine-webhook

  configuration_alarm_tag_color:
    _id: alarm_tag_color
    colors:
      - "#B71C1C"
      - "#880E4F"
      - "#4A148C"
      - "#0D47A1"
      - "#01579B"
      - "#006064"
      - "#004D40"
      - "#33691E"
      - "#9E9D24"
      - "#F57F17"
      - "#E65100"
      - "#BF360C"
      - "#8D6E63"
      - "#607D8B"
      - "#9E9E9E"

  configuration_maintenance:
    _id: maintenance
    enabled: false

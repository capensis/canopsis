From d0185c81262af3959f91c3a72a614e2dd0f00302 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 30 Mar 2021 17:02:57 +0700
Subject: [PATCH 01/66] Feature #3046 : Add context to periodical worker

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 cmd/engine-axe/periodical_worker.go                  |  8 ++++----
 cmd/engine-service/periodical_worker.go              |  4 ++--
 lib/canopsis/engine/engine.go                        | 10 +++++++++-
 lib/canopsis/engine/interface.go                     |  2 +-
 lib/canopsis/engine/load_config_periodical_worker.go |  2 +-
 5 files changed, 17 insertions(+), 9 deletions(-)

diff --git a/cmd/engine-axe/periodical_worker.go b/cmd/engine-axe/periodical_worker.go
index 73578f90..38c789e7 100644
--- a/cmd/engine-axe/periodical_worker.go
+++ b/cmd/engine-axe/periodical_worker.go
@@ -37,7 +37,10 @@ func (w *periodicalWorker) GetInterval() time.Duration {
 	return w.PeriodicalInterval
 }
 
-func (w *periodicalWorker) Work(ctx context.Context) error {
+func (w *periodicalWorker) Work(parentCtx context.Context) error {
+	ctx, task := trace.NewTask(parentCtx, "axe.PeriodicalProcess")
+	defer task.End()
+
 	_, err := w.LockerClient.Obtain(ctx, PeriodicalLockKey, w.GetInterval(), nil)
 	if err == redislock.ErrNotObtained {
 		w.Logger.Debug().Msg("Could not obtain lock! Skip periodical process")
@@ -49,9 +52,6 @@ func (w *periodicalWorker) Work(ctx context.Context) error {
 		return nil
 	}
 
-	ctx, task := trace.NewTask(context.Background(), "axe.PeriodicalProcess")
-	defer task.End()
-
 	idleCtx, cancel := context.WithTimeout(ctx, w.GetInterval())
 	defer cancel()
 
diff --git a/cmd/engine-service/periodical_worker.go b/cmd/engine-service/periodical_worker.go
index 21efb15e..dbf9e903 100644
--- a/cmd/engine-service/periodical_worker.go
+++ b/cmd/engine-service/periodical_worker.go
@@ -21,8 +21,8 @@ func (w *periodicalWorker) GetInterval() time.Duration {
 	return w.PeriodicalInterval
 }
 
-func (w *periodicalWorker) Work(ctx context.Context) error {
-	ctx, task := trace.NewTask(ctx, "service.PeriodicalWorker")
+func (w *periodicalWorker) Work(parentCtx context.Context) error {
+	ctx, task := trace.NewTask(parentCtx, "service.PeriodicalWorker")
 	defer task.End()
 
 	// Lock periodical, do not release lock to not allow another instance start periodical.
diff --git a/lib/canopsis/engine/engine.go b/lib/canopsis/engine/engine.go
index 36877606..c4b23136 100644
--- a/lib/canopsis/engine/engine.go
+++ b/lib/canopsis/engine/engine.go
@@ -119,7 +119,8 @@ func (e *engine) runPeriodicalWorker(
 		}
 	}()
 
-	ticker := time.NewTicker(worker.GetInterval())
+	interval := worker.GetInterval()
+	ticker := time.NewTicker(interval)
 	defer ticker.Stop()
 
 	for {
@@ -131,6 +132,13 @@ func (e *engine) runPeriodicalWorker(
 				exitCh <- err
 				return
 			}
+
+			newInterval := worker.GetInterval()
+			if newInterval != interval {
+				ticker.Stop()
+				interval = newInterval
+				ticker = time.NewTicker(interval)
+			}
 		case <-ctx.Done():
 			return
 		}
diff --git a/lib/canopsis/engine/interface.go b/lib/canopsis/engine/interface.go
index cfd185d0..713f2230 100644
--- a/lib/canopsis/engine/interface.go
+++ b/lib/canopsis/engine/interface.go
@@ -36,7 +36,7 @@ type MessageProcessor interface {
 // If Work returns error engine will be stopped.
 type PeriodicalWorker interface {
 	GetInterval() time.Duration
-	Work(ctx context.Context) error
+	Work(context.Context) error
 }
 
 // RPCClient interface is used to implement AMQP RPC client.
diff --git a/lib/canopsis/engine/load_config_periodical_worker.go b/lib/canopsis/engine/load_config_periodical_worker.go
index 443843e0..5cd92b46 100644
--- a/lib/canopsis/engine/load_config_periodical_worker.go
+++ b/lib/canopsis/engine/load_config_periodical_worker.go
@@ -32,7 +32,7 @@ func (w *loadConfigPeriodicalWorker) GetInterval() time.Duration {
 	return w.periodicalInterval
 }
 
-func (w *loadConfigPeriodicalWorker) Work(ctx context.Context) error {
+func (w *loadConfigPeriodicalWorker) Work(context.Context) error {
 	cfg, err := w.adapter.GetConfig()
 	if err != nil {
 		w.logger.Err(err).Msgf("cannot load config")
-- 
2.25.1


From 26aea1f25c3a0a126c6fc8c4d275e9c4adf80265 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 30 Mar 2021 17:04:24 +0700
Subject: [PATCH 02/66] Feature #3046 : Add engine remediation queue and update
 remediation config

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../canopsis-cat.toml.example                 |  23 +-
 cmd/engine-axe/periodical_worker_test.go      |  10 +-
 lib/canopsis/config/config.go                 |   6 +-
 lib/canopsis/config/config_provider.go        | 755 ++++++++++--------
 lib/canopsis/config/constants.go              |   6 +
 lib/canopsis/globals.go                       |   3 +
 lib/canopsis/types/basic.go                   |   4 +
 lib/mongo/mongo.go                            |   1 +
 8 files changed, 475 insertions(+), 333 deletions(-)

diff --git a/cmd/canopsis-reconfigure/canopsis-cat.toml.example b/cmd/canopsis-reconfigure/canopsis-cat.toml.example
index a6293fae..7ecc245f 100644
--- a/cmd/canopsis-reconfigure/canopsis-cat.toml.example
+++ b/cmd/canopsis-reconfigure/canopsis-cat.toml.example
@@ -222,6 +222,19 @@ noWait = false
   noWait = false
   # args =
 
+[[RabbitMQ.queues]]
+name = "Engine_remediation"
+durable = true
+autoDelete = false
+exclusive = false
+noWait = false
+# args =
+  [RabbitMQ.queues.bind]
+  key = "Engine_remediation"
+  exchange = "amq.direct"
+  noWait = false
+  # args =
+
 [[RabbitMQ.queues]]
 name = "Engine_kpi"
 durable = true
@@ -291,7 +304,15 @@ Timezone = "Europe/Paris"
 
 # Following parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
 [Canopsis.remediation]
-JobExecutorFetchTimeoutSeconds = 30
+HttpTimeout = "1m"
+# LaunchJobRetriesAmount is used for request retries.
+LaunchJobRetriesAmount = 3
+# LaunchJobRetriesInterval is used for request retries.
+LaunchJobRetriesInterval = "5s"
+# WaitJobCompleteRetriesInterval is used during polling execution status and for request retries.
+WaitJobCompleteRetriesInterval = "5s"
+# WaitJobCompleteRetriesAmount is used for polling execution status.
+WaitJobCompleteRetriesAmount = 12
 
 # Following parameters are reloaded by api and engines after canopsis-reconfigure updates mongodb.
 [Canopsis.data_storage]
diff --git a/cmd/engine-axe/periodical_worker_test.go b/cmd/engine-axe/periodical_worker_test.go
index 8c9b0f80..55907840 100644
--- a/cmd/engine-axe/periodical_worker_test.go
+++ b/cmd/engine-axe/periodical_worker_test.go
@@ -16,6 +16,9 @@ import (
 func TestPeriodicalWorker_Work_GivenObtainedLock_ShouldDoWork(t *testing.T) {
 	ctrl := gomock.NewController(t)
 	defer ctrl.Finish()
+	ctx, cancel := context.WithCancel(context.Background())
+	defer cancel()
+
 	mockLockClient := mock_redis.NewMockLockClient(ctrl)
 	mockAlarmService := mock_alarm.NewMockService(ctrl)
 	mockIdleAlarmService := mock_idlealarm.NewMockService(ctrl)
@@ -49,12 +52,15 @@ func TestPeriodicalWorker_Work_GivenObtainedLock_ShouldDoWork(t *testing.T) {
 	mockAlarmService.EXPECT().UpdateFlappingAlarms(gomock.Any(), gomock.Eq(alarmConfig))
 	mockIdleAlarmService.EXPECT().Process(gomock.Any())
 
-	_ = worker.Work(context.Background())
+	_ = worker.Work(ctx)
 }
 
 func TestPeriodicalWorker_Work_GivenNotObtainedLock_ShouldDoNotAnything(t *testing.T) {
 	ctrl := gomock.NewController(t)
 	defer ctrl.Finish()
+	ctx, cancel := context.WithCancel(context.Background())
+	defer cancel()
+
 	mockLockClient := mock_redis.NewMockLockClient(ctrl)
 	mockService := mock_alarm.NewMockService(ctrl)
 	interval := time.Minute
@@ -70,5 +76,5 @@ func TestPeriodicalWorker_Work_GivenNotObtainedLock_ShouldDoNotAnything(t *testi
 
 	mockService.EXPECT().ResolveAlarms(gomock.Any(), gomock.Any()).Times(0)
 
-	_ = worker.Work(context.Background())
+	_ = worker.Work(ctx)
 }
diff --git a/lib/canopsis/config/config.go b/lib/canopsis/config/config.go
index f98bbc96..102542b4 100644
--- a/lib/canopsis/config/config.go
+++ b/lib/canopsis/config/config.go
@@ -41,7 +41,11 @@ type SectionTimezone struct {
 }
 
 type SectionRemediation struct {
-	JobExecutorFetchTimeoutSeconds int64 `toml:"JobExecutorFetchTimeoutSeconds"`
+	HttpTimeout                    string `toml:"HttpTimeout"`
+	LaunchJobRetriesAmount         int    `toml:"LaunchJobRetriesAmount"`
+	LaunchJobRetriesInterval       string `toml:"LaunchJobRetriesInterval"`
+	WaitJobCompleteRetriesAmount   int    `toml:"WaitJobCompleteRetriesAmount"`
+	WaitJobCompleteRetriesInterval string `toml:"WaitJobCompleteInterval"`
 }
 
 type SectionImportCtx struct {
diff --git a/lib/canopsis/config/config_provider.go b/lib/canopsis/config/config_provider.go
index 22df7b9f..815f20eb 100644
--- a/lib/canopsis/config/config_provider.go
+++ b/lib/canopsis/config/config_provider.go
@@ -64,7 +64,11 @@ type TimezoneConfig struct {
 }
 
 type RemediationConfig struct {
-	JobExecutorFetchTimeout time.Duration
+	HttpTimeout                    time.Duration
+	LaunchJobRetriesAmount         int
+	LaunchJobRetriesInterval       time.Duration
+	WaitJobCompleteRetriesAmount   int
+	WaitJobCompleteRetriesInterval time.Duration
 }
 
 type DataStorageConfig struct {
@@ -81,140 +85,27 @@ func (t ScheduledTime) String() string {
 }
 
 func NewAlarmConfigProvider(cfg CanopsisConf, logger zerolog.Logger) *BaseAlarmConfigProvider {
-	conf := AlarmConfig{}
-
-	if cfg.Alarm.BaggotTime == "" {
-		conf.BaggotTime = AlarmBaggotTime
-		logger.Error().
-			Str("default", conf.BaggotTime.String()).
-			Str("invalid", cfg.Alarm.BaggotTime).
-			Msg("BaggotTime of alarm config section is not defined, default value is used instead")
-	} else {
-		var err error
-		conf.BaggotTime, err = time.ParseDuration(cfg.Alarm.BaggotTime)
-		if err == nil {
-			logger.Info().
-				Str("value", conf.BaggotTime.String()).
-				Msg("BaggotTime of alarm config section is used")
-		} else {
-			conf.BaggotTime = AlarmBaggotTime
-			logger.Err(err).
-				Str("default", conf.BaggotTime.String()).
-				Str("invalid", cfg.Alarm.BaggotTime).
-				Msg("bad value BaggotTime of alarm config section, default value is used instead")
-		}
-	}
-
-	if cfg.Alarm.CancelAutosolveDelay == "" {
-		conf.CancelAutosolveDelay = AlarmCancelAutosolveDelay
-		logger.Error().
-			Str("default", conf.CancelAutosolveDelay.String()).
-			Str("invalid", cfg.Alarm.CancelAutosolveDelay).
-			Msg("CancelAutosolveDelay of alarm config section is not defined, default value is used instead")
-	} else {
-		var err error
-		conf.CancelAutosolveDelay, err = time.ParseDuration(cfg.Alarm.CancelAutosolveDelay)
-		if err == nil {
-			logger.Info().
-				Str("value", conf.CancelAutosolveDelay.String()).
-				Msg("CancelAutosolveDelay of alarm config section is used")
-		} else {
-			conf.CancelAutosolveDelay = AlarmCancelAutosolveDelay
-			logger.Err(err).
-				Str("default", conf.CancelAutosolveDelay.String()).
-				Str("invalid", cfg.Alarm.CancelAutosolveDelay).
-				Msg("bad value CancelAutosolveDelay of alarm config section, default value is used instead")
-		}
-	}
-
-	if cfg.Alarm.DisplayNameScheme == "" {
-		var err error
-		conf.displayNameSchemeText = AlarmDefaultNameScheme
-		conf.DisplayNameScheme, err = CreateDisplayNameTpl(conf.displayNameSchemeText)
-		if err != nil {
-			panic(fmt.Errorf("invalid contant AlarmDefaultNameScheme: %w", err))
-		}
-		logger.Error().
-			Str("default", conf.displayNameSchemeText).
-			Str("invalid", cfg.Alarm.DisplayNameScheme).
-			Msg("DisplayNameScheme of alarm config section is not defined, default value is used instead")
-	} else {
-		var err error
-		conf.displayNameSchemeText = cfg.Alarm.DisplayNameScheme
-		conf.DisplayNameScheme, err = CreateDisplayNameTpl(conf.displayNameSchemeText)
-		if err == nil {
-			logger.Info().
-				Str("value", conf.displayNameSchemeText).
-				Msg("DisplayNameScheme of alarm config section is used")
-		} else {
-			var err error
-			conf.displayNameSchemeText = AlarmDefaultNameScheme
-			conf.DisplayNameScheme, err = CreateDisplayNameTpl(conf.displayNameSchemeText)
-			if err != nil {
-				panic(fmt.Errorf("invalid contant AlarmDefaultNameScheme: %w", err))
-			}
-			logger.Err(err).
-				Str("default", conf.displayNameSchemeText).
-				Str("invalid", cfg.Alarm.DisplayNameScheme).
-				Msg("bad value DisplayNameScheme of alarm config section, default value is used instead")
-		}
-	}
+	sectionName := "alarm"
+	conf := AlarmConfig{
+		FlappingFreqLimit:             parseInt(cfg.Alarm.FlappingFreqLimit, 0, "FlappingFreqLimit", sectionName, logger),
+		FlappingInterval:              parseTimeDurationBySeconds(cfg.Alarm.FlappingInterval, 0, "FlappingInterval", sectionName, logger),
+		StealthyInterval:              parseTimeDurationBySeconds(cfg.Alarm.StealthyInterval, 0, "StealthyInterval", sectionName, logger),
+		BaggotTime:                    parseTimeDurationByStr(cfg.Alarm.BaggotTime, AlarmBaggotTime, "BaggotTime", sectionName, logger),
+		EnableLastEventDate:           parseBool(cfg.Alarm.EnableLastEventDate, "EnableLastEventDate", sectionName, logger),
+		CancelAutosolveDelay:          parseTimeDurationByStr(cfg.Alarm.CancelAutosolveDelay, AlarmCancelAutosolveDelay, "CancelAutosolveDelay", sectionName, logger),
+		DisableActionSnoozeDelayOnPbh: parseBool(cfg.Alarm.DisableActionSnoozeDelayOnPbh, "DisableActionSnoozeDelayOnPbh", sectionName, logger),
+	}
+	conf.DisplayNameScheme, conf.displayNameSchemeText = parseTemplate(cfg.Alarm.DisplayNameScheme, AlarmDefaultNameScheme, "DisplayNameScheme", sectionName, logger)
 
 	if cfg.Alarm.OutputLength <= 0 {
-		logger.Warn().Msg("OutputLength of alarm config section is not set or less than 1: the event's output and long_output won't be truncated")
+		logger.Warn().Msgf("OutputLength of %s config section is not set or less than 1: the event's output and long_output won't be truncated", sectionName)
 	} else {
 		conf.OutputLength = cfg.Alarm.OutputLength
 		logger.Info().
 			Int("value", conf.OutputLength).
-			Msg("OutputLength of alarm config section is used")
-	}
-
-	if cfg.Alarm.FlappingFreqLimit < 0 {
-		logger.Error().
-			Int("default", conf.FlappingFreqLimit).
-			Int("invalid", cfg.Alarm.FlappingFreqLimit).
-			Msg("bad value FlappingFreqLimit of alarm config section, default value is used instead")
-	} else {
-		conf.FlappingFreqLimit = cfg.Alarm.FlappingFreqLimit
-		logger.Info().
-			Int("value", conf.FlappingFreqLimit).
-			Msg("FlappingFreqLimit of alarm config section is used")
-	}
-
-	if cfg.Alarm.FlappingInterval < 0 {
-		logger.Error().
-			Str("default", conf.FlappingInterval.String()).
-			Int("invalid", cfg.Alarm.FlappingInterval).
-			Msg("bad value FlappingInterval of alarm config section, default value is used instead")
-	} else {
-		conf.FlappingInterval = time.Second * time.Duration(cfg.Alarm.FlappingInterval)
-		logger.Info().
-			Str("value", conf.FlappingInterval.String()).
-			Msg("FlappingInterval of alarm config section is used")
-	}
-
-	if cfg.Alarm.StealthyInterval < 0 {
-		logger.Error().
-			Str("default", conf.StealthyInterval.String()).
-			Int("invalid", cfg.Alarm.StealthyInterval).
-			Msg("bad value StealthyInterval of alarm config section, default value is used instead")
-	} else {
-		conf.StealthyInterval = time.Second * time.Duration(cfg.Alarm.StealthyInterval)
-		logger.Info().
-			Str("value", conf.StealthyInterval.String()).
-			Msg("StealthyInterval of alarm config section is used")
+			Msgf("OutputLength of %s config section is used", sectionName)
 	}
 
-	conf.EnableLastEventDate = cfg.Alarm.EnableLastEventDate
-	logger.Info().
-		Bool("value", conf.EnableLastEventDate).
-		Msg("EnableLastEventDate of alarm config section is used")
-
-	conf.DisableActionSnoozeDelayOnPbh = cfg.Alarm.DisableActionSnoozeDelayOnPbh
-	logger.Info().
-		Bool("value", conf.DisableActionSnoozeDelayOnPbh).
-		Msg("DisableActionSnoozeDelayOnPbh of alarm config section is used")
-
 	return &BaseAlarmConfigProvider{
 		conf:   conf,
 		logger: logger,
@@ -228,165 +119,81 @@ type BaseAlarmConfigProvider struct {
 }
 
 func (p *BaseAlarmConfigProvider) Update(cfg CanopsisConf) error {
-	if cfg.Alarm.BaggotTime == "" {
-		p.logger.Error().
-			Str("invalid", cfg.Alarm.BaggotTime).
-			Msg("BaggotTime of alarm config section is not defined, previous value is used")
-	} else {
-		duration, err := time.ParseDuration(cfg.Alarm.BaggotTime)
-		if err == nil {
-			if p.conf.BaggotTime != duration {
-				p.logger.Info().
-					Str("previous", p.conf.BaggotTime.String()).
-					Str("new", duration.String()).
-					Msg("BaggotTime of alarm config section is loaded")
-
-				p.mx.Lock()
-				p.conf.BaggotTime = duration
-				p.mx.Unlock()
-			}
-		} else {
-			p.logger.Err(err).
-				Str("invalid", cfg.Alarm.BaggotTime).
-				Msg("bad value BaggotTime of alarm config section, previous value is used instead")
-		}
+	sectionName := "alarm"
+	d, ok := parseUpdatedTimeDurationByStr(cfg.Alarm.BaggotTime, p.conf.BaggotTime, "BaggotTime", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.BaggotTime = d
+		p.mx.Unlock()
 	}
 
-	if cfg.Alarm.CancelAutosolveDelay == "" {
-		p.logger.Error().
-			Str("invalid", cfg.Alarm.CancelAutosolveDelay).
-			Msg("CancelAutosolveDelay of alarm config section is not defined, previous value is used")
-	} else {
-		duration, err := time.ParseDuration(cfg.Alarm.CancelAutosolveDelay)
-		if err == nil {
-			if p.conf.CancelAutosolveDelay != duration {
-				p.logger.Info().
-					Str("previous", p.conf.CancelAutosolveDelay.String()).
-					Str("new", duration.String()).
-					Msg("CancelAutosolveDelay of alarm config section is loaded")
-
-				p.mx.Lock()
-				p.conf.CancelAutosolveDelay = duration
-				p.mx.Unlock()
-			}
-		} else {
-			p.logger.Err(err).
-				Str("invalid", cfg.Alarm.CancelAutosolveDelay).
-				Msg("bad value CancelAutosolveDelay of alarm config section, previous value is used instead")
-		}
+	d, ok = parseUpdatedTimeDurationByStr(cfg.Alarm.CancelAutosolveDelay, p.conf.CancelAutosolveDelay, "CancelAutosolveDelay", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.CancelAutosolveDelay = d
+		p.mx.Unlock()
 	}
 
-	if cfg.Alarm.DisplayNameScheme == "" {
-		p.logger.Error().
-			Str("invalid", cfg.Alarm.DisplayNameScheme).
-			Msg("DisplayNameScheme of alarm config section is not defined, previous value is used")
-	} else if cfg.Alarm.DisplayNameScheme != p.conf.displayNameSchemeText {
-		displayNameScheme, err := CreateDisplayNameTpl(cfg.Alarm.DisplayNameScheme)
-		if err == nil {
-			p.logger.Info().
-				Str("previous", p.conf.displayNameSchemeText).
-				Str("new", cfg.Alarm.DisplayNameScheme).
-				Msg("DisplayNameScheme of alarm config section is loaded")
-
-			p.mx.Lock()
-			p.conf.DisplayNameScheme = displayNameScheme
-			p.conf.displayNameSchemeText = cfg.Alarm.DisplayNameScheme
-			p.mx.Unlock()
-		} else {
-			p.logger.Err(err).
-				Str("invalid", cfg.Alarm.DisplayNameScheme).
-				Msg("bad value DisplayNameScheme of alarm config section, previous value is used instead")
-		}
+	t, s, ok := parseUpdatedTemplate(cfg.Alarm.DisplayNameScheme, p.conf.displayNameSchemeText, "DisplayNameScheme", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.DisplayNameScheme = t
+		p.conf.displayNameSchemeText = s
+		p.mx.Unlock()
 	}
 
 	if cfg.Alarm.OutputLength != p.conf.OutputLength {
 		if cfg.Alarm.OutputLength <= 0 {
+			p.mx.Lock()
+			p.conf.OutputLength = 0
+			p.mx.Unlock()
 			p.logger.Warn().
 				Int("previous", p.conf.OutputLength).
 				Int("new", cfg.Alarm.OutputLength).
 				Msg("OutputLength of alarm config section is loaded, value is not set or less than 1: the event's output and long_output won't be truncated")
 		} else {
+			p.mx.Lock()
+			p.conf.OutputLength = cfg.Alarm.OutputLength
+			p.mx.Unlock()
 			p.logger.Info().
 				Int("previous", p.conf.OutputLength).
 				Int("new", cfg.Alarm.OutputLength).
 				Msg("OutputLength of alarm config section is loaded")
 		}
+	}
 
+	i, ok := parseUpdatedInt(cfg.Alarm.FlappingFreqLimit, p.conf.FlappingFreqLimit, "FlappingFreqLimit", sectionName, p.logger)
+	if ok {
 		p.mx.Lock()
-		p.conf.OutputLength = cfg.Alarm.OutputLength
+		p.conf.FlappingFreqLimit = i
 		p.mx.Unlock()
 	}
 
-	if cfg.Alarm.FlappingFreqLimit < 0 {
-		p.logger.Error().
-			Int("invalid", cfg.Alarm.FlappingFreqLimit).
-			Msg("FlappingFreqLimit of alarm config section is not defined, previous value is used")
-	} else if cfg.Alarm.FlappingFreqLimit != p.conf.FlappingFreqLimit {
-		p.logger.Info().
-			Int("previous", p.conf.FlappingFreqLimit).
-			Int("new", cfg.Alarm.FlappingFreqLimit).
-			Msg("FlappingFreqLimit of alarm config section is loaded")
-
+	d, ok = parseUpdatedTimeDurationBySeconds(cfg.Alarm.FlappingInterval, p.conf.FlappingInterval, "FlappingInterval", sectionName, p.logger)
+	if ok {
 		p.mx.Lock()
-		p.conf.FlappingFreqLimit = cfg.Alarm.FlappingFreqLimit
+		p.conf.FlappingInterval = d
 		p.mx.Unlock()
 	}
 
-	if cfg.Alarm.FlappingInterval < 0 {
-		p.logger.Error().
-			Int("invalid", cfg.Alarm.FlappingInterval).
-			Msg("FlappingInterval of alarm config section is not defined, previous value is used")
-	} else {
-		flappingInterval := time.Second * time.Duration(cfg.Alarm.FlappingInterval)
-		if flappingInterval != p.conf.FlappingInterval {
-			p.logger.Info().
-				Str("previous", p.conf.FlappingInterval.String()).
-				Str("new", flappingInterval.String()).
-				Msg("FlappingInterval of alarm config section is loaded")
-
-			p.mx.Lock()
-			p.conf.FlappingInterval = flappingInterval
-			p.mx.Unlock()
-		}
-	}
-
-	if cfg.Alarm.StealthyInterval < 0 {
-		p.logger.Error().
-			Int("invalid", cfg.Alarm.StealthyInterval).
-			Msg("StealthyInterval of alarm config section is not defined, previous value is used")
-	} else {
-		stealthyInterval := time.Second * time.Duration(cfg.Alarm.StealthyInterval)
-		if stealthyInterval != p.conf.StealthyInterval {
-			p.logger.Info().
-				Str("previous", p.conf.StealthyInterval.String()).
-				Str("new", stealthyInterval.String()).
-				Msg("StealthyInterval of alarm config section is loaded")
-
-			p.mx.Lock()
-			p.conf.StealthyInterval = stealthyInterval
-			p.mx.Unlock()
-		}
+	d, ok = parseUpdatedTimeDurationBySeconds(cfg.Alarm.StealthyInterval, p.conf.StealthyInterval, "StealthyInterval", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.StealthyInterval = d
+		p.mx.Unlock()
 	}
 
-	if cfg.Alarm.EnableLastEventDate != p.conf.EnableLastEventDate {
-		p.logger.Info().
-			Bool("previous", p.conf.EnableLastEventDate).
-			Bool("new", cfg.Alarm.EnableLastEventDate).
-			Msg("EnableLastEventDate of alarm config section is loaded")
-
+	b, ok := parseUpdatedBool(cfg.Alarm.EnableLastEventDate, p.conf.EnableLastEventDate, "EnableLastEventDate", sectionName, p.logger)
+	if ok {
 		p.mx.Lock()
-		p.conf.EnableLastEventDate = cfg.Alarm.EnableLastEventDate
+		p.conf.EnableLastEventDate = b
 		p.mx.Unlock()
 	}
 
-	if cfg.Alarm.DisableActionSnoozeDelayOnPbh != p.conf.DisableActionSnoozeDelayOnPbh {
-		p.logger.Info().
-			Bool("previous", p.conf.DisableActionSnoozeDelayOnPbh).
-			Bool("new", cfg.Alarm.DisableActionSnoozeDelayOnPbh).
-			Msg("DisableActionSnoozeDelayOnPbh of alarm config section is loaded")
-
+	b, ok = parseUpdatedBool(cfg.Alarm.DisableActionSnoozeDelayOnPbh, p.conf.DisableActionSnoozeDelayOnPbh, "DisableActionSnoozeDelayOnPbh", sectionName, p.logger)
+	if ok {
 		p.mx.Lock()
-		p.conf.DisableActionSnoozeDelayOnPbh = cfg.Alarm.DisableActionSnoozeDelayOnPbh
+		p.conf.DisableActionSnoozeDelayOnPbh = b
 		p.mx.Unlock()
 	}
 
@@ -401,33 +208,9 @@ func (p *BaseAlarmConfigProvider) Get() AlarmConfig {
 }
 
 func NewTimezoneConfigProvider(cfg CanopsisConf, logger zerolog.Logger) *BaseTimezoneConfigProvider {
-	var location *time.Location
-	defaultLocation := time.UTC
-	if cfg.Timezone.Timezone == "" {
-		location = defaultLocation
-		logger.Error().
-			Str("default", location.String()).
-			Str("invalid", cfg.Timezone.Timezone).
-			Msg("Timezone of timezone config section is not defined, default value is used instead")
-	} else {
-		var err error
-		location, err = time.LoadLocation(cfg.Timezone.Timezone)
-		if err == nil {
-			logger.Info().
-				Str("value", location.String()).
-				Msg("Timezone of timezone config section is used")
-		} else {
-			location = defaultLocation
-			logger.Err(err).
-				Str("default", location.String()).
-				Str("invalid", cfg.Timezone.Timezone).
-				Msg("bad value Timezone of timezone config section, default value is used instead")
-		}
-	}
-
 	return &BaseTimezoneConfigProvider{
 		conf: TimezoneConfig{
-			Location: location,
+			Location: parseLocation(cfg.Timezone.Timezone, time.UTC, "Timezone", "timezone", logger),
 		},
 		logger: logger,
 	}
@@ -440,28 +223,11 @@ type BaseTimezoneConfigProvider struct {
 }
 
 func (p *BaseTimezoneConfigProvider) Update(cfg CanopsisConf) error {
-	if cfg.Timezone.Timezone == "" {
-		p.logger.Error().
-			Str("invalid", cfg.Timezone.Timezone).
-			Msg("Timezone of timezone config section is not defined, previous value is used")
-	} else {
-		location, err := time.LoadLocation(cfg.Timezone.Timezone)
-		if err == nil {
-			if p.conf.Location.String() != location.String() {
-				p.logger.Info().
-					Str("previous", p.conf.Location.String()).
-					Str("new", location.String()).
-					Msg("Timezone of timezone config section is loaded")
-
-				p.mx.Lock()
-				defer p.mx.Unlock()
-				p.conf.Location = location
-			}
-		} else {
-			p.logger.Err(err).
-				Str("invalid", cfg.Timezone.Timezone).
-				Msg("bad value Timezone of timezone config section, previous value is used instead")
-		}
+	l, ok := parseUpdatedLocation(cfg.Timezone.Timezone, p.conf.Location, "Timezone", "timezone", p.logger)
+	if ok {
+		p.mx.Lock()
+		defer p.mx.Unlock()
+		p.conf.Location = l
 	}
 
 	return nil
@@ -475,23 +241,15 @@ func (p *BaseTimezoneConfigProvider) Get() TimezoneConfig {
 }
 
 func NewRemediationConfigProvider(cfg CanopsisConf, logger zerolog.Logger) *BaseRemediationConfigProvider {
-	var jobExecutorFetchTimeout time.Duration
-	if cfg.Remediation.JobExecutorFetchTimeoutSeconds <= 0 {
-		jobExecutorFetchTimeout = RemediationJobExecutorFetchTimeout
-		logger.Error().
-			Str("default", jobExecutorFetchTimeout.String()).
-			Int64("invalid", cfg.Remediation.JobExecutorFetchTimeoutSeconds).
-			Msg("bad value JobExecutorFetchTimeoutSeconds duration of remediation config section, default value is used instead")
-	} else {
-		jobExecutorFetchTimeout = time.Second * time.Duration(cfg.Remediation.JobExecutorFetchTimeoutSeconds)
-		logger.Info().
-			Str("value", jobExecutorFetchTimeout.String()).
-			Msg("JobExecutorFetchTimeoutSeconds duration of remediation config section is used")
-	}
+	sectionName := "remediation"
 
 	return &BaseRemediationConfigProvider{
 		conf: RemediationConfig{
-			JobExecutorFetchTimeout: jobExecutorFetchTimeout,
+			HttpTimeout:                    parseTimeDurationByStr(cfg.Remediation.HttpTimeout, RemediationHttpTimeout, "HttpTimeout", sectionName, logger),
+			LaunchJobRetriesAmount:         parseInt(cfg.Remediation.LaunchJobRetriesAmount, RemediationLaunchJobRetriesAmount, "LaunchJobRetriesAmount", sectionName, logger),
+			LaunchJobRetriesInterval:       parseTimeDurationByStr(cfg.Remediation.LaunchJobRetriesInterval, RemediationLaunchJobRetriesInterval, "LaunchJobRetriesInterval", sectionName, logger),
+			WaitJobCompleteRetriesAmount:   parseInt(cfg.Remediation.WaitJobCompleteRetriesAmount, RemediationWaitJobCompleteRetriesAmount, "WaitJobCompleteRetriesAmount", sectionName, logger),
+			WaitJobCompleteRetriesInterval: parseTimeDurationByStr(cfg.Remediation.WaitJobCompleteRetriesInterval, RemediationWaitJobCompleteRetriesInterval, "WaitJobCompleteRetriesInterval", sectionName, logger),
 		},
 		logger: logger,
 	}
@@ -504,22 +262,36 @@ type BaseRemediationConfigProvider struct {
 }
 
 func (p *BaseRemediationConfigProvider) Update(cfg CanopsisConf) error {
-	if cfg.Remediation.JobExecutorFetchTimeoutSeconds <= 0 {
-		p.logger.Error().
-			Int64("invalid", cfg.Remediation.JobExecutorFetchTimeoutSeconds).
-			Msg("bad value JobExecutorFetchTimeoutSeconds duration of remediation config section, previous value is used")
-	} else {
-		jobExecutorFetchTimeout := time.Second * time.Duration(cfg.Remediation.JobExecutorFetchTimeoutSeconds)
-		if jobExecutorFetchTimeout != p.conf.JobExecutorFetchTimeout {
-			p.logger.Info().
-				Str("previous", p.conf.JobExecutorFetchTimeout.String()).
-				Str("new", jobExecutorFetchTimeout.String()).
-				Msg("JobExecutorFetchTimeoutSeconds duration of remediation config section is loaded")
-
-			p.mx.Lock()
-			defer p.mx.Unlock()
-			p.conf.JobExecutorFetchTimeout = jobExecutorFetchTimeout
-		}
+	sectionName := "remediation"
+	d, ok := parseUpdatedTimeDurationByStr(cfg.Remediation.HttpTimeout, p.conf.HttpTimeout, "HttpTimeout", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.HttpTimeout = d
+		p.mx.Unlock()
+	}
+	i, ok := parseUpdatedInt(cfg.Remediation.LaunchJobRetriesAmount, p.conf.LaunchJobRetriesAmount, "LaunchJobRetriesAmount", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.LaunchJobRetriesAmount = i
+		p.mx.Unlock()
+	}
+	d, ok = parseUpdatedTimeDurationByStr(cfg.Remediation.LaunchJobRetriesInterval, p.conf.LaunchJobRetriesInterval, "LaunchJobRetriesInterval", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.LaunchJobRetriesInterval = d
+		p.mx.Unlock()
+	}
+	i, ok = parseUpdatedInt(cfg.Remediation.WaitJobCompleteRetriesAmount, p.conf.WaitJobCompleteRetriesAmount, "WaitJobCompleteRetriesAmount", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.WaitJobCompleteRetriesAmount = i
+		p.mx.Unlock()
+	}
+	d, ok = parseUpdatedTimeDurationByStr(cfg.Remediation.WaitJobCompleteRetriesInterval, p.conf.WaitJobCompleteRetriesInterval, "WaitJobCompleteRetriesInterval", sectionName, p.logger)
+	if ok {
+		p.mx.Lock()
+		p.conf.WaitJobCompleteRetriesInterval = d
+		p.mx.Unlock()
 	}
 
 	return nil
@@ -750,3 +522,328 @@ func stringToScheduledTime(v string) (ScheduledTime, bool) {
 
 	return t, false
 }
+
+func parseTimeDurationByStr(
+	v string,
+	defaultVal time.Duration,
+	name, sectionName string,
+	logger zerolog.Logger,
+) time.Duration {
+	if v == "" {
+		logger.Error().
+			Str("default", defaultVal.String()).
+			Str("invalid", v).
+			Msgf("%s of %s config section is not defined, default value is used instead", name, sectionName)
+
+		return defaultVal
+	}
+
+	d, err := time.ParseDuration(v)
+	if err != nil {
+		logger.Err(err).
+			Str("default", defaultVal.String()).
+			Str("invalid", v).
+			Msgf("bad value %s of %s config section, default value is used instead", name, sectionName)
+
+		return defaultVal
+	}
+
+	logger.Info().
+		Str("value", d.String()).
+		Msgf("%s of %s config section is used", name, sectionName)
+
+	return d
+}
+
+func parseUpdatedTimeDurationByStr(
+	v string, oldValal time.Duration,
+	name, sectionName string,
+	logger zerolog.Logger,
+) (time.Duration, bool) {
+	if v == "" {
+		logger.Error().
+			Str("invalid", v).
+			Msgf("%s of %s config section is not defined, previous value is used", name, sectionName)
+		return 0, false
+	}
+
+	d, err := time.ParseDuration(v)
+	if err != nil {
+		logger.Err(err).
+			Str("invalid", v).
+			Msgf("bad value %s of %s config section, previous value is used instead", name, sectionName)
+		return 0, false
+	}
+
+	if d == oldValal {
+		return 0, false
+	}
+
+	logger.Info().
+		Str("previous", oldValal.String()).
+		Str("new", d.String()).
+		Msgf("%s of %s config section is loaded", name, sectionName)
+
+	return d, true
+}
+
+func parseTimeDurationBySeconds(
+	v int,
+	defaultVal time.Duration,
+	name, sectionName string,
+	logger zerolog.Logger,
+) time.Duration {
+	if v < 0 {
+		logger.Error().
+			Str("default", defaultVal.String()).
+			Int("invalid", v).
+			Msgf("bad value %s of %s config section, default value is used instead", name, sectionName)
+
+		return defaultVal
+	}
+
+	d := time.Duration(v) * time.Second
+	logger.Info().
+		Str("value", d.String()).
+		Msgf("%s of %s config section is used", name, sectionName)
+
+	return d
+}
+
+func parseUpdatedTimeDurationBySeconds(
+	v int,
+	oldValal time.Duration,
+	name, sectionName string,
+	logger zerolog.Logger,
+) (time.Duration, bool) {
+	if v < 0 {
+		logger.Error().
+			Int("invalid", v).
+			Msgf("bad value %s of %s config section, previous value is used instead", name, sectionName)
+		return 0, false
+	}
+
+	d := time.Duration(v) * time.Second
+	if d == oldValal {
+		return 0, false
+	}
+
+	logger.Info().
+		Str("previous", oldValal.String()).
+		Str("new", d.String()).
+		Msgf("%s of %s config section is loaded", name, sectionName)
+
+	return d, true
+}
+
+func parseInt(
+	v, defaultVal int,
+	name, sectionName string,
+	logger zerolog.Logger,
+) int {
+	if v < 0 {
+		logger.Error().
+			Int("default", defaultVal).
+			Int("invalid", v).
+			Msgf("bad value %s of %s config section, default value is used instead", name, sectionName)
+		return defaultVal
+	}
+
+	logger.Info().
+		Int("value", v).
+		Msgf("%s of %s config section is used", name, sectionName)
+
+	return v
+}
+
+func parseUpdatedInt(
+	v, oldValal int,
+	name, sectionName string,
+	logger zerolog.Logger,
+	invalidMsg ...string,
+) (int, bool) {
+	if v < 0 {
+		msg := "bad value %s of %s config section, previous value is used instead"
+		if len(invalidMsg) == 1 {
+			msg = invalidMsg[0]
+		}
+
+		logger.Error().
+			Int("invalid", v).
+			Msgf(msg, name, sectionName)
+		return 0, false
+	}
+
+	if v == oldValal {
+		return 0, false
+	}
+
+	logger.Info().
+		Int("previous", oldValal).
+		Int("new", v).
+		Msgf("%s of %s config section is loaded", name, sectionName)
+
+	return v, true
+}
+
+func parseTemplate(
+	v, defaultVal string,
+	name, sectionName string,
+	logger zerolog.Logger,
+) (*template.Template, string) {
+	if v == "" {
+		tpl, err := CreateDisplayNameTpl(defaultVal)
+		if err != nil {
+			panic(fmt.Errorf("invalid contant %s: %w", name, err))
+		}
+		logger.Error().
+			Str("default", defaultVal).
+			Str("invalid", v).
+			Msgf("%s of %s config section is not defined, default value is used instead", name, sectionName)
+
+		return tpl, defaultVal
+	}
+
+	tpl, err := CreateDisplayNameTpl(v)
+	if err != nil {
+		tpl, parseErr := CreateDisplayNameTpl(defaultVal)
+		if parseErr != nil {
+			panic(fmt.Errorf("invalid contant %s: %w", name, parseErr))
+		}
+
+		logger.Err(err).
+			Str("default", defaultVal).
+			Str("invalid", v).
+			Msgf("bad value %s of %s config section, default value is used instead", name, sectionName)
+
+		return tpl, defaultVal
+	}
+
+	logger.Info().
+		Str("value", v).
+		Msgf("%s of %s config section is used", name, sectionName)
+
+	return tpl, v
+}
+
+func parseUpdatedTemplate(
+	v, oldVal string,
+	name, sectionName string,
+	logger zerolog.Logger,
+) (*template.Template, string, bool) {
+	if v == "" {
+		logger.Error().
+			Str("invalid", v).
+			Msgf("%s of %s config section is not defined, previous value is used", name, sectionName)
+		return nil, "", false
+	}
+
+	if v == oldVal {
+		return nil, "", false
+	}
+
+	tpl, err := CreateDisplayNameTpl(v)
+	if err != nil {
+		logger.Err(err).
+			Str("invalid", v).
+			Msgf("bad value %s of %s config section, previous value is used instead", name, sectionName)
+		return nil, "", false
+	}
+
+	logger.Info().
+		Str("previous", oldVal).
+		Str("new", v).
+		Msgf("%s of %s config section is loaded", name, sectionName)
+
+	return tpl, v, true
+}
+
+func parseBool(
+	v bool,
+	name, sectionName string,
+	logger zerolog.Logger,
+) bool {
+	logger.Info().
+		Bool("value", v).
+		Msgf("%s of %s config section is used", name, sectionName)
+
+	return v
+}
+
+func parseUpdatedBool(
+	v, oldVal bool,
+	name, sectionName string,
+	logger zerolog.Logger,
+) (bool, bool) {
+	if v == oldVal {
+		return false, false
+	}
+	logger.Info().
+		Bool("previous", oldVal).
+		Bool("new", v).
+		Msgf("%s of %s config section is loaded", name, sectionName)
+
+	return v, true
+}
+
+func parseLocation(
+	v string,
+	defaultVal *time.Location,
+	name, sectionName string,
+	logger zerolog.Logger,
+) *time.Location {
+	if v == "" {
+		logger.Error().
+			Str("default", defaultVal.String()).
+			Str("invalid", v).
+			Msgf("%s of %s config section is not defined, default value is used instead", name, sectionName)
+		return defaultVal
+	}
+
+	location, err := time.LoadLocation(v)
+	if err != nil {
+		logger.Err(err).
+			Str("default", defaultVal.String()).
+			Str("invalid", v).
+			Msgf("bad value %s of %s config section, default value is used instead", name, sectionName)
+		return defaultVal
+	}
+
+	logger.Info().
+		Str("value", location.String()).
+		Msgf("%s of %s config section is used", name, sectionName)
+
+	return location
+}
+
+func parseUpdatedLocation(
+	v string,
+	oldVal *time.Location,
+	name, sectionName string,
+	logger zerolog.Logger,
+) (*time.Location, bool) {
+	if v == "" {
+		logger.Error().
+			Str("invalid", v).
+			Msgf("%s of %s config section is not defined, previous value is used", name, sectionName)
+		return nil, false
+	}
+	location, err := time.LoadLocation(v)
+	if err != nil {
+		logger.Err(err).
+			Str("invalid", v).
+			Msgf("bad value %s of %s config section, previous value is used instead", name, sectionName)
+		return nil, false
+	}
+
+	if oldVal.String() == location.String() {
+		return nil, false
+	}
+
+	logger.Info().
+		Str("previous", oldVal.String()).
+		Str("new", location.String()).
+		Msgf("%s of %s config section is loaded", name, sectionName)
+
+	return location, true
+}
diff --git a/lib/canopsis/config/constants.go b/lib/canopsis/config/constants.go
index d962cda3..3ac25c52 100644
--- a/lib/canopsis/config/constants.go
+++ b/lib/canopsis/config/constants.go
@@ -13,6 +13,12 @@ const (
 	AlarmDefaultNameScheme             = "{{ rand_string 2 }}-{{ rand_string 2 }}-{{ rand_string 2 }}"
 	RemediationJobExecutorFetchTimeout = 30 * time.Second
 	UserInterfaceMaxPbhEntities        = 10000
+
+	RemediationHttpTimeout                    = 30 * time.Second
+	RemediationLaunchJobRetriesAmount         = 3
+	RemediationLaunchJobRetriesInterval       = 5 * time.Second
+	RemediationWaitJobCompleteRetriesAmount   = 12
+	RemediationWaitJobCompleteRetriesInterval = 5 * time.Second
 )
 
 func CreateDisplayNameTpl(text string) (*template.Template, error) {
diff --git a/lib/canopsis/globals.go b/lib/canopsis/globals.go
index 157e7763..36fb2714 100644
--- a/lib/canopsis/globals.go
+++ b/lib/canopsis/globals.go
@@ -65,4 +65,7 @@ const (
 	PeriodicalWaitTime              = time.Minute
 	JsonContentType                 = "application/json"
 	CanopsisEventsExchange          = "canopsis.events"
+	RemediationEngineName           = "engine-remediation"
+	RemediationQueueName            = "Engine_remediation"
+	RemediationConsumerName         = "remediation"
 )
diff --git a/lib/canopsis/types/basic.go b/lib/canopsis/types/basic.go
index 809be70b..b25864ee 100644
--- a/lib/canopsis/types/basic.go
+++ b/lib/canopsis/types/basic.go
@@ -303,6 +303,10 @@ type DurationWithEnabled struct {
 	Enabled          *bool `bson:"enabled" json:"enabled" binding:"required"`
 }
 
+func (t DurationWithUnit) Duration() time.Duration {
+	return time.Duration(t.Seconds) * time.Second
+}
+
 func listOfInterfaceToString(v []interface{}) (string, error) {
 	values := make([]string, len(v))
 	for i, vv := range v {
diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index cb354dd2..6aab1fea 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -31,6 +31,7 @@ const (
 	FileMongoCollection                 = "files"
 	InstructionMongoCollection          = "instruction"
 	InstructionExecutionMongoCollection = "instruction_execution"
+	AutoInstructionExecutionMongoCollection = "auto_instruction_execution"
 	InstructionRatingMongoCollection    = "instruction_rating"
 	JobConfigMongoCollection            = "job_config"
 	JobMongoCollection                  = "job"
-- 
2.25.1


From be66d042375871f61dcd9b14855a3260f65ddfcb Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 1 Apr 2021 17:34:39 +0700
Subject: [PATCH 03/66] Feature #3046 : Add redis remediation storage

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/redis/redis.go | 1 +
 1 file changed, 1 insertion(+)

diff --git a/lib/redis/redis.go b/lib/redis/redis.go
index 9ed8fcfb..055f8208 100644
--- a/lib/redis/redis.go
+++ b/lib/redis/redis.go
@@ -33,6 +33,7 @@ const (
 	ActionScenarioStorage
 	EntityServiceStorage
 	EngineLockStorage
+	RemediationStorage
 )
 
 const PbehaviorKey = "pbehaviors"
-- 
2.25.1


From 9e9e9b4181d68b4d481a98676ed50c6da232c480 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 6 Apr 2021 12:04:22 +0700
Subject: [PATCH 04/66] Feature #3047 : Add axe rpc to engine-remediation

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../canopsis-cat.toml.example                 |  8 ++++
 cmd/engine-axe/dependencies.go                |  1 +
 lib/canopsis/globals.go                       |  9 ++--
 .../executor/instruction_executor.go          | 42 ++++++++++---------
 lib/canopsis/types/alarm_change.go            |  2 +
 lib/canopsis/types/event.go                   |  1 +
 lib/canopsis/types/model_alarm.go             |  1 +
 7 files changed, 41 insertions(+), 23 deletions(-)

diff --git a/cmd/canopsis-reconfigure/canopsis-cat.toml.example b/cmd/canopsis-reconfigure/canopsis-cat.toml.example
index 7ecc245f..f831454a 100644
--- a/cmd/canopsis-reconfigure/canopsis-cat.toml.example
+++ b/cmd/canopsis-reconfigure/canopsis-cat.toml.example
@@ -235,6 +235,14 @@ noWait = false
   noWait = false
   # args =
 
+[[RabbitMQ.queues]]
+name = "Engine_remediation_axe_rpc_client"
+durable = true
+autoDelete = false
+exclusive = false
+noWait = false
+# args =
+
 [[RabbitMQ.queues]]
 name = "Engine_kpi"
 durable = true
diff --git a/cmd/engine-axe/dependencies.go b/cmd/engine-axe/dependencies.go
index 2a6a83a7..8972f49e 100644
--- a/cmd/engine-axe/dependencies.go
+++ b/cmd/engine-axe/dependencies.go
@@ -269,6 +269,7 @@ func (m DependencyMaker) depOperationExecutor(
 	container.Set(types.EventTypeInstructionCompleted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionAborted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionFailed, executor.NewInstructionExecutor())
+	container.Set(types.EventTypeInstructionAlreadyRunning, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionJobStarted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionJobCompleted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionJobAborted, executor.NewInstructionExecutor())
diff --git a/lib/canopsis/globals.go b/lib/canopsis/globals.go
index 36fb2714..60283769 100644
--- a/lib/canopsis/globals.go
+++ b/lib/canopsis/globals.go
@@ -65,7 +65,10 @@ const (
 	PeriodicalWaitTime              = time.Minute
 	JsonContentType                 = "application/json"
 	CanopsisEventsExchange          = "canopsis.events"
-	RemediationEngineName           = "engine-remediation"
-	RemediationQueueName            = "Engine_remediation"
-	RemediationConsumerName         = "remediation"
+
+	RemediationEngineName            = "engine-remediation"
+	RemediationQueueName             = "Engine_remediation"
+	RemediationConsumerName          = "remediation"
+	RemediationRPCConsumerName       = "remediation_rpc"
+	RemediationAxeRPCClientQueueName = "Engine_remediation_axe_rpc_client"
 )
diff --git a/lib/canopsis/operation/executor/instruction_executor.go b/lib/canopsis/operation/executor/instruction_executor.go
index 876f8c9a..77af05ab 100644
--- a/lib/canopsis/operation/executor/instruction_executor.go
+++ b/lib/canopsis/operation/executor/instruction_executor.go
@@ -14,28 +14,30 @@ type instructionExecutor struct {
 func NewInstructionExecutor() operation.Executor {
 	return &instructionExecutor{
 		alarmStepTypeMap: map[string]string{
-			types.EventTypeInstructionStarted:      types.AlarmStepInstructionStart,
-			types.EventTypeInstructionPaused:       types.AlarmStepInstructionPause,
-			types.EventTypeInstructionResumed:      types.AlarmStepInstructionResume,
-			types.EventTypeInstructionCompleted:    types.AlarmStepInstructionComplete,
-			types.EventTypeInstructionAborted:      types.AlarmStepInstructionAbort,
-			types.EventTypeInstructionFailed:       types.AlarmStepInstructionFail,
-			types.EventTypeInstructionJobStarted:   types.AlarmStepInstructionJobStart,
-			types.EventTypeInstructionJobCompleted: types.AlarmStepInstructionJobComplete,
-			types.EventTypeInstructionJobAborted:   types.AlarmStepInstructionJobAbort,
-			types.EventTypeInstructionJobFailed:    types.AlarmStepInstructionJobFail,
+			types.EventTypeInstructionStarted:        types.AlarmStepInstructionStart,
+			types.EventTypeInstructionPaused:         types.AlarmStepInstructionPause,
+			types.EventTypeInstructionResumed:        types.AlarmStepInstructionResume,
+			types.EventTypeInstructionCompleted:      types.AlarmStepInstructionComplete,
+			types.EventTypeInstructionAborted:        types.AlarmStepInstructionAbort,
+			types.EventTypeInstructionFailed:         types.AlarmStepInstructionFail,
+			types.EventTypeInstructionAlreadyRunning: types.AlarmStepInstructionAlreadyRunning,
+			types.EventTypeInstructionJobStarted:     types.AlarmStepInstructionJobStart,
+			types.EventTypeInstructionJobCompleted:   types.AlarmStepInstructionJobComplete,
+			types.EventTypeInstructionJobAborted:     types.AlarmStepInstructionJobAbort,
+			types.EventTypeInstructionJobFailed:      types.AlarmStepInstructionJobFail,
 		},
 		alarmChangeTypeMap: map[string]types.AlarmChangeType{
-			types.EventTypeInstructionStarted:      types.AlarmChangeTypeInstructionStart,
-			types.EventTypeInstructionPaused:       types.AlarmChangeTypeInstructionPause,
-			types.EventTypeInstructionResumed:      types.AlarmChangeTypeInstructionResume,
-			types.EventTypeInstructionCompleted:    types.AlarmChangeTypeInstructionComplete,
-			types.EventTypeInstructionAborted:      types.AlarmChangeTypeInstructionAbort,
-			types.EventTypeInstructionFailed:       types.AlarmChangeTypeInstructionFail,
-			types.EventTypeInstructionJobStarted:   types.AlarmChangeTypeInstructionJobStart,
-			types.EventTypeInstructionJobCompleted: types.AlarmChangeTypeInstructionJobComplete,
-			types.EventTypeInstructionJobAborted:   types.AlarmChangeTypeInstructionJobAbort,
-			types.EventTypeInstructionJobFailed:    types.AlarmChangeTypeInstructionJobFail,
+			types.EventTypeInstructionStarted:        types.AlarmChangeTypeInstructionStart,
+			types.EventTypeInstructionPaused:         types.AlarmChangeTypeInstructionPause,
+			types.EventTypeInstructionResumed:        types.AlarmChangeTypeInstructionResume,
+			types.EventTypeInstructionCompleted:      types.AlarmChangeTypeInstructionComplete,
+			types.EventTypeInstructionAborted:        types.AlarmChangeTypeInstructionAbort,
+			types.EventTypeInstructionFailed:         types.AlarmChangeTypeInstructionFail,
+			types.EventTypeInstructionAlreadyRunning: types.AlarmChangeTypeInstructionAlreadyRunning,
+			types.EventTypeInstructionJobStarted:     types.AlarmChangeTypeInstructionJobStart,
+			types.EventTypeInstructionJobCompleted:   types.AlarmChangeTypeInstructionJobComplete,
+			types.EventTypeInstructionJobAborted:     types.AlarmChangeTypeInstructionJobAbort,
+			types.EventTypeInstructionJobFailed:      types.AlarmChangeTypeInstructionJobFail,
 		},
 	}
 }
diff --git a/lib/canopsis/types/alarm_change.go b/lib/canopsis/types/alarm_change.go
index 6dfe4047..303993dd 100644
--- a/lib/canopsis/types/alarm_change.go
+++ b/lib/canopsis/types/alarm_change.go
@@ -44,10 +44,12 @@ const (
 	AlarmChangeTypeInstructionComplete    AlarmChangeType = "instructioncomplete"
 	AlarmChangeTypeInstructionAbort       AlarmChangeType = "instructionabort"
 	AlarmChangeTypeInstructionFail        AlarmChangeType = "instructionfail"
+	AlarmChangeTypeInstructionAlreadyRunning AlarmChangeType = "instructionalreadyrunning"
 	AlarmChangeTypeInstructionJobStart    AlarmChangeType = "instructionjobstart"
 	AlarmChangeTypeInstructionJobComplete AlarmChangeType = "instructionjobcomplete"
 	AlarmChangeTypeInstructionJobAbort    AlarmChangeType = "instructionjobabort"
 	AlarmChangeTypeInstructionJobFail     AlarmChangeType = "instructionjobfail"
+
 	AlarmChangeTypeJunitTestSuiteUpdate   AlarmChangeType = "junittestsuiteupdate"
 	AlarmChangeTypeJunitTestCaseUpdate    AlarmChangeType = "junittestcaseupdate"
 )
diff --git a/lib/canopsis/types/event.go b/lib/canopsis/types/event.go
index 9d24c773..55f020ae 100644
--- a/lib/canopsis/types/event.go
+++ b/lib/canopsis/types/event.go
@@ -85,6 +85,7 @@ const (
 	EventTypeInstructionCompleted    = "instructioncompleted"
 	EventTypeInstructionAborted      = "instructionaborted"
 	EventTypeInstructionFailed       = "instructionfailed"
+	EventTypeInstructionAlreadyRunning = "instructionalreadyrunning"
 	EventTypeInstructionJobStarted   = "instructionjobstarted"
 	EventTypeInstructionJobCompleted = "instructionjobcompleted"
 	EventTypeInstructionJobAborted   = "instructionjobaborted"
diff --git a/lib/canopsis/types/model_alarm.go b/lib/canopsis/types/model_alarm.go
index 0a029e58..bf1e37a0 100644
--- a/lib/canopsis/types/model_alarm.go
+++ b/lib/canopsis/types/model_alarm.go
@@ -75,6 +75,7 @@ const (
 	AlarmStepInstructionComplete    = "instructioncomplete"
 	AlarmStepInstructionAbort       = "instructionabort"
 	AlarmStepInstructionFail        = "instructionfail"
+	AlarmStepInstructionAlreadyRunning = "instructionalreadyrunning"
 	AlarmStepInstructionJobStart    = "instructionjobstart"
 	AlarmStepInstructionJobComplete = "instructionjobcomplete"
 	AlarmStepInstructionJobAbort    = "instructionjobabort"
-- 
2.25.1


From 4f26f7c59fd00ff9f54f67d967be2bc4abd64916 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 6 Apr 2021 12:05:31 +0700
Subject: [PATCH 05/66] Feature #3047 : Update events for manual instructions

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/canopsis/types/event.go | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/lib/canopsis/types/event.go b/lib/canopsis/types/event.go
index 55f020ae..673db156 100644
--- a/lib/canopsis/types/event.go
+++ b/lib/canopsis/types/event.go
@@ -86,6 +86,7 @@ const (
 	EventTypeInstructionAborted      = "instructionaborted"
 	EventTypeInstructionFailed       = "instructionfailed"
 	EventTypeInstructionAlreadyRunning = "instructionalreadyrunning"
+	EventTypeInstructionJobStart     = "instructionjobstart"
 	EventTypeInstructionJobStarted   = "instructionjobstarted"
 	EventTypeInstructionJobCompleted = "instructionjobcompleted"
 	EventTypeInstructionJobAborted   = "instructionjobaborted"
@@ -189,6 +190,9 @@ type Event struct {
 
 	// IdleRuleApply is used if event is emitted by idle rule.
 	IdleRuleApply string `bson:"idle_rule_apply,omitempty" json:"idle_rule_apply,omitempty"`
+
+	// JobExecutionID is used only with EventTypeInstructionJobStart.
+	JobExecutionID string `bson:"job_execution_id,omitempty" json:"job_execution_id,omitempty"`
 }
 
 // ContextInformation regroup context values necessary for creating a new entity
-- 
2.25.1


From 4a076f9d773abd1ff2a77adfb7275890edc01afc Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 6 Apr 2021 12:07:43 +0700
Subject: [PATCH 06/66] Feature #3047 : Add functional tests for
 engine-remediation and update functional tests for instruction API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/auto_instruction_execution.json      |   1 +
 fixtures/configuration.json                   |   6 +-
 fixtures/default_entities.json                |  55 --
 fixtures/instruction.json                     | 473 +++++-----
 fixtures/instruction_execution.json           |  87 +-
 fixtures/job.json                             |  63 +-
 fixtures/job_config.json                      |  22 +-
 fixtures/job_history.json                     |  30 +-
 fixtures/periodical_alarm.json                | 284 ------
 lib/bdd/DummyHttpServer.go                    | 116 +++
 .../cat/instructionexecution_resume.feature   |  13 +-
 .../features/api/cat/job_config_get.feature   |  17 -
 .../features/api/cat/job_get.feature          |  17 -
 .../api/cat/jobexecution_cancel.feature       |  79 --
 .../features/api/cat/jobexecution_get.feature |   3 +-
 .../api/cat/jobexecution_start.feature        | 546 -----------
 .../integration/axe_api_instruction.feature   |  32 +-
 .../autoinstructionexecution_start.feature    | 438 +++++++++
 .../remediation/jobexecution_start.feature    | 844 ++++++++++++++++++
 tests/functional/main_test.go                 |   9 +
 20 files changed, 1740 insertions(+), 1395 deletions(-)
 create mode 100644 fixtures/auto_instruction_execution.json
 create mode 100644 lib/bdd/DummyHttpServer.go
 delete mode 100644 tests/functional/features/api/cat/jobexecution_cancel.feature
 delete mode 100644 tests/functional/features/api/cat/jobexecution_start.feature
 create mode 100644 tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
 create mode 100644 tests/functional/features/engines/remediation/jobexecution_start.feature

diff --git a/fixtures/auto_instruction_execution.json b/fixtures/auto_instruction_execution.json
new file mode 100644
index 00000000..0637a088
--- /dev/null
+++ b/fixtures/auto_instruction_execution.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/fixtures/configuration.json b/fixtures/configuration.json
index c33a3b92..30abe96a 100644
--- a/fixtures/configuration.json
+++ b/fixtures/configuration.json
@@ -40,7 +40,11 @@
       "junitapi": "/tmp/canopsis/junitapi"
     },
     "remediation": {
-      "jobexecutorfetchtimeoutseconds": 5
+      "HttpTimeout": "1m",
+      "LaunchJobRetriesAmount": 1,
+      "LaunchJobRetriesInterval": "1s",
+      "WaitJobCompleteRetriesInterval": "1s",
+      "WaitJobCompleteRetriesAmount": 1
     }
   }
 ]
\ No newline at end of file
diff --git a/fixtures/default_entities.json b/fixtures/default_entities.json
index 615adb79..4b5eb4e3 100644
--- a/fixtures/default_entities.json
+++ b/fixtures/default_entities.json
@@ -719,61 +719,6 @@
     "component": "test-instruction-execution-resume-component",
     "impact_level": 1
   },
-  {
-    "_id": "test-job-execution-start-resource-1/test-job-execution-start-component",
-    "depends": [],
-    "enable_history": [1597030220],
-    "enabled": true,
-    "impact": [],
-    "infos": {
-    },
-    "measurements": null,
-    "name": "test-job-execution-start-resource-1",
-    "type": "resource",
-    "component": "test-job-execution-start-component",
-    "impact_level": 1
-  },
-  {
-    "_id": "test-job-execution-start-resource-2/test-job-execution-start-component",
-    "depends": [],
-    "enable_history": [1597030220],
-    "enabled": true,
-    "impact": [],
-    "infos": {
-    },
-    "measurements": null,
-    "name": "test-job-execution-start-resource-2",
-    "type": "resource",
-    "component": "test-job-execution-start-component",
-    "impact_level": 1
-  },
-  {
-    "_id": "test-job-execution-start-resource-3/test-job-execution-start-component",
-    "depends": [],
-    "enable_history": [1597030220],
-    "enabled": true,
-    "impact": [],
-    "infos": {
-    },
-    "measurements": null,
-    "name": "test-job-execution-start-resource-3",
-    "type": "resource",
-    "component": "test-job-execution-start-component",
-    "impact_level": 1
-  },
-  {
-    "_id": "test-job-execution-start-resource-4/test-job-execution-start-component",
-    "depends": [],
-    "enable_history": [1597030220],
-    "enabled": true,
-    "impact": [],
-    "infos": {
-    },
-    "measurements": null,
-    "name": "test-job-execution-start-resource-4",
-    "type": "resource",
-    "component": "test-job-execution-start-component"
-  },
   {
     "_id": "test-instruction-execution-get-resource-1/test-instruction-execution-get-component",
     "depends": [],
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index a17169a8..95e83185 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -243,108 +243,6 @@
     "last_modified": 1596712203,
     "created": 1000000004
   },
-  {
-    "_id": "test-job-execution-to-start-multiple-times-1",
-    "name": "test-job-execution-to-start-multiple-times-1-name",
-    "entity_patterns": [
-      {
-        "name": "test filter"
-      }
-    ],
-    "description": "test-job-execution-to-start-multiple-times-1-description",
-    "author": "test-job-execution-to-start-multiple-times-1-author",
-    "enabled": true,
-    "avg_complete_time": 10,
-    "steps": [
-      {
-        "_id": "test-job-execution-to-start-multiple-times-1-step-1",
-        "name": "test-job-execution-to-start-multiple-times-1-step-1-name",
-        "operations": [
-          {
-            "_id": "test-job-execution-to-start-multiple-times-1-step-1-operation-1",
-            "name": "test-job-execution-to-start-multiple-times-1-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
-            "description": "test-job-execution-to-start-multiple-times-1-step-1-operation-1-description",
-            "jobs": ["test-job-execution-multiple-times-1"]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-job-execution-to-start-multiple-times-1-step-1-endpoint"
-      }
-    ],
-    "last_executed_by": "root",
-    "last_executed_on": 1596712203,
-    "last_modified": 1596712203,
-    "created": 1000000005
-  },
-  {
-    "_id": "test-job-execution-to-start-multiple-times-2",
-    "name": "test-job-execution-to-start-multiple-times-2-name",
-    "entity_patterns": [
-      {
-        "name": "test filter"
-      }
-    ],
-    "description": "test-job-execution-to-start-multiple-times-2-description",
-    "author": "test-job-execution-to-start-multiple-times-2-author",
-    "enabled": true,
-    "avg_complete_time": 10,
-    "steps": [
-      {
-        "_id": "test-job-execution-to-start-multiple-times-2-step-1",
-        "name": "test-job-execution-to-start-multiple-times-2-step-1-name",
-        "operations": [
-          {
-            "_id": "test-job-execution-to-start-multiple-times-2-step-1-operation-1",
-            "name": "test-job-execution-to-start-multiple-times-2-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
-            "description": "test-job-execution-to-start-multiple-times-2-step-1-operation-1-description",
-            "jobs": ["test-job-execution-multiple-times-2"]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-job-execution-to-start-multiple-times-2-step-1-endpoint"
-      }
-    ],
-    "last_executed_by": "root",
-    "last_executed_on": 1596712203,
-    "last_modified": 1596712203,
-    "created": 1000000006
-  },
-  {
-    "_id": "test-job-execution-to-start-multiple-times-3",
-    "name": "test-job-execution-to-start-multiple-times-3-name",
-    "entity_patterns": [
-      {
-        "name": "test filter"
-      }
-    ],
-    "description": "test-job-execution-to-start-multiple-times-3-description",
-    "author": "test-job-execution-to-start-multiple-times-3-author",
-    "enabled": true,
-    "avg_complete_time": 10,
-    "steps": [
-      {
-        "_id": "test-job-execution-to-start-multiple-times-3-step-1",
-        "name": "test-job-execution-to-start-multiple-times-3-step-1-name",
-        "operations": [
-          {
-            "_id": "test-job-execution-to-start-multiple-times-3-step-1-operation-1",
-            "name": "test-job-execution-to-start-multiple-times-3-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
-            "description": "test-job-execution-to-start-multiple-times-3-step-1-operation-1-description",
-            "jobs": ["test-job-execution-multiple-times-2"]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-job-execution-to-start-multiple-times-3-step-1-endpoint"
-      }
-    ],
-    "last_executed_by": "root",
-    "last_executed_on": 1596712203,
-    "last_modified": 1596712203,
-    "created": 1000000007
-  },
   {
     "_id": "test-instruction-cancel-execution-running-1",
     "name": "test-instruction-cancel-execution-running-1-name",
@@ -401,118 +299,6 @@
     "last_modified": 1596712203,
     "created": 1000000008
   },
-  {
-    "_id": "test-instruction-cancel-execution-running-2",
-    "name": "test-instruction-cancel-execution-running-2-name",
-    "entity_patterns": [
-      {
-        "name": "test filter"
-      }
-    ],
-    "description": "test-instruction-cancel-execution-running-2-description",
-    "author": "test-instruction-cancel-execution-running-2-author",
-    "enabled": true,
-    "avg_complete_time": 10,
-    "steps": [
-      {
-        "_id": "test-instruction-cancel-execution-running-2-step-1",
-        "name": "test-instruction-cancel-execution-running-2-step-1-name",
-        "operations": [
-          {
-            "_id": "test-instruction-cancel-execution-running-2-step-1-operation-1",
-            "name": "test-instruction-cancel-execution-running-2-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
-            "description": "test-instruction-cancel-execution-running-2-step-1-operation-1-description",
-            "jobs": []
-          },
-          {
-            "_id": "test-instruction-cancel-execution-running-2-step-1-operation-2",
-            "name": "test-instruction-cancel-execution-running-2-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-cancel-execution-running-2-step-1-operation-2-description",
-            "jobs": ["test-job-instruction-cancel-execution-running-2"]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-cancel-execution-running-2-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-cancel-execution-running-2-step-2",
-        "name": "test-instruction-cancel-execution-running-2-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-cancel-execution-running-2-step-2-operation-1",
-            "name": "test-instruction-cancel-execution-running-2-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-cancel-execution-running-2-step-2-operation-1-description",
-            "jobs": []
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-cancel-execution-running-2-step-2-endpoint"
-      }
-    ],
-    "last_executed_by": "root",
-    "last_executed_on": 1596712203,
-    "last_modified": 1596712203,
-    "created": 1000000009
-  },
-  {
-    "_id": "test-instruction-cancel-job-execution-running",
-    "name": "test-instruction-cancel-job-execution-running-name",
-    "entity_patterns": [
-      {
-        "name": "test filter"
-      }
-    ],
-    "description": "test-instruction-cancel-job-execution-running-description",
-    "author": "test-instruction-cancel-job-execution-running-author",
-    "enabled": true,
-    "avg_complete_time": 10,
-    "steps": [
-      {
-        "_id": "test-instruction-cancel-job-execution-running-step-1",
-        "name": "test-instruction-cancel-job-execution-running-step-1-name",
-        "operations": [
-          {
-            "_id": "test-instruction-cancel-job-execution-running-step-1-operation-1",
-            "name": "test-instruction-cancel-job-execution-running-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
-            "description": "test-instruction-cancel-job-execution-running-step-1-operation-1-description",
-            "jobs": []
-          },
-          {
-            "_id": "test-instruction-cancel-job-execution-running-step-1-operation-2",
-            "name": "test-instruction-cancel-job-execution-running-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-cancel-job-execution-running-step-1-operation-2-description",
-            "jobs": ["test-job-instruction-cancel-job-execution-running"]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-cancel-job-execution-running-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-cancel-job-execution-running-step-2",
-        "name": "test-instruction-cancel-job-execution-running-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-cancel-job-execution-running-step-2-operation-1",
-            "name": "test-instruction-cancel-job-execution-running-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-cancel-job-execution-running-step-2-operation-1-description",
-            "jobs": []
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-cancel-job-execution-running-step-2-endpoint"
-      }
-    ],
-    "last_executed_by": "root",
-    "last_executed_on": 1596712203,
-    "last_modified": 1596712203,
-    "created": 1000000010
-  },
   {
     "_id": "test-instruction-delete-execution-running",
     "name": "test-instruction-delete-execution-running-name",
@@ -597,7 +383,7 @@
             "name": "test-instruction-execution-resume-1-step-1-operation-2-name",
             "time_to_complete": {"seconds": 3, "unit":"s"},
             "description": "test-instruction-execution-resume-1-step-1-operation-2-description",
-            "jobs": ["test-job-execution-resume-1"]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
@@ -1488,5 +1274,262 @@
       "test1",
       "test2"
     ]
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-1-1",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-1-1-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-1"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-1-1-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-1",
+        "stop_on_fail": false
+      },
+      {
+        "job": "test-job-to-run-auto-instruction-2",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-1-1-author",
+    "priority": 1,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-1-2",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-1-2-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-1"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-1-2-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-1",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-1-2-author",
+    "priority": 2,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-2-1",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-2-1-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-2"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-2-1-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-1",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 3,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-2-1-author",
+    "priority": 1,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-2-2",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-2-2-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-2"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-2-2-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-2",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-2-2-author",
+    "priority": 2,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-3-1",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-3-1-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-3"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-3-1-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-3",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 10,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-3-1-author",
+    "priority": 1,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-3-2",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-3-2-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-3"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-3-2-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-1",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-3-2-author",
+    "priority": 2,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-4-1",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-4-1-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-4-1"
+      },
+      {
+        "name": "test-resource-to-run-auto-instruction-4-2"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-4-1-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-1",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-4-1-author",
+    "priority": 1,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-4-2",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-4-2-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-4-1"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-4-2-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-2",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-4-2-author",
+    "priority": 2,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-4-3",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-4-3-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-4-2"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-4-3-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-2",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-4-3-author",
+    "priority": 3,
+    "enabled": true,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-5",
+    "type": 1,
+    "name": "test-instruction-to-run-auto-instruction-5-name",
+    "entity_patterns": [
+      {
+        "name": "test-resource-to-run-auto-instruction-5"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-5-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-4",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "author": "test-instruction-to-run-auto-instruction-5-author",
+    "priority": 1,
+    "enabled": true,
+    "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 545f379e..f69d6b94 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -16,57 +16,6 @@
       }
     ]
   },
-  {
-    "_id": "test-job-execution-to-start-multiple-times-1",
-    "instruction": "test-job-execution-to-start-multiple-times-1",
-    "status": 0,
-    "step_history": [
-      {
-        "step": "test-job-execution-to-start-multiple-times-1-step-1",
-        "operation_history": [
-          {
-            "operation": "test-job-execution-to-start-multiple-times-1-step-1-operation-1",
-            "started_at": 1597905434,
-            "job_history": []
-          }
-        ]
-      }
-    ]
-  },
-  {
-    "_id": "test-job-execution-to-start-multiple-times-2",
-    "instruction": "test-job-execution-to-start-multiple-times-2",
-    "status": 0,
-    "step_history": [
-      {
-        "step": "test-job-execution-to-start-multiple-times-2-step-1",
-        "operation_history": [
-          {
-            "operation": "test-job-execution-to-start-multiple-times-2-step-1-operation-1",
-            "started_at": 1597905434,
-            "job_history": []
-          }
-        ]
-      }
-    ]
-  },
-  {
-    "_id": "test-job-execution-to-start-multiple-times-3",
-    "instruction": "test-job-execution-to-start-multiple-times-3",
-    "status": 0,
-    "step_history": [
-      {
-        "step": "test-job-execution-to-start-multiple-times-3-step-1",
-        "operation_history": [
-          {
-            "operation": "test-job-execution-to-start-multiple-times-3-step-1-operation-1",
-            "started_at": 1597905434,
-            "job_history": []
-          }
-        ]
-      }
-    ]
-  },
   {
     "_id": "test-instruction-cancel-execution-running-1",
     "instruction": "test-instruction-cancel-execution-running-1",
@@ -84,40 +33,6 @@
       }
     ]
   },
-  {
-    "_id": "test-instruction-cancel-execution-running-2",
-    "instruction": "test-instruction-cancel-execution-running-2",
-    "status": 0,
-    "step_history": [
-      {
-        "step": "test-instruction-cancel-execution-running-2-step-1",
-        "operation_history": [
-          {
-            "operation": "test-instruction-cancel-execution-running-2-step-1-operation-1",
-            "started_at": 1597905434,
-            "job_history": ["test-job-instruction-cancel-execution-running-2"]
-          }
-        ]
-      }
-    ]
-  },
-  {
-    "_id": "test-instruction-cancel-job-execution-running",
-    "instruction": "test-instruction-cancel-job-execution-running",
-    "status": 0,
-    "step_history": [
-      {
-        "step": "test-instruction-cancel-job-execution-running-step-1",
-        "operation_history": [
-          {
-            "operation": "test-instruction-cancel-job-execution-running-step-1-operation-1",
-            "started_at": 1597905434,
-            "job_history": ["test-job-instruction-cancel-job-execution-running"]
-          }
-        ]
-      }
-    ]
-  },
   {
     "_id": "test-instruction-delete-execution-running",
     "instruction": "test-instruction-delete-execution-running",
@@ -154,7 +69,7 @@
             "operation": "test-instruction-execution-resume-1-step-1-operation-2",
             "description": "test-instruction-execution-resume-1-step-1-operation-2-description",
             "started_at": 1597905437,
-            "job_history": ["test-job-execution-resume-1"]
+            "job_history": []
           }
         ]
       }
diff --git a/fixtures/job.json b/fixtures/job.json
index b73c60bb..b2b7241c 100644
--- a/fixtures/job.json
+++ b/fixtures/job.json
@@ -153,57 +153,48 @@
     "created": 1596712203
   },
   {
-    "_id": "test-job-execution-multiple-times-1",
-    "name": "test-job-execution-multiple-times-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-execution-multiple-times-2",
-    "name": "test-job-execution-multiple-times-2-name",
+    "_id": "test-job-execution-to-get",
+    "name": "test-job-execution-to-get",
     "author": "test_author",
-    "config": "test-job-config-to-link",
+    "config": "test-jobconfig-to-execution-get",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-execution-to-get",
-    "name": "test-job-execution-to-get",
-    "author": "test_author",
-    "config": "test-job-config-running",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
+    "_id": "test-job-to-run-auto-instruction-1",
+    "name": "test-job-to-run-auto-instruction-1-name",
+    "author": "test-job-to-run-auto-instruction-1-author",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-succeeded",
+    "payload": "{\"test-job-to-run-auto-instruction-1-key\": \"test-job-to-run-auto-instruction-1-val\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-instruction-cancel-job-execution-running",
-    "name": "test-job-instruction-cancel-job-execution-running",
-    "author": "test_author",
-    "config": "test-job-config-running",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
+    "_id": "test-job-to-run-auto-instruction-2",
+    "name": "test-job-to-run-auto-instruction-2-name",
+    "author": "test-job-to-run-auto-instruction-2-author",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-succeeded",
+    "payload": "{\"test-job-to-run-auto-instruction-2-key\": \"test-job-to-run-auto-instruction-2-val\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-instruction-cancel-execution-running-2",
-    "name": "test-job-instruction-cancel-execution-running-2",
-    "author": "test_author",
-    "config": "test-job-config-running",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
+    "_id": "test-job-to-run-auto-instruction-3",
+    "name": "test-job-to-run-auto-instruction-3-name",
+    "author": "test-job-to-run-auto-instruction-3-author",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-failed",
+    "payload": "{\"test-job-to-run-auto-instruction-3-key\": \"test-job-to-run-auto-instruction-3-val\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-execution-resume-1",
-    "name": "test-job-execution-resume-1",
-    "author": "test_author",
-    "config": "test-job-config-running",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
+    "_id": "test-job-to-run-auto-instruction-4",
+    "name": "test-job-to-run-auto-instruction-4-name",
+    "author": "test-job-to-run-auto-instruction-4-author",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-http-error",
+    "payload": "{\"test-job-to-run-auto-instruction-4-key\": \"test-job-to-run-auto-instruction-4-val\"}",
     "created": 1596712203
   },
   {
diff --git a/fixtures/job_config.json b/fixtures/job_config.json
index 01fc138e..c92fbf15 100644
--- a/fixtures/job_config.json
+++ b/fixtures/job_config.json
@@ -36,12 +36,30 @@
     "created": 1596550518
   },
   {
-    "_id": "test-job-config-running",
-    "name": "test-job-config-running",
+    "_id": "test-jobconfig-to-execution-get",
+    "name": "test-jobconfig-to-execution-get-name",
     "type": "rundeck",
     "author": "test-author",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
+  },
+  {
+    "_id": "test-job-config-to-run-auto-instruction",
+    "name": "test-job-config-to-run-auto-instruction-name",
+    "type": "rundeck",
+    "author": "test-job-config-to-run-auto-instruction-author",
+    "host": "http://localhost:3000",
+    "auth_token": "test-job-config-to-run-auto-instruction-token",
+    "created": 1596550518
+  },
+  {
+    "_id": "test-job-config-to-run-manual-job",
+    "name": "test-job-config-to-run-manual-job-name",
+    "type": "rundeck",
+    "author": "test-job-config-to-run-manual-job-author",
+    "host": "http://localhost:3000",
+    "auth_token": "test-job-config-to-run-manual-job-token",
+    "created": 1596550518
   }
 ]
\ No newline at end of file
diff --git a/fixtures/job_history.json b/fixtures/job_history.json
index a8361f59..b28d7735 100644
--- a/fixtures/job_history.json
+++ b/fixtures/job_history.json
@@ -4,33 +4,7 @@
     "job": "test-job-execution-to-get",
     "started_at": 1597906527,
     "launched_at": 1597906527,
-    "completed_at": 1597906537,
-    "status": 2,
-    "fail_reason": "test-job-execution-to-get-fail-reason",
-    "output": "test-job-execution-to-get-output"
-  },
-  {
-    "_id": "test-job-instruction-cancel-job-execution-running",
-    "job": "test-job-instruction-cancel-job-execution-running",
-    "started_at": 1597906527,
-    "status": 0
-  },
-  {
-    "_id": "test-job-instruction-cancel-execution-running-2",
-    "job": "test-job-instruction-cancel-execution-running-2",
-    "started_at": 1597906527,
-    "status": 0
-  },
-  {
-    "_id": "test-job-execution-resume-1",
-    "job": "test-job-execution-resume-1",
-    "started_at": 1597906527,
-    "status": 0
-  },
-  {
-    "_id": "test-job-execution-to-get-running-job",
-    "job": "test-job-to-get-running-job",
-    "started_at": 1597906527,
-    "status": 0
+    "completed_at": 1597906527,
+    "status": 1
   }
 ]
\ No newline at end of file
diff --git a/fixtures/periodical_alarm.json b/fixtures/periodical_alarm.json
index a65f8128..001779bf 100644
--- a/fixtures/periodical_alarm.json
+++ b/fixtures/periodical_alarm.json
@@ -2049,290 +2049,6 @@
       }
     }
   },
-  {
-    "_id": "test-job-execution-start-1",
-    "d": "test-job-execution-start-resource-1/test-job-execution-start-component",
-    "t": 1596942720,
-    "v": {
-      "state": {
-        "_t": "stateinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 3
-      },
-      "status": {
-        "_t": "statusinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 1
-      },
-      "steps": [
-        {
-          "_t": "stateinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 3
-        },
-        {
-          "_t": "statusinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 1
-        },
-        {
-          "_t": "comment",
-          "t": 1597033041,
-          "a": "system",
-          "m": "comment test-job-execution-start",
-          "role": "admin",
-          "val": 0,
-          "initiator": "user"
-        }
-      ],
-      "component": "test-job-execution-start-component",
-      "connector": "test-job-execution-start-connector",
-      "connector_name": "test-job-execution-start-connectorname",
-      "creation_date": 1596942720,
-      "display_name": "RC-KC_tW",
-      "initial_output": "test-job-execution-start alarm",
-      "output": "test-job-execution-start alarm",
-      "initial_long_output": "",
-      "long_output": "test-job-execution-start-correlation-search",
-      "long_output_history": [
-        ""
-      ],
-      "last_update_date": 1596942720,
-      "last_event_date": 1596942720,
-      "resource": "test-job-execution-start-resource-1",
-      "tags": [],
-      "parents": [],
-      "children": [],
-      "total_state_changes": 1,
-      "extra": {
-      },
-      "infos": {
-      },
-      "infos_rule_version": {
-      }
-    }
-  },
-  {
-    "_id": "test-job-execution-start-2",
-    "d": "test-job-execution-start-resource-2/test-job-execution-start-component",
-    "t": 1596942720,
-    "v": {
-      "state": {
-        "_t": "stateinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 3
-      },
-      "status": {
-        "_t": "statusinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 1
-      },
-      "steps": [
-        {
-          "_t": "stateinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 3
-        },
-        {
-          "_t": "statusinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 1
-        },
-        {
-          "_t": "comment",
-          "t": 1597033041,
-          "a": "system",
-          "m": "comment test-job-execution-start",
-          "role": "admin",
-          "val": 0,
-          "initiator": "user"
-        }
-      ],
-      "component": "test-job-execution-start-component",
-      "connector": "test-job-execution-start-connector",
-      "connector_name": "test-job-execution-start-connectorname",
-      "creation_date": 1596942720,
-      "display_name": "RC-KC_tW",
-      "initial_output": "test-job-execution-start alarm",
-      "output": "test-job-execution-start alarm",
-      "initial_long_output": "",
-      "long_output": "test-job-execution-start-correlation-search",
-      "long_output_history": [
-        ""
-      ],
-      "last_update_date": 1596942720,
-      "last_event_date": 1596942720,
-      "resource": "test-job-execution-start-resource-2",
-      "tags": [],
-      "parents": [],
-      "children": [],
-      "total_state_changes": 1,
-      "extra": {
-      },
-      "infos": {
-      },
-      "infos_rule_version": {
-      }
-    }
-  },
-  {
-    "_id": "test-job-execution-start-3",
-    "d": "test-job-execution-start-resource-3/test-job-execution-start-component",
-    "t": 1596942720,
-    "v": {
-      "state": {
-        "_t": "stateinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 3
-      },
-      "status": {
-        "_t": "statusinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 1
-      },
-      "steps": [
-        {
-          "_t": "stateinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 3
-        },
-        {
-          "_t": "statusinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 1
-        },
-        {
-          "_t": "comment",
-          "t": 1597033041,
-          "a": "system",
-          "m": "comment test-job-execution-start",
-          "role": "admin",
-          "val": 0,
-          "initiator": "user"
-        }
-      ],
-      "component": "test-job-execution-start-component",
-      "connector": "test-job-execution-start-connector",
-      "connector_name": "test-job-execution-start-connectorname",
-      "creation_date": 1596942720,
-      "display_name": "RC-KC_tW",
-      "initial_output": "test-job-execution-start alarm",
-      "output": "test-job-execution-start alarm",
-      "initial_long_output": "",
-      "long_output": "test-job-execution-start-correlation-search",
-      "long_output_history": [
-        ""
-      ],
-      "last_update_date": 1596942720,
-      "last_event_date": 1596942720,
-      "resource": "test-job-execution-start-resource-3",
-      "tags": [],
-      "parents": [],
-      "children": [],
-      "total_state_changes": 1,
-      "extra": {
-      },
-      "infos": {
-      },
-      "infos_rule_version": {
-      }
-    }
-  },
-  {
-    "_id": "test-job-execution-start-4",
-    "d": "test-job-execution-start-resource-4/test-job-execution-start-component",
-    "t": 1596942720,
-    "v": {
-      "state": {
-        "_t": "stateinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 3
-      },
-      "status": {
-        "_t": "statusinc",
-        "t": 1596942720,
-        "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-        "m": "test-job-execution-start alarm",
-        "val": 1
-      },
-      "steps": [
-        {
-          "_t": "stateinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 3
-        },
-        {
-          "_t": "statusinc",
-          "t": 1596942720,
-          "a": "test-job-execution-start-connector.test-job-execution-start-connectorname",
-          "m": "test-job-execution-start alarm",
-          "val": 1
-        },
-        {
-          "_t": "comment",
-          "t": 1597033041,
-          "a": "system",
-          "m": "comment test-job-execution-start",
-          "role": "admin",
-          "val": 0,
-          "initiator": "user"
-        }
-      ],
-      "component": "test-job-execution-start-component",
-      "connector": "test-job-execution-start-connector",
-      "connector_name": "test-job-execution-start-connectorname",
-      "creation_date": 1596942720,
-      "display_name": "RC-KC_tW",
-      "initial_output": "test-job-execution-start alarm",
-      "output": "test-job-execution-start alarm",
-      "initial_long_output": "",
-      "long_output": "test-job-execution-start-correlation-search",
-      "long_output_history": [
-        ""
-      ],
-      "last_update_date": 1596942720,
-      "last_event_date": 1596942720,
-      "resource": "test-job-execution-start-resource-4",
-      "tags": [],
-      "parents": [],
-      "children": [],
-      "total_state_changes": 1,
-      "extra": {
-      },
-      "infos": {
-      },
-      "infos_rule_version": {
-      }
-    }
-  },
   {
     "_id": "test-instruction-execution-cancel-1",
     "d": "test-instruction-execution-cancel-resource-1/test-instruction-execution-cancel-component",
diff --git a/lib/bdd/DummyHttpServer.go b/lib/bdd/DummyHttpServer.go
new file mode 100644
index 00000000..3a1929b0
--- /dev/null
+++ b/lib/bdd/DummyHttpServer.go
@@ -0,0 +1,116 @@
+package bdd
+
+import (
+	"context"
+	"fmt"
+	"net/http"
+	"time"
+)
+
+func RunDummyHttpServer(ctx context.Context, addr string) error {
+	mux := http.NewServeMux()
+	dummyRoutes := getDummyRoutes(addr)
+	mux.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
+		response, ok := dummyRoutes[r.URL.Path]
+		if !ok {
+			http.Error(w, fmt.Sprintf("[%s][%+v]", r.URL.Path, dummyRoutes), http.StatusNotFound)
+			return
+		}
+
+		if response.Timeout > 0 {
+			time.Sleep(response.Timeout)
+		}
+
+		if response.Method != r.Method {
+			http.Error(w, r.Method, http.StatusNotFound)
+			return
+		}
+
+		if response.Code != http.StatusOK {
+			http.Error(w, response.Body, response.Code)
+			return
+		}
+
+		_, err := fmt.Fprintf(w, response.Body)
+		if err != nil {
+			http.Error(w, err.Error(), http.StatusInternalServerError)
+		}
+	})
+
+	server := &http.Server{
+		Addr:    addr,
+		Handler: mux,
+	}
+
+	go func() {
+		<-ctx.Done()
+		shutdownCtx, shutdownCancel := context.WithTimeout(context.Background(), 5*time.Second)
+		defer shutdownCancel()
+
+		if err := server.Shutdown(shutdownCtx); err != nil {
+			panic(err)
+		}
+	}()
+
+	go func() {
+		err := server.ListenAndServe()
+		if err != nil {
+			panic(err)
+		}
+	}()
+
+	return nil
+}
+
+type dummyResponse struct {
+	Code    int
+	Method  string
+	Body    string
+	Timeout time.Duration
+}
+
+func getDummyRoutes(addr string) map[string]dummyResponse {
+	return map[string]dummyResponse{
+		// Rundeck
+		"/api/35/job/test-job-succeeded/run": {
+			Code:   http.StatusOK,
+			Method: http.MethodPost,
+			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-succeeded\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-succeeded\"}", addr),
+		},
+		"/api/35/execution/test-job-execution-succeeded": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "{\"status\":\"succeeded\"}",
+		},
+		"/api/35/job/test-job-failed/run": {
+			Code:   http.StatusOK,
+			Method: http.MethodPost,
+			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-failed\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-failed\"}", addr),
+		},
+		"/api/35/execution/test-job-execution-failed": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "{\"status\":\"failed\"}",
+		},
+		"/api/35/job/test-job-aborted/run": {
+			Code:   http.StatusOK,
+			Method: http.MethodPost,
+			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-aborted\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-aborted\"}", addr),
+		},
+		"/api/35/execution/test-job-execution-aborted": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "{\"status\":\"aborted\"}",
+		},
+		"/api/35/job/test-job-http-error/run": {
+			Code:   http.StatusOK,
+			Method: http.MethodPost,
+			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-http-error\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-http-error\"}", addr),
+		},
+		"/api/35/execution/test-job-execution-http-error": {
+			Code:   http.StatusBadRequest,
+			Method: http.MethodGet,
+			Body:   "{\"message\":\"http-error\"}",
+		},
+	}
+}
diff --git a/tests/functional/features/api/cat/instructionexecution_resume.feature b/tests/functional/features/api/cat/instructionexecution_resume.feature
index 75f9db61..f6fd30b0 100644
--- a/tests/functional/features/api/cat/instructionexecution_resume.feature
+++ b/tests/functional/features/api/cat/instructionexecution_resume.feature
@@ -31,18 +31,7 @@ Feature: pause a instruction execution
               "name": "test-instruction-execution-resume-1-step-1-operation-2-name",
               "time_to_complete": {"seconds": 3, "unit":"s"},
               "description": "test-instruction-execution-resume-1-step-1-operation-2-description",
-              "jobs": [
-                {
-                  "_id": "",
-                  "job_id": "test-job-execution-resume-1",
-                  "status": null,
-                  "name": "test-job-execution-resume-1",
-                  "fail_reason": "",
-                  "started_at": 0,
-                  "launched_at": 0,
-                  "completed_at": 0
-                }
-              ]
+              "jobs": []
             }
           ]
         },
diff --git a/tests/functional/features/api/cat/job_config_get.feature b/tests/functional/features/api/cat/job_config_get.feature
index 11ef10ac..9fed76d6 100644
--- a/tests/functional/features/api/cat/job_config_get.feature
+++ b/tests/functional/features/api/cat/job_config_get.feature
@@ -93,23 +93,6 @@ Feature: get a job's config
     }
     """
 
-  Scenario: Get a job's config with linked running job
-    When I am admin
-    When I do GET /api/v4/cat/job-configs?search=test-job-config-running&with_flags=true
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "data": [
-        {
-          "_id": "test-job-config-running",
-          "deletable": false,
-          "running": true
-        }
-      ]
-    }
-    """
-
   Scenario: Get a job's config with not found response
     When I am admin
     When I do GET /api/v4/cat/job-configs/test-not-found
diff --git a/tests/functional/features/api/cat/job_get.feature b/tests/functional/features/api/cat/job_get.feature
index 6a0fe620..d82a38ed 100644
--- a/tests/functional/features/api/cat/job_get.feature
+++ b/tests/functional/features/api/cat/job_get.feature
@@ -107,23 +107,6 @@ Feature: get a job
     }
     """
 
-  Scenario: Get a job with running execution
-    When I am admin
-    When I do GET /api/v4/cat/jobs?search=test-job-to-get-running-job&with_flags=true
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "data": [
-        {
-          "_id": "test-job-to-get-running-job",
-          "deletable": false,
-          "running": true
-        }
-      ]
-    }
-    """
-
   Scenario: Get a job with not found response
     When I am admin
     When I do GET /api/v4/cat/jobs/test-not-found
diff --git a/tests/functional/features/api/cat/jobexecution_cancel.feature b/tests/functional/features/api/cat/jobexecution_cancel.feature
deleted file mode 100644
index 86b18527..00000000
--- a/tests/functional/features/api/cat/jobexecution_cancel.feature
+++ /dev/null
@@ -1,79 +0,0 @@
-Feature: cancel a job execution
-  I need to be able to cancel a instruction execution
-  Only admin should be able to cancel a job execution
-
-  Scenario: given job should cancel running executions on job update
-    When I am admin
-    When I do GET /api/v4/cat/job-executions/test-job-instruction-cancel-job-execution-running
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "status": 0
-    }
-    """
-    When I do PUT /api/v4/cat/jobs/test-job-instruction-cancel-job-execution-running:
-    """
-    {
-      "name": "test-job-instruction-cancel-job-execution-running",
-      "config": "test-job-config-running",
-      "job_id": "test-job-id",
-      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-    }
-    """
-    Then the response code should be 200
-    When I do GET /api/v4/cat/job-executions/test-job-instruction-cancel-job-execution-running
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "status": 3
-    }
-    """
-
-  Scenario: given instruction should cancel running executions on instruction update
-    When I am admin
-    When I do GET /api/v4/cat/job-executions/test-job-instruction-cancel-execution-running-2
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "status": 0
-    }
-    """
-    When I do PUT /api/v4/cat/instructions/test-instruction-cancel-execution-running-2:
-    """
-    {
-      "name": "test-instruction-cancel-execution-running-2-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-cancel-execution-running-2-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-cancel-execution-running-2-step-1",
-          "operations": [
-            {
-              "name": "test-instruction-cancel-execution-running-2-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-cancel-execution-running-2-step-1-operation-1-description",
-              "jobs": ["test-job-instruction-cancel-execution-running-2"]
-            },
-            {
-              "name": "test-instruction-cancel-execution-running-2-step-1-operation-2",
-              "time_to_complete": {"seconds": 3, "unit":"s"},
-              "description": "test-instruction-cancel-execution-running-2-step-1-operation-2-description"
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-cancel-execution-running-2-step-1-endpoint"
-        }
-      ]
-    }
-    """
-    Then the response code should be 200
-    When I do GET /api/v4/cat/job-executions/test-job-instruction-cancel-execution-running-2
-    Then the response code should be 410
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/jobexecution_get.feature b/tests/functional/features/api/cat/jobexecution_get.feature
index 84f6e08d..79f240b4 100644
--- a/tests/functional/features/api/cat/jobexecution_get.feature
+++ b/tests/functional/features/api/cat/jobexecution_get.feature
@@ -6,7 +6,7 @@ Feature: get a running job
     When I am admin
     When I do GET /api/v4/cat/job-executions/test-job-execution-to-get
     Then the response code should be 200
-    Then the response body should contain:
+    Then the response body should be:
     """
     {
       "_id": "test-job-execution-to-get",
@@ -15,6 +15,7 @@ Feature: get a running job
       "status": 2,
       "fail_reason": "test-job-execution-to-get-fail-reason",
       "output": "test-job-execution-to-get-output",
+      "payload": "",
       "started_at": 1597906527,
       "launched_at": 1597906527,
       "completed_at": 1597906537
diff --git a/tests/functional/features/api/cat/jobexecution_start.feature b/tests/functional/features/api/cat/jobexecution_start.feature
deleted file mode 100644
index 91d91a20..00000000
--- a/tests/functional/features/api/cat/jobexecution_start.feature
+++ /dev/null
@@ -1,546 +0,0 @@
-Feature: run a job
-  I need to be able to run a job
-  Only admin should be able to run a job
-
-  Scenario: given job should start job for operation of instruction
-    When I am admin
-    When I do POST /api/v4/cat/jobs:
-    """
-    {
-      "name": "test-job-execution-start-1-1-name",
-      "config": "test-job-config-to-link",
-      "job_id": "test-job-execution-start-1-job-id",
-      "payload": "{\"resource1\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity1\": \"{{ `{{ .Entity.ID }}` }}\"}"
-    }
-    """
-    Then the response code should be 201
-    Then I save response job1ID={{ .lastResponse._id }}
-    When I do POST /api/v4/cat/jobs:
-    """
-    {
-      "name": "test-job-execution-start-1-2-name",
-      "config": "test-job-config-to-link",
-      "job_id": "test-job-execution-start-1-job-id",
-      "payload": "{\"resource2\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity2\": \"{{ `{{ .Entity.ID }}` }}\"}"
-    }
-    """
-    Then the response code should be 201
-    Then I save response job2ID={{ .lastResponse._id }}
-    When I do POST /api/v4/cat/instructions:
-    """
-    {
-      "name": "test-job-execution-start-1-name",
-      "alarm_patterns": [
-        {
-          "_id": "test-job-execution-start-1"
-        }
-      ],
-      "description": "test-job-execution-start-1-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-job-execution-start-1-step-1",
-          "operations": [
-            {
-              "name": "test-job-execution-start-1-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-1-step-1-operation-1-description",
-              "jobs": []
-            },
-            {
-              "name": "test-job-execution-start-1-step-1-operation-2",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-1-step-1-operation-2-description",
-              "jobs": []
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-job-execution-start-1-step-1-endpoint"
-        },
-        {
-          "name": "test-job-execution-start-1-step-2",
-          "operations": [
-            {
-              "name": "test-job-execution-start-1-step-2-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-1-step-2-operation-1-description",
-              "jobs": []
-            },
-            {
-              "name": "test-job-execution-start-1-step-2-operation-2",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-1-step-2-operation-2-description",
-              "jobs": ["{{ .job1ID }}", "{{ .job2ID }}"]
-            },
-            {
-              "name": "test-job-execution-start-1-step-2-operation-3",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-1-step-2-operation-3-description",
-              "jobs": []
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-job-execution-start-1-step-2-endpoint"
-        }
-      ]
-    }
-    """
-    Then the response code should be 201
-    When I do POST /api/v4/cat/executions:
-    """
-    {
-      "alarm": "test-job-execution-start-1",
-      "instruction": "{{ .lastResponse._id }}"
-    }
-    """
-    Then the response code should be 200
-    When I save response executionID={{ .lastResponse._id }}
-    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next
-    Then the response code should be 200
-    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
-    Then the response code should be 200
-    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next
-    Then the response code should be 200
-    Then I save response operationID={{ (index (index .lastResponse.steps 1).operations 1).operation_id }}
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "{{ .executionID }}",
-      "operation": "{{ .operationID }}",
-      "job": "{{ .job2ID }}"
-    }
-    """
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "name": "test-job-execution-start-1-2-name",
-      "status": 0,
-      "fail_reason": "",
-      "payload": "{\"resource2\": \"test-job-execution-start-resource-1\",\"entity2\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-      "launched_at": 0,
-      "completed_at": 0
-    }
-    """
-    Then the response key "started_at" should not be "0"
-    When I do GET /api/v4/cat/executions/{{ .executionID }}
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "steps": [
-        {},
-        {
-          "operations": [
-            {},
-            {
-              "name": "test-job-execution-start-1-step-2-operation-2",
-              "description": "test-job-execution-start-1-step-2-operation-2-description",
-              "completed_at": 0,
-              "time_to_complete": {
-                "seconds": 1,
-                "unit": "s"
-              },
-              "jobs": [
-                {
-                  "_id": "",
-                  "name": "test-job-execution-start-1-1-name",
-                  "status": null,
-                  "fail_reason": "",
-                  "payload": "",
-                  "started_at": 0,
-                  "launched_at": 0,
-                  "completed_at": 0
-                },
-                {
-                  "name": "test-job-execution-start-1-2-name",
-                  "status": 0,
-                  "fail_reason": "",
-                  "payload": "{\"resource2\": \"test-job-execution-start-resource-1\",\"entity2\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-                  "launched_at": 0,
-                  "completed_at": 0
-                }
-              ]
-            },
-            {}
-          ]
-        }
-      ]
-    }
-    """
-    When I do PUT /api/v4/cat/executions/{{ .executionID }}/ping
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "name": "test-job-execution-start-1-step-2-operation-2",
-      "description": "test-job-execution-start-1-step-2-operation-2-description",
-      "completed_at": 0,
-      "time_to_complete": {
-        "seconds": 1,
-        "unit": "s"
-      },
-      "jobs": [
-        {
-          "_id": "",
-          "name": "test-job-execution-start-1-1-name",
-          "status": null,
-          "fail_reason": "",
-          "payload": "",
-          "started_at": 0,
-          "launched_at": 0,
-          "completed_at": 0
-        },
-        {
-          "name": "test-job-execution-start-1-2-name",
-          "status": 0,
-          "fail_reason": "",
-          "payload": "{\"resource2\": \"test-job-execution-start-resource-1\",\"entity2\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-          "launched_at": 0,
-          "completed_at": 0
-        }
-      ]
-    }
-    """
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "{{ .executionID }}",
-      "operation": "{{ .operationID }}",
-      "job": "{{ .job1ID }}"
-    }
-    """
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "name": "test-job-execution-start-1-1-name",
-      "status": 0,
-      "fail_reason": "",
-      "payload": "{\"resource1\": \"test-job-execution-start-resource-1\",\"entity1\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-      "launched_at": 0,
-      "completed_at": 0
-    }
-    """
-    Then the response key "started_at" should not be "0"
-    When I do GET /api/v4/cat/executions/{{ .executionID }}
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "steps": [
-        {},
-        {
-          "operations": [
-            {},
-            {
-              "name": "test-job-execution-start-1-step-2-operation-2",
-              "description": "test-job-execution-start-1-step-2-operation-2-description",
-              "completed_at": 0,
-              "time_to_complete": {
-                "seconds": 1,
-                "unit": "s"
-              },
-              "jobs": [
-                {
-                  "name": "test-job-execution-start-1-1-name",
-                  "status": 0,
-                  "fail_reason": "",
-                  "payload": "{\"resource1\": \"test-job-execution-start-resource-1\",\"entity1\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-                  "launched_at": 0,
-                  "completed_at": 0
-                },
-                {
-                  "name": "test-job-execution-start-1-2-name",
-                  "status": 0,
-                  "fail_reason": "",
-                  "payload": "{\"resource2\": \"test-job-execution-start-resource-1\",\"entity2\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-                  "launched_at": 0,
-                  "completed_at": 0
-                }
-              ]
-            },
-            {}
-          ]
-        }
-      ]
-    }
-    """
-    When I do PUT /api/v4/cat/executions/{{ .executionID }}/ping
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "name": "test-job-execution-start-1-step-2-operation-2",
-      "description": "test-job-execution-start-1-step-2-operation-2-description",
-      "completed_at": 0,
-      "time_to_complete": {
-        "seconds": 1,
-        "unit": "s"
-      },
-      "jobs": [
-        {
-          "name": "test-job-execution-start-1-1-name",
-          "status": 0,
-          "fail_reason": "",
-          "payload": "{\"resource1\": \"test-job-execution-start-resource-1\",\"entity1\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-          "launched_at": 0,
-          "completed_at": 0
-        },
-        {
-          "name": "test-job-execution-start-1-2-name",
-          "status": 0,
-          "fail_reason": "",
-          "payload": "{\"resource2\": \"test-job-execution-start-resource-1\",\"entity2\": \"test-job-execution-start-resource-1/test-job-execution-start-component\"}",
-          "launched_at": 0,
-          "completed_at": 0
-        }
-      ]
-    }
-    """
-
-  Scenario: given job should not start job for operation of instruction multiple times
-    When I am admin
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "test-job-execution-to-start-multiple-times-1",
-      "operation": "test-job-execution-to-start-multiple-times-1-step-1-operation-1",
-      "job": "test-job-execution-multiple-times-1"
-    }
-    """
-    Then the response code should be 200
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "test-job-execution-to-start-multiple-times-1",
-      "operation": "test-job-execution-to-start-multiple-times-1-step-1-operation-1",
-      "job": "test-job-execution-multiple-times-1"
-    }
-    """
-    Then the response code should be 400
-    Then the response body should be:
-    """
-    {
-      "error": "job is already running for operation"
-    }
-    """
-
-  Scenario: given job should start job for different instructions multiple times
-    When I am admin
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "test-job-execution-to-start-multiple-times-2",
-      "operation": "test-job-execution-to-start-multiple-times-2-step-1-operation-1",
-      "job": "test-job-execution-multiple-times-2"
-    }
-    """
-    Then the response code should be 200
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "test-job-execution-to-start-multiple-times-3",
-      "operation": "test-job-execution-to-start-multiple-times-3-step-1-operation-1",
-      "job": "test-job-execution-multiple-times-2"
-    }
-    """
-    Then the response code should be 200
-
-  Scenario: given job should not start job for not running operation of instruction
-    When I am admin
-    When I do POST /api/v4/cat/jobs:
-    """
-    {
-      "name": "test-job-execution-start-2-name",
-      "config": "test-job-config-to-link",
-      "job_id": "test-job-execution-start-2-job-id",
-      "payload": "{}"
-    }
-    """
-    Then the response code should be 201
-    When I do POST /api/v4/cat/instructions:
-    """
-    {
-      "name": "test-job-execution-start-2-name",
-      "alarm_patterns": [
-        {
-          "_id": "test-job-execution-start-2"
-        }
-      ],
-      "description": "test-job-execution-start-2-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-job-execution-start-2-step-1",
-          "operations": [
-            {
-              "name": "test-job-execution-start-2-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-2-step-1-operation-1-description",
-              "jobs": ["{{ .lastResponse._id }}"]
-            },
-            {
-              "name": "test-job-execution-start-2-step-1-operation-2",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-2-step-1-operation-2-description"
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-job-execution-start-2-step-1-endpoint"
-        }
-      ]
-    }
-    """
-    Then the response code should be 201
-    When I do POST /api/v4/cat/executions:
-    """
-    {
-      "alarm": "test-job-execution-start-2",
-      "instruction": "{{ .lastResponse._id }}"
-    }
-    """
-    Then the response code should be 200
-    When I do PUT /api/v4/cat/executions/{{ .lastResponse._id }}/next
-    Then the response code should be 200
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "{{ .lastResponse._id }}",
-      "operation": "{{ (index (index .lastResponse.steps 0).operations 0).operation_id }}",
-      "job": "{{ (index (index (index .lastResponse.steps 0).operations 0).jobs 0).job_id }}"
-    }
-    """
-    Then the response code should be 404
-
-  Scenario: given job should not start job for not running instruction
-    When I am admin
-    When I do POST /api/v4/cat/jobs:
-    """
-    {
-      "name": "test-job-execution-start-3-name",
-      "config": "test-job-config-to-link",
-      "job_id": "test-job-execution-start-3-job-id",
-      "payload": "{}"
-    }
-    """
-    Then the response code should be 201
-    When I do POST /api/v4/cat/instructions:
-    """
-    {
-      "name": "test-job-execution-start-3-name",
-      "alarm_patterns": [
-        {
-          "_id": "test-job-execution-start-3"
-        }
-      ],
-      "description": "test-job-execution-start-3-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-job-execution-start-3-step-1",
-          "operations": [
-            {
-              "name": "test-job-execution-start-3-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-3-step-1-operation-1-description",
-              "jobs": ["{{ .lastResponse._id }}"]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-job-execution-start-3-step-1-endpoint"
-        }
-      ]
-    }
-    """
-    Then the response code should be 201
-    When I do POST /api/v4/cat/executions:
-    """
-    {
-      "alarm": "test-job-execution-start-3",
-      "instruction": "{{ .lastResponse._id }}"
-    }
-    """
-    Then the response code should be 200
-    When I do PUT /api/v4/cat/executions/{{ .lastResponse._id }}/next-step
-    Then the response code should be 200
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "{{ .lastResponse._id }}",
-      "operation": "{{ (index (index .lastResponse.steps 0).operations 0).operation_id }}",
-      "job": "{{ (index (index (index .lastResponse.steps 0).operations 0).jobs 0).job_id }}"
-    }
-    """
-    Then the response code should be 404
-
-  Scenario: given job should not start job for operation of instruction with invalid payload
-    When I am admin
-    When I do POST /api/v4/cat/jobs:
-    """
-    {
-      "name": "test-job-execution-start-4-name",
-      "config": "test-job-config-to-link",
-      "job_id": "test-job-execution-start-4-job-id",
-      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.ResourceBadValue }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
-    }
-    """
-    When I do POST /api/v4/cat/instructions:
-    """
-    {
-      "name": "test-job-execution-start-4-name",
-      "alarm_patterns": [
-        {
-          "_id": "test-job-execution-start-4"
-        }
-      ],
-      "description": "test-job-execution-start-4-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-job-execution-start-4-step-1",
-          "operations": [
-            {
-              "name": "test-job-execution-start-4-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-job-execution-start-4-step-1-operation-1-description",
-              "jobs": ["{{ .lastResponse._id }}"]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-job-execution-start-4-step-1-endpoint"
-        }
-      ]
-    }
-    """
-    When I do POST /api/v4/cat/executions:
-    """
-    {
-      "alarm": "test-job-execution-start-4",
-      "instruction": "{{ .lastResponse._id }}"
-    }
-    """
-    When I do POST /api/v4/cat/job-executions:
-    """
-    {
-      "execution": "{{ .lastResponse._id }}",
-      "operation": "{{ (index (index .lastResponse.steps 0).operations 0).operation_id }}",
-      "job": "{{ (index (index (index .lastResponse.steps 0).operations 0).jobs 0).job_id }}"
-    }
-    """
-    Then the response code should be 400
-    Then the response body should be:
-    """
-    {
-      "error": "payload is not valid"
-    }
-    """
-
-  Scenario: given unauth request should not allow access
-    When I do POST /api/v4/cat/job-executions
-    Then the response code should be 401
-
-  Scenario: given get request and auth user without permissions should not allow access
-    When I am noperms
-    When I do POST /api/v4/cat/job-executions
-    Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/engines/integration/axe_api_instruction.feature b/tests/functional/features/engines/integration/axe_api_instruction.feature
index a209519c..1c80e325 100644
--- a/tests/functional/features/engines/integration/axe_api_instruction.feature
+++ b/tests/functional/features/engines/integration/axe_api_instruction.feature
@@ -72,7 +72,7 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-1-name"
+                "m": "Instruction test-instruction-axe-api-instruction-1-name."
               }
             ]
           }
@@ -171,12 +171,12 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-2-name"
+                "m": "Instruction test-instruction-axe-api-instruction-2-name."
               },
               {
                 "_t": "instructioncomplete",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-2-name"
+                "m": "Instruction test-instruction-axe-api-instruction-2-name."
               }
             ]
           }
@@ -258,12 +258,12 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-3-name"
+                "m": "Instruction test-instruction-axe-api-instruction-3-name."
               },
               {
                 "_t": "instructionpause",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-3-name"
+                "m": "Instruction test-instruction-axe-api-instruction-3-name."
               }
             ]
           }
@@ -349,17 +349,17 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-4-name"
+                "m": "Instruction test-instruction-axe-api-instruction-4-name."
               },
               {
                 "_t": "instructionpause",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-4-name"
+                "m": "Instruction test-instruction-axe-api-instruction-4-name."
               },
               {
                 "_t": "instructionresume",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-4-name"
+                "m": "Instruction test-instruction-axe-api-instruction-4-name."
               }
             ]
           }
@@ -444,12 +444,12 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-5-name"
+                "m": "Instruction test-instruction-axe-api-instruction-5-name."
               },
               {
                 "_t": "instructionabort",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-5-name"
+                "m": "Instruction test-instruction-axe-api-instruction-5-name."
               }
             ]
           }
@@ -550,12 +550,12 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-6-name"
+                "m": "Instruction test-instruction-axe-api-instruction-6-name."
               },
               {
                 "_t": "instructionfail",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-6-name"
+                "m": "Instruction test-instruction-axe-api-instruction-6-name."
               }
             ]
           }
@@ -638,12 +638,12 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-7-name"
+                "m": "Instruction test-instruction-axe-api-instruction-7-name."
               },
               {
                 "_t": "instructionpause",
                 "a": "system",
-                "m": "Instruction test-instruction-axe-api-instruction-7-name"
+                "m": "Instruction test-instruction-axe-api-instruction-7-name."
               }
             ]
           }
@@ -764,12 +764,12 @@ Feature: instruction execution should be added to alarm steps
               {
                 "_t": "instructionstart",
                 "a": "root",
-                "m": "Instruction test-instruction-axe-api-instruction-8-name"
+                "m": "Instruction test-instruction-axe-api-instruction-8-name."
               },
               {
                 "_t": "instructionabort",
                 "a": "system",
-                "m": "Instruction test-instruction-axe-api-instruction-8-name"
+                "m": "Instruction test-instruction-axe-api-instruction-8-name."
               }
             ]
           }
diff --git a/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
new file mode 100644
index 00000000..62907ae6
--- /dev/null
+++ b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
@@ -0,0 +1,438 @@
+Feature: run an auto instruction
+  I need to be able to run an auto instruction
+
+  Scenario: given new alarm should run auto instructions
+    When I am admin
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-run-auto-instruction-1",
+      "connector_name": "test-connector-name-to-run-auto-instruction-1",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-run-auto-instruction-1",
+      "resource": "test-resource-to-run-auto-instruction-1",
+      "state": 1,
+      "output": "test-output-to-run-auto-instruction-1"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 8s
+    When I do GET /api/v4/alarms?search=test-resource-to-run-auto-instruction-1&with_steps=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "v": {
+            "steps": [
+              {},
+              {},
+              {
+                "_t": "instructionstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructionjobcomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name. Job test-job-to-run-auto-instruction-2-name."
+              },
+              {
+                "_t": "instructionjobcomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name. Job test-job-to-run-auto-instruction-2-name."
+              },
+              {
+                "_t": "instructioncomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name."
+              },
+              {
+                "_t": "instructionstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-2-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-2-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructionjobcomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-2-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructioncomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-1-2-name."
+              }
+            ]
+          }
+        }
+      ]
+    }
+    """
+
+  Scenario: given new alarm should not run next auto instructions if alarm is ok
+    When I am admin
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-run-auto-instruction-2",
+      "connector_name": "test-connector-name-to-run-auto-instruction-2",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-run-auto-instruction-2",
+      "resource": "test-resource-to-run-auto-instruction-2",
+      "state": 1,
+      "output": "test-output-to-run-auto-instruction-2"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 2s
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-run-auto-instruction-2",
+      "connector_name": "test-connector-name-to-run-auto-instruction-2",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-run-auto-instruction-2",
+      "resource": "test-resource-to-run-auto-instruction-2",
+      "state": 0,
+      "output": "test-output-to-run-auto-instruction-2"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 4s
+    When I do GET /api/v4/alarms?search=test-resource-to-run-auto-instruction-2&with_steps=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "v": {
+            "steps": [
+              {},
+              {},
+              {
+                "_t": "instructionstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-2-1-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-2-1-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructionjobcomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-2-1-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructioncomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-2-1-name."
+              },
+              {
+                "_t": "statedec",
+                "val": 0
+              },
+              {
+                "_t": "statusdec",
+                "val": 0
+              }
+            ]
+          }
+        }
+      ]
+    }
+    """
+
+  Scenario: given new alarm should run next auto instructions if instruction failed
+    When I am admin
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-run-auto-instruction-3",
+      "connector_name": "test-connector-name-to-run-auto-instruction-3",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-run-auto-instruction-3",
+      "resource": "test-resource-to-run-auto-instruction-3",
+      "state": 1,
+      "output": "test-output-to-run-auto-instruction-3"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 4s
+    When I do GET /api/v4/alarms?search=test-resource-to-run-auto-instruction-3&with_steps=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "v": {
+            "steps": [
+              {},
+              {},
+              {
+                "_t": "instructionstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-1-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-1-name. Job test-job-to-run-auto-instruction-3-name."
+              },
+              {
+                "_t": "instructionjobfail",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-1-name. Job test-job-to-run-auto-instruction-3-name."
+              },
+              {
+                "_t": "instructionfail",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-1-name."
+              },
+              {
+                "_t": "instructionstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-2-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-2-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructionjobcomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-2-name. Job test-job-to-run-auto-instruction-1-name."
+              },
+              {
+                "_t": "instructioncomplete",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-3-2-name."
+              }
+            ]
+          }
+        }
+      ]
+    }
+    """
+
+  Scenario: given new alarm should not run auto instruction if instruction is running for another alarm
+   When I am admin
+   When I send an event:
+   """
+   {
+     "connector": "test-connector-to-run-auto-instruction-4",
+     "connector_name": "test-connector-name-to-run-auto-instruction-4",
+     "source_type": "resource",
+     "event_type": "check",
+     "component": "test-component-to-run-auto-instruction-4",
+     "resource": "test-resource-to-run-auto-instruction-4-1",
+     "state": 1,
+     "output": "test-output-to-run-auto-instruction-4"
+   }
+   """
+   When I wait the end of event processing
+   When I send an event:
+   """
+   {
+     "connector": "test-connector-to-run-auto-instruction-4",
+     "connector_name": "test-connector-name-to-run-auto-instruction-4",
+     "source_type": "resource",
+     "event_type": "check",
+     "component": "test-component-to-run-auto-instruction-4",
+     "resource": "test-resource-to-run-auto-instruction-4-2",
+     "state": 1,
+     "output": "test-output-to-run-auto-instruction-4"
+   }
+   """
+   When I wait the end of event processing
+   When I wait 6s
+   When I do GET /api/v4/alarms?search=test-resource-to-run-auto-instruction-4-1&with_steps=true
+   Then the response code should be 200
+   Then the response body should contain:
+   """
+   {
+     "data": [
+       {
+         "v": {
+           "resource": "test-resource-to-run-auto-instruction-4-1",
+           "steps": [
+             {},
+             {},
+             {
+               "_t": "instructionstart",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
+             },
+             {
+               "_t": "instructionjobstart",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name. Job test-job-to-run-auto-instruction-1-name."
+             },
+             {
+               "_t": "instructionjobcomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name. Job test-job-to-run-auto-instruction-1-name."
+             },
+             {
+               "_t": "instructioncomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
+             },
+             {
+               "_t": "instructionstart",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-2-name."
+             },
+             {
+               "_t": "instructionjobstart",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-2-name. Job test-job-to-run-auto-instruction-2-name."
+             },
+             {
+               "_t": "instructionjobcomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-2-name. Job test-job-to-run-auto-instruction-2-name."
+             },
+             {
+               "_t": "instructioncomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-2-name."
+             }
+           ]
+         }
+       }
+     ]
+   }
+   """
+   When I do GET /api/v4/alarms?search=test-resource-to-run-auto-instruction-4-2&with_steps=true
+   Then the response code should be 200
+   Then the response body should contain:
+   """
+   {
+     "data": [
+       {
+         "v": {
+           "resource": "test-resource-to-run-auto-instruction-4-2",
+           "steps": [
+             {},
+             {},
+             {
+               "_t": "instructionalreadyrunning",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
+             },
+             {
+               "_t": "instructionjobcomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name. Job test-job-to-run-auto-instruction-1-name."
+             },
+             {
+               "_t": "instructioncomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
+             },
+             {
+               "_t": "instructionstart",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-3-name."
+             },
+             {
+               "_t": "instructionjobstart",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-3-name. Job test-job-to-run-auto-instruction-2-name."
+             },
+             {
+               "_t": "instructionjobcomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-3-name. Job test-job-to-run-auto-instruction-2-name."
+             },
+             {
+               "_t": "instructioncomplete",
+               "a": "system",
+               "m": "Instruction test-instruction-to-run-auto-instruction-4-3-name."
+             }
+           ]
+         }
+       }
+     ]
+   }
+   """
+
+  Scenario: given http error during job execution should return failed job status
+    When I am admin
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-run-auto-instruction-5",
+      "connector_name": "test-connector-name-to-run-auto-instruction-5",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-run-auto-instruction-5",
+      "resource": "test-resource-to-run-auto-instruction-5",
+      "state": 1,
+      "output": "test-output-to-run-auto-instruction-5"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 8s
+    When I do GET /api/v4/alarms?search=test-resource-to-run-auto-instruction-5&with_steps=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "v": {
+            "steps": [
+              {},
+              {},
+              {
+                "_t": "instructionstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-5-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-5-name. Job test-job-to-run-auto-instruction-4-name."
+              },
+              {
+                "_t": "instructionjobfail",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-5-name. Job test-job-to-run-auto-instruction-4-name."
+              },
+              {
+                "_t": "instructionfail",
+                "a": "system",
+                "m": "Instruction test-instruction-to-run-auto-instruction-5-name."
+              }
+            ]
+          }
+        }
+      ]
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/engines/remediation/jobexecution_start.feature b/tests/functional/features/engines/remediation/jobexecution_start.feature
new file mode 100644
index 00000000..a4b00a71
--- /dev/null
+++ b/tests/functional/features/engines/remediation/jobexecution_start.feature
@@ -0,0 +1,844 @@
+Feature: run a job
+  I need to be able to run a job
+  Only admin should be able to run a job
+
+  Scenario: given job should start job for operation of instruction
+    When I am admin
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-1-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-succeeded",
+      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response jobID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-1"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-1-description",
+      "author": "test-instruction-to-job-execution-start-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-1-step-1-operation-1-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-1-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-1",
+      "connector_name": "test-connector-name-to-job-execution-start-1",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-1",
+      "resource": "test-resource-to-job-execution-start-1",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-1"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-1
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarmID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response executionID={{ .lastResponse._id }}
+    When I save response operationID={{ (index (index .lastResponse.steps 0).operations 0).operation_id }}
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "name": "test-job-to-job-execution-start-1-name",
+      "status": 0,
+      "fail_reason": "",
+      "payload": "{\"resource\": \"test-resource-to-job-execution-start-1\",\"entity\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}",
+      "launched_at": 0,
+      "completed_at": 0
+    }
+    """
+    Then the response key "started_at" should not be "0"
+    When I wait the end of event processing
+    When I wait 2s
+    When I do GET /api/v4/cat/executions/{{ .executionID }}
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "steps": [
+        {
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-1-step-1-operation-1",
+              "completed_at": 0,
+              "time_to_complete": {
+                "seconds": 1,
+                "unit": "s"
+              },
+              "jobs": [
+                {
+                  "name": "test-job-to-job-execution-start-1-name",
+                  "status": 1,
+                  "fail_reason": "",
+                  "payload": "{\"resource\": \"test-resource-to-job-execution-start-1\",\"entity\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+                }
+              ]
+            }
+          ]
+        }
+      ]
+    }
+    """
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/ping
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "jobs": [
+        {
+          "name": "test-job-to-job-execution-start-1-name",
+          "status": 1,
+          "fail_reason": "",
+          "payload": "{\"resource\": \"test-resource-to-job-execution-start-1\",\"entity\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+        }
+      ]
+    }
+    """
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-1&with_steps=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "v": {
+            "steps": [
+              {},
+              {},
+              {
+                "_t": "instructionstart",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-1-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-name."
+              },
+              {
+                "_t": "instructionjobcomplete",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-name."
+              },
+              {
+                "_t": "instructioncomplete",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-1-name."
+              }
+            ]
+          }
+        }
+      ]
+    }
+    """
+
+  Scenario: given http error during job execution should return failed job status
+    When I am admin
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-2-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-http-error",
+      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response jobID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-2-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-2"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-2-description",
+      "author": "test-instruction-to-job-execution-start-2-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-2-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-2-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-2-step-1-operation-1-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-2-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-2",
+      "connector_name": "test-connector-name-to-job-execution-start-2",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-2",
+      "resource": "test-resource-to-job-execution-start-2",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-2"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-2
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarmID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response executionID={{ .lastResponse._id }}
+    When I save response operationID={{ (index (index .lastResponse.steps 0).operations 0).operation_id }}
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I wait 2s
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-2&with_steps=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "v": {
+            "steps": [
+              {},
+              {},
+              {
+                "_t": "instructionstart",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-2-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-2-name. Job test-job-to-job-execution-start-2-name."
+              },
+              {
+                "_t": "instructionjobfail",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-2-name. Job test-job-to-job-execution-start-2-name."
+              },
+              {
+                "_t": "instructioncomplete",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-2-name."
+              }
+            ]
+          }
+        }
+      ]
+    }
+    """
+
+  Scenario: given job should not start job for operation of instruction multiple times
+    When I am admin
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-3-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-succeeded",
+      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response jobID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-3-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-3"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-3-description",
+      "author": "test-instruction-to-job-execution-start-3-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-3-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-3-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-3-step-1-operation-1-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-3-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-3",
+      "connector_name": "test-connector-name-to-job-execution-start-3",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-3",
+      "resource": "test-resource-to-job-execution-start-3",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-3"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-3
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarmID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response executionID={{ .lastResponse._id }}
+    When I save response operationID={{ (index (index .lastResponse.steps 0).operations 0).operation_id }}
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+      "error": "job is already running for operation"
+    }
+    """
+    When I wait 2s
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    When I wait the end of event processing
+
+  Scenario: given job should start job for operation of different instructions multiple times
+    When I am admin
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-4-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-succeeded",
+      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response jobID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-4-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-4-1"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-4-1-description",
+      "author": "test-instruction-to-job-execution-start-4-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-4-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-4-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-4-1-step-1-operation-1-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-4-1-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response firstInstructionID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-4-2-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-4-2"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-4-2-description",
+      "author": "test-instruction-to-job-execution-start-4-2-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-4-2-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-4-2-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-4-2-step-1-operation-1-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-4-2-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response secondInstructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-4",
+      "connector_name": "test-connector-name-to-job-execution-start-4",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-4",
+      "resource": "test-resource-to-job-execution-start-4-1",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-4"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-4-1
+    Then the response code should be 200
+    When I save response firstAlarmID={{ (index .lastResponse.data 0)._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-4",
+      "connector_name": "test-connector-name-to-job-execution-start-4",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-4",
+      "resource": "test-resource-to-job-execution-start-4-2",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-4"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-4-2
+    Then the response code should be 200
+    When I save response secondAlarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .firstAlarmID }}",
+      "instruction": "{{ .firstInstructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response firstExecutionID={{ .lastResponse._id }}
+    When I save response firstOperationID={{ (index (index .lastResponse.steps 0).operations 0).operation_id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .secondAlarmID }}",
+      "instruction": "{{ .secondInstructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response secondExecutionID={{ .lastResponse._id }}
+    When I save response secondOperationID={{ (index (index .lastResponse.steps 0).operations 0).operation_id }}
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .firstExecutionID }}",
+      "operation": "{{ .firstOperationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .secondExecutionID }}",
+      "operation": "{{ .secondOperationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I wait 2s
+    When I do PUT /api/v4/cat/executions/{{ .firstExecutionID }}/next-step
+    When I do PUT /api/v4/cat/executions/{{ .secondExecutionID }}/next-step
+    When I wait the end of 2 events processing
+
+  Scenario: given job should not start job for not running operation of instruction
+    When I am admin
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-5-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-succeeded",
+      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response jobID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-5-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-5"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-5-description",
+      "author": "test-instruction-to-job-execution-start-5-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-5-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-5-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-5-step-1-operation-1-description",
+              "jobs": []
+            },
+            {
+              "name": "test-instruction-to-job-execution-start-5-step-1-operation-2",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-5-step-1-operation-2-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-5-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-5",
+      "connector_name": "test-connector-name-to-job-execution-start-5",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-5",
+      "resource": "test-resource-to-job-execution-start-5",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-5"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-5
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarmID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response executionID={{ .lastResponse._id }}
+    When I save response operationID={{ (index (index .lastResponse.steps 0).operations 1).operation_id }}
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 404
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    When I wait the end of event processing
+
+  Scenario: given job should not start job for not running instruction
+    When I am admin
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-6-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-succeeded",
+      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response jobID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-6-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-6"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-6-description",
+      "author": "test-instruction-to-job-execution-start-6-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-6-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-6-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-6-step-1-operation-1-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-6-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-6",
+      "connector_name": "test-connector-name-to-job-execution-start-6",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-6",
+      "resource": "test-resource-to-job-execution-start-6",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-6"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-6
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarmID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response executionID={{ .lastResponse._id }}
+    When I save response operationID={{ (index (index .lastResponse.steps 0).operations 0).operation_id }}
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 404
+
+  Scenario: given job with invalid payload should return error
+    When I am admin
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-7-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-succeeded",
+      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.ResourceBadValue }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response jobID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "name": "test-instruction-to-job-execution-start-7-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-job-execution-start-7"
+        }
+      ],
+      "description": "test-instruction-to-job-execution-start-7-description",
+      "author": "test-instruction-to-job-execution-start-7-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-job-execution-start-7-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-7-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-job-execution-start-7-step-1-operation-1-description",
+              "jobs": ["{{ .jobID }}"]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-job-execution-start-7-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-job-execution-start-7",
+      "connector_name": "test-connector-name-to-job-execution-start-7",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-job-execution-start-7",
+      "resource": "test-resource-to-job-execution-start-7",
+      "state": 1,
+      "output": "test-output-to-job-execution-start-7"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-job-execution-start-7
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarmID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I wait the end of event processing
+    When I save response executionID={{ .lastResponse._id }}
+    When I save response operationID={{ (index (index .lastResponse.steps 0).operations 0).operation_id }}
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .jobID }}"
+    }
+    """
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+      "error": "payload is not valid"
+    }
+    """
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    When I wait the end of event processing
+
+  Scenario: given unauth request should not allow access
+    When I do POST /api/v4/cat/job-executions
+    Then the response code should be 401
+
+  Scenario: given get request and auth user without permissions should not allow access
+    When I am noperms
+    When I do POST /api/v4/cat/job-executions
+    Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/main_test.go b/tests/functional/main_test.go
index dfb1da3c..85032c73 100644
--- a/tests/functional/main_test.go
+++ b/tests/functional/main_test.go
@@ -29,6 +29,7 @@ type Flags struct {
 	paths              arrayFlag
 	fixtures           arrayFlag
 	periodicalWaitTime time.Duration
+	dummyHttpPort      int64
 	eventWaitKey       string
 	eventWaitExchange  string
 	eventLogs          string
@@ -60,6 +61,7 @@ func TestMain(m *testing.M) {
 	flag.StringVar(&flags.eventWaitExchange, "ewe", "amq.direct", "Consume from exchange to detect the end of event processing.")
 	flag.StringVar(&flags.eventWaitKey, "ewk", canopsis.FIFOAckQueueName, "Consume by routing key to detect the end of event processing.")
 	flag.StringVar(&flags.eventLogs, "eventlogs", "", "Log all received events.")
+	flag.Int64Var(&flags.dummyHttpPort, "dummyHttpPort", 3000, "Port for dummy http server.")
 	flag.Parse()
 
 	if len(flags.paths) == 0 {
@@ -88,6 +90,13 @@ func TestMain(m *testing.M) {
 			Logger()
 	}
 
+	ctx, cancel := context.WithCancel(context.Background())
+	defer cancel()
+	err := bdd.RunDummyHttpServer(ctx, fmt.Sprintf("localhost:%d", flags.dummyHttpPort))
+	if err != nil {
+		log.Fatal(err)
+	}
+
 	opts := godog.Options{
 		StopOnFailure: true,
 		Format:        "pretty",
-- 
2.25.1


From b2afa39251824c723ff6ac35ef3e866d9b803bf0 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 7 Apr 2021 10:19:49 +0700
Subject: [PATCH 07/66] Feature #3038 : Add auto instruction create

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction.json                     |  786 ++++++-------
 fixtures/job.json                             |  134 +--
 fixtures/job_config.json                      |   22 +-
 lib/bdd/ApiClient.go                          |    2 +-
 .../api/cat/instruction_create.feature        | 1008 +++++++----------
 .../features/api/cat/instruction_get.feature  |  356 +++---
 .../api/cat/instruction_update.feature        |  267 +----
 .../cat/instructionexecution_cancel.feature   |    2 +
 .../api/cat/instructionexecution_get.feature  |    4 +
 .../api/cat/instructionexecution_next.feature |    2 +
 .../cat/instructionexecution_nextstep.feature |    6 +
 .../cat/instructionexecution_pause.feature    |    4 +
 .../cat/instructionexecution_previous.feature |    4 +
 .../cat/instructionexecution_start.feature    |    1 +
 .../api/cat/job_config_delete.feature         |    2 +-
 .../features/api/cat/job_config_get.feature   |    4 +-
 .../features/api/cat/job_create.feature       |   22 +-
 .../features/api/cat/job_delete.feature       |   11 +-
 .../features/api/cat/job_get.feature          |   12 +-
 .../features/api/cat/job_update.feature       |   20 +-
 .../integration/axe_api_instruction.feature   |    9 +
 .../remediation/jobexecution_start.feature    |    8 +
 22 files changed, 1166 insertions(+), 1520 deletions(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 95e83185..60d1eebe 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -1,61 +1,98 @@
 [
   {
-    "_id": "test-instruction-to-get",
-    "name": "test-instruction-to-get-name",
+    "_id": "test-instruction-to-get-1",
+    "type": 0,
+    "name": "test-instruction-to-get-1-name",
     "entity_patterns": [
       {
         "name": "test filter"
       }
     ],
-    "description": "test-instruction-to-get-description",
-    "author": "test-instruction-to-get-author",
+    "description": "test-instruction-to-get-1-description",
+    "author": "test-instruction-to-get-1-author",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-get-1-step-1",
+        "name": "test-instruction-to-get-1-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "_id": "test-instruction-to-get-1-step-1-operation-1",
+            "name": "test-instruction-to-get-1-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-get-1-step-1-operation-1-description",
             "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
+              "test-job-to-instruction-edit-1",
+              "test-job-to-instruction-edit-2"
             ]
           },
           {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
+            "_id": "test-instruction-to-get-1-step-1-operation-2",
+            "name": "test-instruction-to-get-1-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-get-1-step-1-operation-2-description",
             "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
+              "test-job-to-instruction-edit-2"
             ]
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-get-1-step-1-endpoint"
       },
       {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
+        "_id": "test-instruction-to-get-1-step-2",
+        "name": "test-instruction-to-get-1-step-2-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
+            "_id": "test-instruction-to-get-1-step-2-operation-1",
+            "name": "test-instruction-to-get-1-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-get-1-step-2-operation-1-description",
             "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
+              "test-job-to-instruction-edit-2",
+              "test-job-to-instruction-edit-1"
             ]
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
+        "endpoint": "test-instruction-to-get-1-step-2-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000000
+  },
+  {
+    "_id": "test-instruction-to-get-2",
+    "type": 1,
+    "name": "test-instruction-to-get-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-get-2-description",
+    "author": "test-instruction-to-get-2-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1",
+        "stop_on_fail": true
+      },
+      {
+        "job": "test-job-to-instruction-edit-2"
       }
     ],
     "last_executed_by": "root",
@@ -65,6 +102,7 @@
   },
   {
     "_id": "test-instruction-to-delete",
+    "type": 0,
     "name": "test-instruction-to-delete-name",
     "entity_patterns": [
       {
@@ -83,7 +121,10 @@
           {
             "_id": "test-instruction-to-delete-step-1-operation-1",
             "name": "test-instruction-to-delete-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-delete-step-1-operation-1-description",
             "jobs": []
           }
@@ -99,6 +140,7 @@
   },
   {
     "_id": "test-instruction-to-update",
+    "type": 0,
     "name": "test-instruction-to-update-name",
     "entity_patterns": [
       {
@@ -117,7 +159,10 @@
           {
             "_id": "test-instruction-to-update-step-1-operation-1",
             "name": "test-instruction-to-update-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-update-step-1-operation-1-description",
             "jobs": []
           }
@@ -131,8 +176,148 @@
     "last_modified": 1596712203,
     "created": 1000000002
   },
+  {
+    "_id": "test-instruction-to-check-unique-id",
+    "type": 0,
+    "name": "test-instruction-to-check-unique-id-name",
+    "entity_patterns": [
+      {
+        "name": "test-instruction-to-check-unique-id-pattern"
+      }
+    ],
+    "description": "test-instruction-to-check-unique-id-description",
+    "author": "test-instruction-to-check-unique-id-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-check-unique-id-step-1",
+        "name": "test-instruction-to-check-unique-id-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-check-unique-id-step-1-operation-1",
+            "name": "test-instruction-to-check-unique-id-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-check-unique-id-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-check-unique-id-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000001
+  },
+  {
+    "_id": "test-instruction-to-check-unique-name",
+    "type": 0,
+    "name": "test-instruction-to-check-unique-name-name",
+    "entity_patterns": [
+      {
+        "name": "test-instruction-to-check-unique-name-pattern"
+      }
+    ],
+    "description": "test-instruction-to-check-unique-name-description",
+    "author": "test-instruction-to-check-unique-name-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-check-unique-name-step-1",
+        "name": "test-instruction-to-check-unique-name-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-check-unique-name-step-1-operation-1",
+            "name": "test-instruction-to-check-unique-name-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-check-unique-name-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-check-unique-name-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000001
+  },
+  {
+    "_id": "test-instruction-to-job-check-linked-1",
+    "type": 0,
+    "name": "test-instruction-to-job-check-linked-1-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-job-check-linked-1-description",
+    "author": "test-instruction-to-job-check-linked-1-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-job-check-linked-1-step-1",
+        "name": "test-instruction-to-job-check-linked-1-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-job-check-linked-1-step-1-operation-1",
+            "name": "test-instruction-to-job-check-linked-1-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-job-check-linked-1-step-1-operation-1-description",
+            "jobs": [
+              "test-job-to-check-linked-to-manual-instruction"
+            ]
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-job-check-linked-1-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000000
+  },
+  {
+    "_id": "test-instruction-to-job-check-linked-2",
+    "type": 1,
+    "name": "test-instruction-to-job-check-linked-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-job-check-linked-2-description",
+    "author": "test-instruction-to-job-check-linked-2-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "jobs": [
+      {
+        "job": "test-job-to-check-linked-to-auto-instruction"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000000
+  },
   {
     "_id": "test-instruction-execution-to-start-multiple-times",
+    "type": 0,
     "name": "test-instruction-execution-to-start-multiple-times-name",
     "alarm_patterns": [
       {
@@ -151,14 +336,20 @@
           {
             "_id": "test-instruction-execution-to-start-multiple-times-step-1-operation-1",
             "name": "test-instruction-execution-to-start-multiple-times-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-to-start-multiple-times-step-1-operation-1-description",
             "jobs": []
           },
           {
             "_id": "test-instruction-execution-to-start-multiple-times-step-1-operation-2",
             "name": "test-instruction-execution-to-start-multiple-times-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-to-start-multiple-times-step-1-operation-2-description",
             "jobs": []
           }
@@ -173,7 +364,10 @@
           {
             "_id": "test-instruction-execution-to-start-multiple-times-step-2-operation-1",
             "name": "test-instruction-execution-to-start-multiple-times-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-to-start-multiple-times-step-2-operation-1-description",
             "jobs": []
           }
@@ -189,6 +383,7 @@
   },
   {
     "_id": "test-instruction-execution-running",
+    "type": 0,
     "name": "test-instruction-execution-running-name",
     "entity_patterns": [
       {
@@ -207,14 +402,22 @@
           {
             "_id": "test-instruction-execution-running-step-1-operation-1",
             "name": "test-instruction-execution-running-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-running-step-1-operation-1-description",
-            "jobs": ["test-job-execution-to-get"]
+            "jobs": [
+              "test-job-execution-to-get"
+            ]
           },
           {
             "_id": "test-instruction-execution-running-step-1-operation-2",
             "name": "test-instruction-execution-running-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-running-step-1-operation-2-description",
             "jobs": []
           }
@@ -229,7 +432,10 @@
           {
             "_id": "test-instruction-execution-running-step-2-operation-1",
             "name": "test-instruction-execution-running-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-running-step-2-operation-1-description",
             "jobs": []
           }
@@ -245,6 +451,7 @@
   },
   {
     "_id": "test-instruction-cancel-execution-running-1",
+    "type": 0,
     "name": "test-instruction-cancel-execution-running-1-name",
     "entity_patterns": [
       {
@@ -263,14 +470,20 @@
           {
             "_id": "test-instruction-cancel-execution-running-1-step-1-operation-1",
             "name": "test-instruction-cancel-execution-running-1-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-cancel-execution-running-1-step-1-operation-1-description",
             "jobs": []
           },
           {
             "_id": "test-instruction-cancel-execution-running-1-step-1-operation-2",
             "name": "test-instruction-cancel-execution-running-1-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
             "description": "test-instruction-cancel-execution-running-1-step-1-operation-2-description",
             "jobs": []
           }
@@ -285,7 +498,10 @@
           {
             "_id": "test-instruction-cancel-execution-running-1-step-2-operation-1",
             "name": "test-instruction-cancel-execution-running-1-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
             "description": "test-instruction-cancel-execution-running-1-step-2-operation-1-description",
             "jobs": []
           }
@@ -301,6 +517,7 @@
   },
   {
     "_id": "test-instruction-delete-execution-running",
+    "type": 0,
     "name": "test-instruction-delete-execution-running-name",
     "entity_patterns": [
       {
@@ -319,14 +536,20 @@
           {
             "_id": "test-instruction-delete-execution-running-step-1-operation-1",
             "name": "test-instruction-delete-execution-running-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-delete-execution-running-step-1-operation-1-description",
             "jobs": []
           },
           {
             "_id": "test-instruction-delete-execution-running-step-1-operation-2",
             "name": "test-instruction-delete-execution-running-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
             "description": "test-instruction-delete-execution-running-step-1-operation-2-description",
             "jobs": []
           }
@@ -341,7 +564,10 @@
           {
             "_id": "test-instruction-delete-execution-running-step-2-operation-1",
             "name": "test-instruction-delete-execution-running-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
             "description": "test-instruction-delete-execution-running-step-2-operation-1-description",
             "jobs": []
           }
@@ -356,6 +582,7 @@
   },
   {
     "_id": "test-instruction-execution-resume-1",
+    "type": 0,
     "name": "test-instruction-execution-resume-1-name",
     "entity_patterns": [
       {
@@ -374,14 +601,20 @@
           {
             "_id": "test-instruction-execution-resume-1-step-1-operation-1",
             "name": "test-instruction-execution-resume-1-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-resume-1-step-1-operation-1-description",
             "jobs": []
           },
           {
             "_id": "test-instruction-execution-resume-1-step-1-operation-2",
             "name": "test-instruction-execution-resume-1-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-resume-1-step-1-operation-2-description",
             "jobs": []
           }
@@ -396,7 +629,10 @@
           {
             "_id": "test-instruction-execution-resume-1-step-2-operation-1",
             "name": "test-instruction-execution-resume-1-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
             "description": "test-instruction-execution-resume-1-step-2-operation-1-description",
             "jobs": []
           }
@@ -412,6 +648,7 @@
   },
   {
     "_id": "test-instruction-to-assign",
+    "type": 0,
     "name": "test-instruction-to-assign-name",
     "alarm_patterns": [
       {
@@ -431,43 +668,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -477,6 +687,7 @@
   },
   {
     "_id": "test-instruction-to-assign-with-execution",
+    "type": 0,
     "name": "test-instruction-to-assign-with-execution-name",
     "alarm_patterns": [
       {
@@ -496,43 +707,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -542,6 +726,7 @@
   },
   {
     "_id": "test-instruction-to-assign-with-execution-2",
+    "type": 0,
     "name": "test-instruction-to-assign-with-execution-2-name",
     "alarm_patterns": [
       {
@@ -561,43 +746,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -607,6 +765,7 @@
   },
   {
     "_id": "test-instruction-to-assign-without-execution",
+    "type": 0,
     "name": "test-instruction-to-assign-without-execution-name",
     "alarm_patterns": [
       {
@@ -626,43 +785,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -672,6 +804,7 @@
   },
   {
     "_id": "test-instruction-to-rate-1",
+    "type": 0,
     "name": "test-instruction-to-rate-1-name",
     "alarm_patterns": [
       {
@@ -691,43 +824,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -737,6 +843,7 @@
   },
   {
     "_id": "test-instruction-to-rate-2",
+    "type": 0,
     "name": "test-instruction-to-rate-2-name",
     "alarm_patterns": [
       {
@@ -756,43 +863,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -802,6 +882,7 @@
   },
   {
     "_id": "test-instruction-to-rate-3",
+    "type": 0,
     "name": "test-instruction-to-rate-3-name",
     "alarm_patterns": [
       {
@@ -821,43 +902,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -867,6 +921,7 @@
   },
   {
     "_id": "test-instruction-to-rate-4",
+    "type": 0,
     "name": "test-instruction-to-rate-4-name",
     "alarm_patterns": [
       {
@@ -886,43 +941,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -932,6 +960,7 @@
   },
   {
     "_id": "test-instruction-to-rate-5",
+    "type": 0,
     "name": "test-instruction-to-rate-5-name",
     "alarm_patterns": [
       {
@@ -951,43 +980,16 @@
           {
             "_id": "test-instruction-to-get-step-1-operation-1",
             "name": "test-instruction-to-get-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-to-get-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-to-get-step-1-operation-2",
-            "name": "test-instruction-to-get-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-to-get-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-to-get-step-2",
-        "name": "test-instruction-to-get-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-get-step-2-operation-1",
-            "name": "test-instruction-to-get-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-to-get-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-              "test-job-to-test-instruction-to-get-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -997,6 +999,7 @@
   },
   {
     "_id": "test-instruction-with-entity-pattern-1",
+    "type": 0,
     "name": "test-instruction-with-entity-pattern-1-name",
     "entity_patterns": [
       {
@@ -1018,43 +1021,16 @@
           {
             "_id": "test-instruction-with-entity-pattern-1-step-1-operation-1",
             "name": "test-instruction-with-entity-pattern-1-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-with-entity-pattern-1-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-entity-pattern-1-step-1-operation-1-1",
-              "test-job-to-test-instruction-with-entity-pattern-1-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-with-entity-pattern-1-step-1-operation-2",
-            "name": "test-instruction-with-entity-pattern-1-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-with-entity-pattern-1-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-entity-pattern-1-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-with-entity-pattern-1-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-with-entity-pattern-1-step-2",
-        "name": "test-instruction-with-entity-pattern-1-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-with-entity-pattern-1-step-2-operation-1",
-            "name": "test-instruction-with-entity-pattern-1-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-with-entity-pattern-1-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-entity-pattern-1-step-2-operation-1-1",
-              "test-job-to-test-instruction-with-entity-pattern-1-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-with-entity-pattern-1-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -1064,6 +1040,7 @@
   },
   {
     "_id": "test-instruction-with-entity-pattern-2",
+    "type": 0,
     "name": "test-instruction-with-entity-pattern-2-name",
     "entity_patterns": [
       {
@@ -1085,43 +1062,16 @@
           {
             "_id": "test-instruction-with-entity-pattern-2-step-1-operation-1",
             "name": "test-instruction-with-entity-pattern-2-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-with-entity-pattern-2-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-entity-pattern-2-step-1-operation-1-1",
-              "test-job-to-test-instruction-with-entity-pattern-2-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-with-entity-pattern-2-step-1-operation-2",
-            "name": "test-instruction-with-entity-pattern-2-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-with-entity-pattern-2-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-entity-pattern-2-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-with-entity-pattern-2-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-with-entity-pattern-2-step-2",
-        "name": "test-instruction-with-entity-pattern-2-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-with-entity-pattern-2-step-2-operation-1",
-            "name": "test-instruction-with-entity-pattern-2-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-with-entity-pattern-2-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-entity-pattern-2-step-2-operation-1-1",
-              "test-job-to-test-instruction-with-entity-pattern-2-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-with-entity-pattern-2-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -1131,6 +1081,7 @@
   },
   {
     "_id": "test-instruction-with-patterns-combined",
+    "type": 0,
     "name": "test-instruction-with-patterns-combined-name",
     "entity_patterns": [
       {
@@ -1159,43 +1110,16 @@
           {
             "_id": "test-instruction-with-patterns-combined-step-1-operation-1",
             "name": "test-instruction-with-patterns-combined-step-1-operation-1-name",
-            "time_to_complete": {"seconds": 1, "unit":"s"},
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
             "description": "test-instruction-with-patterns-combined-step-1-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-patterns-combined-step-1-operation-1-1",
-              "test-job-to-test-instruction-with-patterns-combined-step-1-operation-1-2"
-            ]
-          },
-          {
-            "_id": "test-instruction-with-patterns-combined-step-1-operation-2",
-            "name": "test-instruction-with-patterns-combined-step-1-operation-2-name",
-            "time_to_complete": {"seconds": 3, "unit":"s"},
-            "description": "test-instruction-with-patterns-combined-step-1-operation-2-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-patterns-combined-step-1-operation-2-1"
-            ]
+            "jobs": []
           }
         ],
         "stop_on_fail": true,
         "endpoint": "test-instruction-with-patterns-combined-step-1-endpoint"
-      },
-      {
-        "_id": "test-instruction-with-patterns-combined-step-2",
-        "name": "test-instruction-with-patterns-combined-step-2-name",
-        "operations": [
-          {
-            "_id": "test-instruction-with-patterns-combined-step-2-operation-1",
-            "name": "test-instruction-with-patterns-combined-step-2-operation-1-name",
-            "time_to_complete": {"seconds": 6, "unit":"s"},
-            "description": "test-instruction-with-patterns-combined-step-2-operation-1-description",
-            "jobs": [
-              "test-job-to-test-instruction-with-patterns-combined-step-2-operation-1-1",
-              "test-job-to-test-instruction-with-patterns-combined-step-2-operation-1-2"
-            ]
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-with-patterns-combined-step-2-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -1205,6 +1129,7 @@
   },
   {
     "_id": "test-instruction-with-pbh-with-some-active",
+    "type": 0,
     "name": "test-alarm-with-pbh-with-some-active-name",
     "description": "test-alarm-with-pbh-with-some-active-description",
     "author": "test-alarm-with-pbh-with-some-active-author",
@@ -1224,6 +1149,7 @@
   },
   {
     "_id": "test-instruction-with-pbh-all-active",
+    "type": 0,
     "name": "test-alarm-with-pbh-all-active-name",
     "description": "test-alarm-with-pbh-all-active-description",
     "author": "test-alarm-with-pbh-all-active-author",
@@ -1239,6 +1165,7 @@
   },
   {
     "_id": "test-instruction-with-pbh-with-some-disabled",
+    "type": 0,
     "name": "test-alarm-with-pbh-with-some-disabled-name",
     "description": "test-alarm-with-pbh-with-some-disabled-description",
     "author": "test-alarm-with-pbh-with-some-disabled-author",
@@ -1258,6 +1185,7 @@
   },
   {
     "_id": "test-instruction-with-pbh-to-edit",
+    "type": 0,
     "name": "test-instruction-with-pbh-to-edit-name",
     "description": "test-instruction-with-pbh-to-edit-description",
     "author": "test-instruction-with-pbh-to-edit-author",
diff --git a/fixtures/job.json b/fixtures/job.json
index b2b7241c..346673db 100644
--- a/fixtures/job.json
+++ b/fixtures/job.json
@@ -3,7 +3,7 @@
     "_id": "test-job-to-get",
     "name": "test-job-name-to-get",
     "author": "test-author",
-    "config": "test-job-config-to-link",
+    "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
@@ -12,7 +12,7 @@
     "_id": "test-job-to-update",
     "name": "test-job-name-to-update",
     "author": "test-author",
-    "config": "test-job-config-to-link",
+    "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
@@ -20,143 +20,71 @@
   {
     "_id": "test-job-to-delete",
     "name": "test-job-name-to-delete",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-    "name": "test-job-to-test-instruction-to-get-step-1-operation-1-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-to-test-instruction-to-get-step-1-operation-1-2",
-    "name": "test-job-to-test-instruction-to-get-step-1-operation-1-2-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-to-test-instruction-to-get-step-1-operation-2-1",
-    "name": "test-job-to-test-instruction-to-get-step-1-operation-2-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-    "name": "test-job-to-test-instruction-to-get-step-2-operation-1-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-to-test-instruction-to-get-step-2-operation-1-2",
-    "name": "test-job-to-test-instruction-to-get-step-2-operation-1-2-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-to-test-instruction-new-step-1-operation-1-1",
-    "name": "test-job-to-test-instruction-new-step-1-operation-1-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
+    "author": "test-author",
+    "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-to-test-instruction-new-step-1-operation-1-2",
-    "name": "test-job-to-test-instruction-new-step-1-operation-1-2-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
+    "_id": "test-job-to-check-linked-to-manual-instruction",
+    "name": "test-job-to-check-linked-to-manual-instruction-name",
+    "author": "test-author",
+    "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-to-test-instruction-new-step-1-operation-2-1",
-    "name": "test-job-to-test-instruction-new-step-1-operation-2-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
+    "_id": "test-job-to-check-linked-to-auto-instruction",
+    "name": "test-job-to-check-linked-to-auto-instruction-name",
+    "author": "test-author",
+    "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-to-test-instruction-new-step-2-operation-1-1",
-    "name": "test-job-to-test-instruction-new-step-2-operation-1-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
+    "_id": "test-job-to-instruction-edit-1",
+    "name": "test-job-to-instruction-edit-1-name",
+    "author": "test-job-to-instruction-edit-1-author",
+    "config": "test-job-config-to-edit-instruction",
+    "external_id": "test-job-to-instruction-edit-1-external-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-to-test-instruction-new-step-2-operation-1-2",
-    "name": "test-job-to-test-instruction-new-step-2-operation-1-2-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
+    "_id": "test-job-to-instruction-edit-2",
+    "name": "test-job-to-instruction-edit-2-name",
+    "author": "test-job-to-instruction-edit-2-author",
+    "config": "test-job-config-to-edit-instruction",
+    "external_id": "test-job-to-instruction-edit-2-external-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-to-link-1",
-    "name": "test-job-name-to-link-1",
+    "_id": "test-instruction-execution-1",
+    "name": "test-instruction-execution-1-name",
     "author": "test-author",
-    "config": "test-job-config-to-link",
+    "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-to-link-2",
-    "name": "test-job-name-to-link-2",
+    "_id": "test-job-execution-to-get",
+    "name": "test-job-execution-to-get",
     "author": "test-author",
-    "config": "test-job-config-to-link",
+    "config": "test-jobconfig-to-execution-get",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
   },
   {
-    "_id": "test-job-to-link-3",
-    "name": "test-job-name-to-link-3",
+    "_id": "test-job-to-config-check-linked",
+    "name": "test-job-to-config-check-linked-name",
     "author": "test-author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-instruction-execution-1",
-    "name": "test-instruction-execution-1-name",
-    "author": "test_author",
-    "config": "test-job-config-to-link",
-    "external_id": "test-job-id",
-    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
-    "created": 1596712203
-  },
-  {
-    "_id": "test-job-execution-to-get",
-    "name": "test-job-execution-to-get",
-    "author": "test_author",
-    "config": "test-jobconfig-to-execution-get",
+    "config": "test-job-config-to-check-linked",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
diff --git a/fixtures/job_config.json b/fixtures/job_config.json
index c92fbf15..173038f4 100644
--- a/fixtures/job_config.json
+++ b/fixtures/job_config.json
@@ -27,8 +27,26 @@
     "created": 1596550518
   },
   {
-    "_id": "test-job-config-to-link",
-    "name": "test-job-config-name-to-link",
+    "_id": "test-job-config-to-check-linked",
+    "name": "test-job-config-to-check-linked-name",
+    "type": "rundeck",
+    "author": "test-author",
+    "host": "http://example.com",
+    "auth_token": "test-auth-token",
+    "created": 1596550518
+  },
+  {
+    "_id": "test-job-config-to-edit-job",
+    "name": "test-job-config-to-edit-job-name",
+    "type": "rundeck",
+    "author": "test-author",
+    "host": "http://example.com",
+    "auth_token": "test-auth-token",
+    "created": 1596550518
+  },
+  {
+    "_id": "test-job-config-to-edit-instruction",
+    "name": "test-job-config-to-edit-instruction-name",
     "type": "rundeck",
     "author": "test-author",
     "host": "http://example.com",
diff --git a/lib/bdd/ApiClient.go b/lib/bdd/ApiClient.go
index a4bb9c7d..83c246d4 100644
--- a/lib/bdd/ApiClient.go
+++ b/lib/bdd/ApiClient.go
@@ -151,7 +151,7 @@ func (a *ApiClient) TheResponseBodyShouldBe(doc *messages.PickleStepArgument_Pic
 	}
 
 	content := b.Bytes()
-	// Try to umarshal expected body as json
+	// Try to unmarshal expected body as json
 	var expectedBody interface{}
 	err = json.Unmarshal(content, &expectedBody)
 	if err != nil {
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 1a2fcd88..0af2a65a 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -2,176 +2,60 @@ Feature: create a instruction
   I need to be able to create a instruction
   Only admin should be able to create a instruction
 
-  Scenario: POST a valid instruction but unauthorized
-    When I do POST /api/v4/cat/instructions:
-    """
-    {
-      "name": "test-instruction-new-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-new-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-new-step-1",
-          "operations": [
-            {
-              "name": "test-instruction-new-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-1-description",
-              "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-1-1",
-                "test-job-to-test-instruction-new-step-1-operation-1-2"
-              ]
-            },
-            {
-              "name": "test-instruction-new-step-1-operation-2",
-              "time_to_complete": {"seconds": 3, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-2-description",
-              "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-2-1"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-1-endpoint"
-        },
-        {
-          "name": "test-instruction-new-step-2",
-          "operations": [
-            {
-              "name": "test-instruction-new-step-2-operation-1",
-              "time_to_complete": {"seconds": 6, "unit":"s"},
-              "description": "test-instruction-new-step-2-operation-1-description",
-              "jobs": [
-                "test-job-to-test-instruction-new-step-2-operation-1-1",
-                "test-job-to-test-instruction-new-step-2-operation-1-2"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-2-endpoint"
-        }
-      ]
-    }
-    """
-    Then the response code should be 401
-
-  Scenario: POST a valid instruction but without permissions
-    When I am noperms
-    When I do POST /api/v4/cat/instructions:
-    """
-      {
-        "name": "test-instruction-new-name",
-        "entity_patterns": [
-          {
-            "name": "test filter"
-          }
-        ],
-        "description": "test-instruction-new-description",
-        "enabled": true,
-        "steps": [
-          {
-            "name": "test-instruction-new-step-1",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-1-operation-1",
-                "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-1-1",
-                  "test-job-to-test-instruction-new-step-1-operation-1-2"
-                ]
-              },
-              {
-                "name": "test-instruction-new-step-1-operation-2",
-                "time_to_complete": {"seconds": 3, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-2-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-2-1"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-1-endpoint"
-          },
-          {
-            "name": "test-instruction-new-step-2",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-2-operation-1",
-                "time_to_complete": {"seconds": 6, "unit":"s"},
-                "description": "test-instruction-new-step-2-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "test-job-to-test-instruction-new-step-2-operation-1-2"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-2-endpoint"
-          }
-        ]
-      }
-    """
-    Then the response code should be 403
-
-  Scenario: POST a valid instruction
+  Scenario: given create manual instruction request should return ok
     When I am admin
     When I do POST /api/v4/cat/instructions:
     """
     {
-      "name": "test-instruction-new-name",
+      "type": 0,
+      "name": "test-instruction-to-create-1-name",
       "entity_patterns": [
         {
-          "name": "test filter"
+          "name": "test-instruction-to-create-1-pattern"
         }
       ],
-      "description": "test-instruction-new-description",
+      "description": "test-instruction-to-create-1-description",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-new-step-1",
+          "name": "test-instruction-to-create-1-step-1",
           "operations": [
             {
-              "name": "test-instruction-new-step-1-operation-1",
+              "name": "test-instruction-to-create-1-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-1-description",
+              "description": "test-instruction-to-create-1-step-1-operation-1-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-1-1",
-                "test-job-to-test-instruction-new-step-1-operation-1-2"
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
               ]
             },
             {
-              "name": "test-instruction-new-step-1-operation-2",
+              "name": "test-instruction-to-create-1-step-1-operation-2",
               "time_to_complete": {"seconds": 3, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-2-description",
+              "description": "test-instruction-to-create-1-step-1-operation-2-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-2-1"
+                "test-job-to-instruction-edit-2"
               ]
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-1-step-1-endpoint"
         },
         {
-          "name": "test-instruction-new-step-2",
+          "name": "test-instruction-to-create-1-step-2",
           "operations": [
             {
-              "name": "test-instruction-new-step-2-operation-1",
+              "name": "test-instruction-to-create-1-step-2-operation-1",
               "time_to_complete": {"seconds": 6, "unit":"s"},
-              "description": "test-instruction-new-step-2-operation-1-description",
+              "description": "test-instruction-to-create-1-step-2-operation-1-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-2-operation-1-1",
-                "test-job-to-test-instruction-new-step-2-operation-1-2"
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
               ]
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-2-endpoint"
+          "endpoint": "test-instruction-to-create-1-step-2-endpoint"
         }
       ]
     }
@@ -182,125 +66,120 @@ Feature: create a instruction
     {
       "entity_patterns": [
         {
-          "name": "test filter"
+          "name": "test-instruction-to-create-1-pattern"
         }
       ],
-      "author": "root",
-      "avg_complete_time": 0,
-      "description": "test-instruction-new-description",
+      "author": "test-instruction-to-create-1-author",
+      "description": "test-instruction-to-create-1-description",
       "enabled": true,
-      "last_executed_by": null,
-      "last_executed_on": null,
-      "month_executions": 0,
-      "name": "test-instruction-new-name",
-      "rating": 0,
+      "name": "test-instruction-to-create-1-name",
       "steps": [
         {
           "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-1-endpoint",
-          "name": "test-instruction-new-step-1",
+          "endpoint": "test-instruction-to-create-1-step-1-endpoint",
+          "name": "test-instruction-to-create-1-step-1",
           "operations": [
             {
-              "description": "test-instruction-new-step-1-operation-1-description",
+              "description": "test-instruction-to-create-1-step-1-operation-1-description",
               "jobs": [
                 {
-                  "_id": "test-job-to-test-instruction-new-step-1-operation-1-1",
-                  "author": "test_author",
+                  "_id": "test-job-to-instruction-edit-1",
+                  "author": "test-job-to-instruction-edit-1-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
                     "author": "test-author",
                     "host": "http://example.com",
-                    "name": "test-job-config-name-to-link",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
                   },
-                  "job_id": "test-job-id",
-                  "name": "test-job-to-test-instruction-new-step-1-operation-1-1-name",
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "name": "test-job-to-instruction-edit-1-name",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 },
                 {
-                  "_id": "test-job-to-test-instruction-new-step-1-operation-1-2",
-                  "author": "test_author",
+                  "_id": "test-job-to-instruction-edit-2",
+                  "author": "test-job-to-instruction-edit-2-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
                     "author": "test-author",
                     "host": "http://example.com",
-                    "name": "test-job-config-name-to-link",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
                   },
-                  "job_id": "test-job-id",
-                  "name": "test-job-to-test-instruction-new-step-1-operation-1-2-name",
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "name": "test-job-to-instruction-edit-2-name",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
               ],
-              "name": "test-instruction-new-step-1-operation-1",
+              "name": "test-instruction-to-create-1-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"}
             },
             {
-              "description": "test-instruction-new-step-1-operation-2-description",
+              "description": "test-instruction-to-create-1-step-1-operation-2-description",
               "jobs": [
                 {
-                  "_id": "test-job-to-test-instruction-new-step-1-operation-2-1",
-                  "author": "test_author",
+                  "_id": "test-job-to-instruction-edit-2",
+                  "author": "test-job-to-instruction-edit-2-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
                     "author": "test-author",
                     "host": "http://example.com",
-                    "name": "test-job-config-name-to-link",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
                   },
-                  "job_id": "test-job-id",
-                  "name": "test-job-to-test-instruction-new-step-1-operation-2-1-name",
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "name": "test-job-to-instruction-edit-2-name",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
               ],
-              "name": "test-instruction-new-step-1-operation-2",
+              "name": "test-instruction-to-create-1-step-1-operation-2",
               "time_to_complete": {"seconds": 3, "unit":"s"}
             }
           ]
         },
         {
           "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-2-endpoint",
-          "name": "test-instruction-new-step-2",
+          "endpoint": "test-instruction-to-create-1-step-2-endpoint",
+          "name": "test-instruction-to-create-1-step-2",
           "operations": [
             {
-              "description": "test-instruction-new-step-2-operation-1-description",
+              "description": "test-instruction-to-create-1-step-2-operation-1-description",
               "jobs": [
                 {
-                  "_id": "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "author": "test_author",
+                  "_id": "test-job-to-instruction-edit-1",
+                  "author": "test-job-to-instruction-edit-1-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
                     "author": "test-author",
                     "host": "http://example.com",
-                    "name": "test-job-config-name-to-link",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
                   },
-                  "job_id": "test-job-id",
-                  "name": "test-job-to-test-instruction-new-step-2-operation-1-1-name",
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "name": "test-job-to-instruction-edit-1-name",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 },
                 {
-                  "_id": "test-job-to-test-instruction-new-step-2-operation-1-2",
-                  "author": "test_author",
+                  "_id": "test-job-to-instruction-edit-2",
+                  "author": "test-job-to-instruction-edit-2-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
                     "author": "test-author",
                     "host": "http://example.com",
-                    "name": "test-job-config-name-to-link",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
                   },
-                  "job_id": "test-job-id",
-                  "name": "test-job-to-test-instruction-new-step-2-operation-1-2-name",
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "name": "test-job-to-instruction-edit-2-name",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
               ],
-              "name": "test-instruction-new-step-2-operation-1",
+              "name": "test-instruction-to-create-1-step-2-operation-1",
               "time_to_complete": {"seconds": 6, "unit":"s"}
             }
           ]
@@ -309,321 +188,354 @@ Feature: create a instruction
     }
     """
 
-  Scenario: POST a valid instruction with custom id
+  Scenario: given create auto instruction request should return ok
+    When I am admin
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "type": 1,
+      "name": "test-instruction-to-create-2-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-2-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-2-description",
+      "author": "test-instruction-to-create-2-author",
+      "enabled": true,
+      "priority": 1,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "jobs": [
+        {
+          "stop_on_fail": true,
+          "job": "test-job-to-instruction-edit-1"
+        },
+        {
+          "job": "test-job-to-instruction-edit-2"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-2-pattern"
+        }
+      ],
+      "author": "test-instruction-to-create-2-author",
+      "description": "test-instruction-to-create-2-description",
+      "enabled": true,
+      "priority": 1,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "name": "test-instruction-to-create-2-name",
+      "jobs": [
+        {
+          "stop_on_fail": true,
+          "job": {
+            "_id": "test-job-to-instruction-edit-1",
+            "author": "test-job-to-instruction-edit-1-author",
+            "config": {
+              "_id": "test-job-config-to-edit-instruction",
+              "auth_token": "test-auth-token",
+              "author": "test-author",
+              "host": "http://example.com",
+              "name": "test-job-config-to-edit-instruction-name",
+              "type": "rundeck"
+            },
+            "job_id": "test-job-to-instruction-edit-1-external-id",
+            "name": "test-job-to-instruction-edit-1-name",
+            "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+          }
+        },
+        {
+          "job": {
+            "_id": "test-job-to-instruction-edit-2",
+            "author": "test-job-to-instruction-edit-2-author",
+            "config": {
+              "_id": "test-job-config-to-edit-instruction",
+              "auth_token": "test-auth-token",
+              "author": "test-author",
+              "host": "http://example.com",
+              "name": "test-job-config-to-edit-instruction-name",
+              "type": "rundeck"
+            },
+            "job_id": "test-job-to-instruction-edit-2-external-id",
+            "name": "test-job-to-instruction-edit-2-name",
+            "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+          }
+        }
+      ]
+    }
+    """
+
+  Scenario: given create request should return ok to get request
     When I am admin
     When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "custom-id",
-      "name": "test-instruction-new-name-custom-id-1",
+      "type": 0,
+      "name": "test-instruction-to-create-3-name",
       "entity_patterns": [
         {
-          "name": "test filter"
+          "name": "test-instruction-to-create-3-pattern"
         }
       ],
-      "description": "test-instruction-new-description",
+      "description": "test-instruction-to-create-3-description",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-new-step-1",
+          "name": "test-instruction-to-create-3-step-1",
           "operations": [
             {
-              "name": "test-instruction-new-step-1-operation-1",
+              "name": "test-instruction-to-create-3-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-1-description",
+              "description": "test-instruction-to-create-3-step-1-operation-1-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-1-1",
-                "test-job-to-test-instruction-new-step-1-operation-1-2"
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
               ]
             },
             {
-              "name": "test-instruction-new-step-1-operation-2",
+              "name": "test-instruction-to-create-3-step-1-operation-2",
               "time_to_complete": {"seconds": 3, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-2-description",
+              "description": "test-instruction-to-create-3-step-1-operation-2-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-2-1"
+                "test-job-to-instruction-edit-2"
               ]
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-3-step-1-endpoint"
         },
         {
-          "name": "test-instruction-new-step-2",
+          "name": "test-instruction-to-create-3-step-2",
           "operations": [
             {
-              "name": "test-instruction-new-step-2-operation-1",
+              "name": "test-instruction-to-create-3-step-2-operation-1",
               "time_to_complete": {"seconds": 6, "unit":"s"},
-              "description": "test-instruction-new-step-2-operation-1-description",
+              "description": "test-instruction-to-create-3-step-2-operation-1-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-2-operation-1-1",
-                "test-job-to-test-instruction-new-step-2-operation-1-2"
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
               ]
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-2-endpoint"
+          "endpoint": "test-instruction-to-create-3-step-2-endpoint"
         }
       ]
     }
     """
     Then the response code should be 201
-    When I do GET /api/v4/cat/instructions/custom-id
-    Then the response code should be 200
-
-  Scenario: POST a valid instruction with custom id that already exist should cause dup error
-    When I am admin
-    When I do POST /api/v4/cat/instructions:
+    Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-update",
-      "name": "test-instruction-new-name-custom-id-2",
       "entity_patterns": [
         {
-          "name": "test filter"
+          "name": "test-instruction-to-create-3-pattern"
         }
       ],
-      "description": "test-instruction-new-description",
+      "author": "root",
+      "description": "test-instruction-to-create-3-description",
       "enabled": true,
+      "name": "test-instruction-to-create-3-name",
       "steps": [
         {
-          "name": "test-instruction-new-step-1",
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-3-step-1-endpoint",
+          "name": "test-instruction-to-create-3-step-1",
           "operations": [
             {
-              "name": "test-instruction-new-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-1-description",
+              "description": "test-instruction-to-create-3-step-1-operation-1-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-1-1",
-                "test-job-to-test-instruction-new-step-1-operation-1-2"
-              ]
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "auth_token": "test-auth-token",
+                    "author": "test-author",
+                    "host": "http://example.com",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "auth_token": "test-auth-token",
+                    "author": "test-author",
+                    "host": "http://example.com",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ],
+              "name": "test-instruction-to-create-3-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"}
             },
             {
-              "name": "test-instruction-new-step-1-operation-2",
-              "time_to_complete": {"seconds": 3, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-2-description",
+              "description": "test-instruction-to-create-3-step-1-operation-2-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-2-1"
-              ]
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "auth_token": "test-auth-token",
+                    "author": "test-author",
+                    "host": "http://example.com",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ],
+              "name": "test-instruction-to-create-3-step-1-operation-2",
+              "time_to_complete": {"seconds": 3, "unit":"s"}
             }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-1-endpoint"
+          ]
         },
         {
-          "name": "test-instruction-new-step-2",
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-3-step-2-endpoint",
+          "name": "test-instruction-to-create-3-step-2",
           "operations": [
             {
-              "name": "test-instruction-new-step-2-operation-1",
-              "time_to_complete": {"seconds": 6, "unit":"s"},
-              "description": "test-instruction-new-step-2-operation-1-description",
+              "description": "test-instruction-to-create-3-step-2-operation-1-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-2-operation-1-1",
-                "test-job-to-test-instruction-new-step-2-operation-1-2"
-              ]
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "auth_token": "test-auth-token",
+                    "author": "test-author",
+                    "host": "http://example.com",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "auth_token": "test-auth-token",
+                    "author": "test-author",
+                    "host": "http://example.com",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ],
+              "name": "test-instruction-to-create-3-step-2-operation-1",
+              "time_to_complete": {"seconds": 6, "unit":"s"}
             }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-2-endpoint"
+          ]
         }
       ]
     }
     """
-    Then the response code should be 400
-    Then the response body should be:
-    """
-    {
-      "errors": {
-        "_id": "ID already exists."
-      }
-    }
-    """
 
-  Scenario: POST a valid instruction
+  Scenario: given create request with custom id should return ok
     When I am admin
     When I do POST /api/v4/cat/instructions:
     """
     {
-      "name": "test-instruction-new-name-2",
+      "_id": "test-instruction-to-create-4-id",
+      "type": 0,
+      "name": "test-instruction-to-create-4-name",
       "entity_patterns": [
         {
-          "name": "test filter"
+          "name": "test-instruction-to-create-4-pattern"
         }
       ],
-      "description": "test-instruction-new-description",
+      "description": "test-instruction-to-create-4-description",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-new-step-1",
+          "name": "test-instruction-to-create-4-step-1",
           "operations": [
             {
-              "name": "test-instruction-new-step-1-operation-1",
+              "name": "test-instruction-to-create-4-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-1-description",
-              "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-1-1",
-                "test-job-to-test-instruction-new-step-1-operation-1-2"
-              ]
-            },
-            {
-              "name": "test-instruction-new-step-1-operation-2",
-              "time_to_complete": {"seconds": 3, "unit":"s"},
-              "description": "test-instruction-new-step-1-operation-2-description",
+              "description": "test-instruction-to-create-4-step-1-operation-1-description",
               "jobs": [
-                "test-job-to-test-instruction-new-step-1-operation-2-1"
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
               ]
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-1-endpoint"
-        },
-        {
-          "name": "test-instruction-new-step-2",
-          "operations": [
-            {
-              "name": "test-instruction-new-step-2-operation-1",
-              "time_to_complete": {"seconds": 6, "unit":"s"},
-              "description": "test-instruction-new-step-2-operation-1-description",
-              "jobs": [
-                "test-job-to-test-instruction-new-step-2-operation-1-1",
-                "test-job-to-test-instruction-new-step-2-operation-1-2"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-new-step-2-endpoint"
+          "endpoint": "test-instruction-to-create-4-step-1-endpoint"
         }
       ]
     }
     """
     Then the response code should be 201
-    When I do GET /api/v4/cat/instructions/{{ .lastResponse._id}}
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-4-id"
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-4-id
     Then the response code should be 200
 
-  Scenario: POST an invalid instruction where job doesn't exist
+  Scenario: given create request with custom id that already exist should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
     """
-      {
-        "name": "test-instruction-new-name-3",
-        "entity_patterns": [
-          {
-            "name": "test filter"
-          }
-        ],
-        "description": "test-instruction-new-description",
-        "enabled": true,
-        "steps": [
-          {
-            "name": "test-instruction-new-step-1",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-1-operation-1",
-                "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-1-1-NOT-EXIST",
-                  "test-job-to-test-instruction-new-step-1-operation-1-2"
-                ]
-              },
-              {
-                "name": "test-instruction-new-step-1-operation-2",
-                "time_to_complete": {"seconds": 3, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-2-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-2-1"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-1-endpoint"
-          },
-          {
-            "name": "test-instruction-new-step-2",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-2-operation-1",
-                "time_to_complete": {"seconds": 6, "unit":"s"},
-                "description": "test-instruction-new-step-2-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "test-job-to-test-instruction-new-step-2-operation-1-2"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-2-endpoint"
-          }
-        ]
-      }
+    {
+      "_id": "test-instruction-to-check-unique-id"
+    }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
-      {
-        "error": "job doesn't exist"
+    {
+      "errors": {
+        "_id": "ID already exists."
       }
+    }
     """
 
-  Scenario: POST an invalid instruction where name already exists
+  Scenario: given create request with name that already exist should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
     """
-      {
-        "name": "test-instruction-to-get-name",
-        "entity_patterns": [
-          {
-            "name": "test filter"
-          }
-        ],
-        "description": "test-instruction-new-description",
-        "enabled": true,
-        "steps": [
-          {
-            "name": "test-instruction-new-step-1",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-1-operation-1",
-                "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-1-1",
-                  "test-job-to-test-instruction-new-step-1-operation-1-2"
-                ]
-              },
-              {
-                "name": "test-instruction-new-step-1-operation-2",
-                "time_to_complete": {"seconds": 3, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-2-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-2-1"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-1-endpoint"
-          },
-          {
-            "name": "test-instruction-new-step-2",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-2-operation-1",
-                "time_to_complete": {"seconds": 6, "unit":"s"},
-                "description": "test-instruction-new-step-2-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "test-job-to-test-instruction-new-step-2-operation-1-2"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-2-endpoint"
-          }
-        ]
-      }
+    {
+      "name": "test-instruction-to-check-unique-name-name"
+    }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "errors": {
@@ -632,216 +544,139 @@ Feature: create a instruction
     }
     """
 
-  Scenario: POST an invalid instruction with invalid patterns
+  Scenario: given invalid create request to create manual instruction should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
     """
-      {
-        "name": "test-instruction-invalid-3",
-        "entity_patterns": [
-          {
-            "name": {
-              "regex_match": "name:.*"
-            }
-          },
-          {}
-        ],
-        "description": "test-instruction-new-description",
-        "enabled": true,
-        "steps": [
-          {
-            "name": "test-instruction-new-step-1",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-1-operation-1",
-                "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-1-1",
-                  "test-job-to-test-instruction-new-step-1-operation-1-2"
-                ]
-              },
-              {
-                "name": "test-instruction-new-step-1-operation-2",
-                "time_to_complete": {"seconds": 3, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-2-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-2-1"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-1-endpoint"
-          },
-          {
-            "name": "test-instruction-new-step-2",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-2-operation-1",
-                "time_to_complete": {"seconds": 6, "unit":"s"},
-                "description": "test-instruction-new-step-2-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "test-job-to-test-instruction-new-step-2-operation-1-2"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-2-endpoint"
-          }
-        ]
+    {
+      "type": 0
+    }
+    """
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+      "errors": {
+        "author": "Author is missing.",
+        "description": "Description is missing.",
+        "enabled": "Enabled is missing.",
+        "name": "Name is missing.",
+        "steps": "Steps is missing."
       }
+    }
+    """
+
+  Scenario: given invalid create request to create auto instruction should return error
+    When I am admin
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "type": 1
+    }
     """
     Then the response code should be 400
     Then the response body should be:
     """
     {
       "errors": {
-        "entity_patterns": "entity pattern list contains an empty pattern."
+        "author": "Author is missing.",
+        "description": "Description is missing.",
+        "enabled": "Enabled is missing.",
+        "jobs": "Jobs is missing.",
+        "name": "Name is missing.",
+        "priority": "Priority is missing.",
+        "timeout_after_execution": "TimeoutAfterExecution is missing."
       }
     }
     """
+
+  Scenario: given create request with not exist job should return error
+    When I am admin
     When I do POST /api/v4/cat/instructions:
     """
-      {
-        "name": "test-instruction-invalid-4",
-        "alarm_patterns": [
-          {
-            "v": {
-              "resource": {
-                "regex_match": "name:.*"
-              }
+    {
+      "type": 0,
+      "steps": [
+        {
+          "operations": [
+            {
+              "jobs": [
+                "test-job-not-exist"
+              ]
             }
-          },
-          {}
-        ],
-        "description": "test-instruction-new-description",
-        "enabled": true,
-        "steps": [
-          {
-            "name": "test-instruction-new-step-1",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-1-operation-1",
-                "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-1-1",
-                  "test-job-to-test-instruction-new-step-1-operation-1-2"
-                ]
-              },
-              {
-                "name": "test-instruction-new-step-1-operation-2",
-                "time_to_complete": {"seconds": 3, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-2-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-2-1"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-1-endpoint"
-          },
-          {
-            "name": "test-instruction-new-step-2",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-2-operation-1",
-                "time_to_complete": {"seconds": 6, "unit":"s"},
-                "description": "test-instruction-new-step-2-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "test-job-to-test-instruction-new-step-2-operation-1-2"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-2-endpoint"
-          }
-        ]
+          ]
+        }
+      ]
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "steps.0.operations.0.jobs": "Jobs doesn't exist."
       }
+    }
+    """
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "type": 1,
+      "jobs": [
+        {
+          "job": "test-job-not-exist"
+        }
+      ]
+    }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "errors": {
-        "alarm_patterns": "alarm pattern list contains an empty pattern."
+        "jobs.0.job": "Job doesn't exist."
       }
     }
     """
+
+  Scenario: given create request with invalid patterns should return error
+    When I am admin
     When I do POST /api/v4/cat/instructions:
     """
       {
-        "name": "test-instruction-invalid-5",
+        "entity_patterns": [
+          {
+            "name": {
+              "regex_match": "name:.*"
+            }
+          },
+          {}
+        ],
         "alarm_patterns": [
           {
-            "qwe": {
+            "v": {
               "resource": {
                 "regex_match": "name:.*"
               }
             }
-          }
-        ],
-        "description": "test-instruction-new-description",
-        "enabled": true,
-        "steps": [
-          {
-            "name": "test-instruction-new-step-1",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-1-operation-1",
-                "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-1-1",
-                  "test-job-to-test-instruction-new-step-1-operation-1-2"
-                ]
-              },
-              {
-                "name": "test-instruction-new-step-1-operation-2",
-                "time_to_complete": {"seconds": 3, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-2-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-2-1"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-1-endpoint"
           },
-          {
-            "name": "test-instruction-new-step-2",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-2-operation-1",
-                "time_to_complete": {"seconds": 6, "unit":"s"},
-                "description": "test-instruction-new-step-2-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "test-job-to-test-instruction-new-step-2-operation-1-2"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-2-endpoint"
-          }
+          {}
         ]
       }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "errors": {
-        "alarm_patterns": "Invalid alarm pattern list."
+        "entity_patterns": "entity pattern list contains an empty pattern.",
+        "alarm_patterns": "alarm pattern list contains an empty pattern."
       }
     }
     """
     When I do POST /api/v4/cat/instructions:
     """
       {
-        "name": "test-instruction-invalid-6",
         "entity_patterns": [
           {
             "qwe": {
@@ -849,58 +684,33 @@ Feature: create a instruction
             }
           }
         ],
-        "description": "test-instruction-new-description",
-        "enabled": true,
-        "steps": [
-          {
-            "name": "test-instruction-new-step-1",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-1-operation-1",
-                "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-1-1",
-                  "test-job-to-test-instruction-new-step-1-operation-1-2"
-                ]
-              },
-              {
-                "name": "test-instruction-new-step-1-operation-2",
-                "time_to_complete": {"seconds": 3, "unit":"s"},
-                "description": "test-instruction-new-step-1-operation-2-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-1-operation-2-1"
-                ]
-              }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-1-endpoint"
-          },
+        "alarm_patterns": [
           {
-            "name": "test-instruction-new-step-2",
-            "operations": [
-              {
-                "name": "test-instruction-new-step-2-operation-1",
-                "time_to_complete": {"seconds": 6, "unit":"s"},
-                "description": "test-instruction-new-step-2-operation-1-description",
-                "jobs": [
-                  "test-job-to-test-instruction-new-step-2-operation-1-1",
-                  "test-job-to-test-instruction-new-step-2-operation-1-2"
-                ]
+            "qwe": {
+              "resource": {
+                "regex_match": "name:.*"
               }
-            ],
-            "stop_on_fail": true,
-            "endpoint": "test-instruction-new-step-2-endpoint"
+            }
           }
         ]
       }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "errors": {
-        "entity_patterns": "Invalid entity pattern list."
+      "entity_patterns": "Invalid entity pattern list.",
+        "alarm_patterns": "Invalid alarm pattern list."
       }
     }
-    """
\ No newline at end of file
+    """
+
+  Scenario: given create request and no auth user should not allow access
+    When I do POST /api/v4/cat/instructions
+    Then the response code should be 401
+
+  Scenario: given create request and auth user without permissions should not allow access
+    When I am noperms
+    When I do POST /api/v4/cat/instructions
+    Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index b92f49db..ac24425c 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -4,23 +4,24 @@ Feature: get a instruction
 
   Scenario: given get all request should return instructions
     When I am admin
-    When I do GET /api/v4/cat/instructions?search=test-instruction-to-get-name
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-get
     Then the response code should be 200
     Then the response body should be:
     """
     {
       "data": [
         {
-          "_id": "test-instruction-to-get",
-          "name": "test-instruction-to-get-name",
+          "_id": "test-instruction-to-get-1",
+          "type": 0,
+          "name": "test-instruction-to-get-1-name",
           "entity_patterns": [
             {
               "name": "test filter"
             }
           ],
           "alarm_patterns": null,
-          "description": "test-instruction-to-get-description",
-          "author": "test-instruction-to-get-author",
+          "description": "test-instruction-to-get-1-description",
+          "author": "test-instruction-to-get-1-author",
           "enabled": true,
           "rating": 0,
           "comments": [],
@@ -28,114 +29,177 @@ Feature: get a instruction
           "month_executions": 0,
           "steps": [
             {
-              "name": "test-instruction-to-get-step-1-name",
+              "name": "test-instruction-to-get-1-step-1-name",
               "operations": [
                 {
-                  "name": "test-instruction-to-get-step-1-operation-1-name",
+                  "name": "test-instruction-to-get-1-step-1-operation-1-name",
                   "time_to_complete": {"seconds": 1, "unit":"s"},
-                  "description": "test-instruction-to-get-step-1-operation-1-description",
+                  "description": "test-instruction-to-get-1-step-1-operation-1-description",
                   "jobs": [
                     {
-                      "_id": "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-                      "name": "test-job-to-test-instruction-to-get-step-1-operation-1-1-name",
-                      "author": "test_author",
+                      "_id": "test-job-to-instruction-edit-1",
+                      "name": "test-job-to-instruction-edit-1-name",
+                      "author": "test-job-to-instruction-edit-1-author",
                       "config": {
-                        "_id": "test-job-config-to-link",
-                        "name": "test-job-config-name-to-link",
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
                         "author": "test-author",
                         "auth_token": "test-auth-token"
                       },
-                      "job_id": "test-job-id",
+                      "job_id": "test-job-to-instruction-edit-1-external-id",
                       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                     },
                     {
-                      "_id": "test-job-to-test-instruction-to-get-step-1-operation-1-2",
-                      "name": "test-job-to-test-instruction-to-get-step-1-operation-1-2-name",
-                      "author": "test_author",
+                      "_id": "test-job-to-instruction-edit-2",
+                      "name": "test-job-to-instruction-edit-2-name",
+                      "author": "test-job-to-instruction-edit-2-author",
                       "config": {
-                        "_id": "test-job-config-to-link",
-                        "name": "test-job-config-name-to-link",
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
                         "author": "test-author",
                         "auth_token": "test-auth-token"
                       },
-                      "job_id": "test-job-id",
+                      "job_id": "test-job-to-instruction-edit-2-external-id",
                       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                     }
                   ]
                 },
                 {
-                  "name": "test-instruction-to-get-step-1-operation-2-name",
+                  "name": "test-instruction-to-get-1-step-1-operation-2-name",
                   "time_to_complete": {"seconds": 3, "unit":"s"},
-                  "description": "test-instruction-to-get-step-1-operation-2-description",
+                  "description": "test-instruction-to-get-1-step-1-operation-2-description",
                   "jobs": [
                     {
-                      "_id": "test-job-to-test-instruction-to-get-step-1-operation-2-1",
-                      "name": "test-job-to-test-instruction-to-get-step-1-operation-2-1-name",
-                      "author": "test_author",
+                      "_id": "test-job-to-instruction-edit-2",
+                      "name": "test-job-to-instruction-edit-2-name",
+                      "author": "test-job-to-instruction-edit-2-author",
                       "config": {
-                        "_id": "test-job-config-to-link",
-                        "name": "test-job-config-name-to-link",
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
                         "author": "test-author",
                         "auth_token": "test-auth-token"
                       },
-                      "job_id": "test-job-id",
+                      "job_id": "test-job-to-instruction-edit-2-external-id",
                       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                     }
                   ]
                 }
               ],
               "stop_on_fail": true,
-              "endpoint": "test-instruction-to-get-step-1-endpoint"
+              "endpoint": "test-instruction-to-get-1-step-1-endpoint"
             },
             {
-              "name": "test-instruction-to-get-step-2-name",
+              "name": "test-instruction-to-get-1-step-2-name",
               "operations": [
                 {
-                  "name": "test-instruction-to-get-step-2-operation-1-name",
+                  "name": "test-instruction-to-get-1-step-2-operation-1-name",
                   "time_to_complete": {"seconds": 6, "unit":"s"},
-                  "description": "test-instruction-to-get-step-2-operation-1-description",
+                  "description": "test-instruction-to-get-1-step-2-operation-1-description",
                   "jobs": [
                     {
-                      "_id": "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-                      "name": "test-job-to-test-instruction-to-get-step-2-operation-1-1-name",
-                      "author": "test_author",
+                      "_id": "test-job-to-instruction-edit-2",
+                      "name": "test-job-to-instruction-edit-2-name",
+                      "author": "test-job-to-instruction-edit-2-author",
                       "config": {
-                        "_id": "test-job-config-to-link",
-                        "name": "test-job-config-name-to-link",
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
                         "author": "test-author",
                         "auth_token": "test-auth-token"
                       },
-                      "job_id": "test-job-id",
+                      "job_id": "test-job-to-instruction-edit-2-external-id",
                       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                     },
                     {
-                      "_id": "test-job-to-test-instruction-to-get-step-2-operation-1-2",
-                      "name": "test-job-to-test-instruction-to-get-step-2-operation-1-2-name",
-                      "author": "test_author",
+                      "_id": "test-job-to-instruction-edit-1",
+                      "name": "test-job-to-instruction-edit-1-name",
+                      "author": "test-job-to-instruction-edit-1-author",
                       "config": {
-                        "_id": "test-job-config-to-link",
-                        "name": "test-job-config-name-to-link",
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
                         "author": "test-author",
                         "auth_token": "test-auth-token"
                       },
-                      "job_id": "test-job-id",
+                      "job_id": "test-job-to-instruction-edit-1-external-id",
                       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                     }
                   ]
                 }
               ],
               "stop_on_fail": true,
-              "endpoint": "test-instruction-to-get-step-2-endpoint"
+              "endpoint": "test-instruction-to-get-1-step-2-endpoint"
+            }
+          ],
+          "last_executed_by": {
+            "_id": "root",
+            "username": "root"
+          },
+          "last_executed_on": 1596712203,
+          "last_modified": 1596712203
+        },
+        {
+          "_id": "test-instruction-to-get-2",
+          "type": 1,
+          "name": "test-instruction-to-get-2-name",
+          "entity_patterns": [
+            {
+              "name": "test filter"
+            }
+          ],
+          "alarm_patterns": null,
+          "description": "test-instruction-to-get-2-description",
+          "author": "test-instruction-to-get-2-author",
+          "enabled": true,
+          "rating": 0,
+          "comments": [],
+          "avg_complete_time": 10,
+          "month_executions": 0,
+          "deletable": true,
+          "running": false,
+          "jobs": [
+            {
+              "job": {
+                "_id": "test-job-to-instruction-edit-1",
+                "name": "test-job-to-instruction-edit-1-name",
+                "author": "test-job-to-instruction-edit-1-author",
+                "config": {
+                  "_id": "test-job-config-to-edit-instruction",
+                  "name": "test-job-config-to-edit-instruction-name",
+                  "type": "rundeck",
+                  "host": "http://example.com",
+                  "author": "test-author",
+                  "auth_token": "test-auth-token"
+                },
+                "job_id": "test-job-to-instruction-edit-1-external-id",
+                "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+              },
+              "stop_on_fail": true
+            },
+            {
+              "job": {
+                "_id": "test-job-to-instruction-edit-2",
+                "name": "test-job-to-instruction-edit-2-name",
+                "author": "test-job-to-instruction-edit-2-author",
+                "config": {
+                  "_id": "test-job-config-to-edit-instruction",
+                  "name": "test-job-config-to-edit-instruction-name",
+                  "type": "rundeck",
+                  "host": "http://example.com",
+                  "author": "test-author",
+                  "auth_token": "test-auth-token"
+                },
+                "job_id": "test-job-to-instruction-edit-2-external-id",
+                "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+              }
             }
           ],
           "last_executed_by": {
@@ -150,7 +214,7 @@ Feature: get a instruction
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 1
+        "total_count": 2
       }
     }
     """
@@ -189,137 +253,138 @@ Feature: get a instruction
 
   Scenario: Get a instruction with success
     When I am admin
-    When I do GET /api/v4/cat/instructions/test-instruction-to-get
+    When I do GET /api/v4/cat/instructions/test-instruction-to-get-1
     Then the response code should be 200
     Then the response body should be:
     """
     {
-      "_id": "test-instruction-to-get",
-      "name": "test-instruction-to-get-name",
+      "_id": "test-instruction-to-get-1",
+      "type": 0,
+      "name": "test-instruction-to-get-1-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
       "alarm_patterns": null,
-      "description": "test-instruction-to-get-description",
-      "author": "test-instruction-to-get-author",
+      "description": "test-instruction-to-get-1-description",
+      "author": "test-instruction-to-get-1-author",
       "enabled": true,
       "rating": 0,
       "comments": [],
       "avg_complete_time": 10,
       "month_executions": 0,
       "steps": [
-      {
-        "name": "test-instruction-to-get-step-1-name",
-        "operations": [
-          {
-             "name": "test-instruction-to-get-step-1-operation-1-name",
-             "time_to_complete": {"seconds": 1, "unit":"s"},
-             "description": "test-instruction-to-get-step-1-operation-1-description",
+        {
+          "name": "test-instruction-to-get-1-step-1-name",
+          "operations": [
+            {
+               "name": "test-instruction-to-get-1-step-1-operation-1-name",
+               "time_to_complete": {"seconds": 1, "unit":"s"},
+               "description": "test-instruction-to-get-1-step-1-operation-1-description",
+               "jobs": [
+                 {
+                   "_id": "test-job-to-instruction-edit-1",
+                   "name": "test-job-to-instruction-edit-1-name",
+                   "author": "test-job-to-instruction-edit-1-author",
+                   "config": {
+                     "_id": "test-job-config-to-edit-instruction",
+                     "name": "test-job-config-to-edit-instruction-name",
+                     "type": "rundeck",
+                     "host": "http://example.com",
+                     "author": "test-author",
+                     "auth_token": "test-auth-token"
+                   },
+                   "job_id": "test-job-to-instruction-edit-1-external-id",
+                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                 },
+                 {
+                   "_id": "test-job-to-instruction-edit-2",
+                   "name": "test-job-to-instruction-edit-2-name",
+                   "author": "test-job-to-instruction-edit-2-author",
+                   "config": {
+                     "_id": "test-job-config-to-edit-instruction",
+                     "name": "test-job-config-to-edit-instruction-name",
+                     "type": "rundeck",
+                     "host": "http://example.com",
+                     "author": "test-author",
+                     "auth_token": "test-auth-token"
+                   },
+                   "job_id": "test-job-to-instruction-edit-2-external-id",
+                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                 }
+               ]
+              },
+             {
+               "name": "test-instruction-to-get-1-step-1-operation-2-name",
+               "time_to_complete": {"seconds": 3, "unit":"s"},
+               "description": "test-instruction-to-get-1-step-1-operation-2-description",
+               "jobs": [
+                 {
+                   "_id": "test-job-to-instruction-edit-2",
+                   "name": "test-job-to-instruction-edit-2-name",
+                   "author": "test-job-to-instruction-edit-2-author",
+                   "config": {
+                     "_id": "test-job-config-to-edit-instruction",
+                     "name": "test-job-config-to-edit-instruction-name",
+                     "type": "rundeck",
+                     "host": "http://example.com",
+                     "author": "test-author",
+                     "auth_token": "test-auth-token"
+                   },
+                   "job_id": "test-job-to-instruction-edit-2-external-id",
+                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                 }
+               ]
+             }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-get-1-step-1-endpoint"
+        },
+        {
+         "name": "test-instruction-to-get-1-step-2-name",
+         "operations": [
+           {
+             "name": "test-instruction-to-get-1-step-2-operation-1-name",
+             "time_to_complete": {"seconds": 6, "unit":"s"},
+             "description": "test-instruction-to-get-1-step-2-operation-1-description",
              "jobs": [
                {
-                 "_id": "test-job-to-test-instruction-to-get-step-1-operation-1-1",
-                 "name": "test-job-to-test-instruction-to-get-step-1-operation-1-1-name",
-                 "author": "test_author",
+                 "_id": "test-job-to-instruction-edit-2",
+                 "name": "test-job-to-instruction-edit-2-name",
+                 "author": "test-job-to-instruction-edit-2-author",
                  "config": {
-                   "_id": "test-job-config-to-link",
-                   "name": "test-job-config-name-to-link",
+                   "_id": "test-job-config-to-edit-instruction",
+                   "name": "test-job-config-to-edit-instruction-name",
                    "type": "rundeck",
                    "host": "http://example.com",
                    "author": "test-author",
                    "auth_token": "test-auth-token"
                  },
-                 "job_id": "test-job-id",
+                 "job_id": "test-job-to-instruction-edit-2-external-id",
                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                },
                {
-                 "_id": "test-job-to-test-instruction-to-get-step-1-operation-1-2",
-                 "name": "test-job-to-test-instruction-to-get-step-1-operation-1-2-name",
-                 "author": "test_author",
-                 "config": {
-                   "_id": "test-job-config-to-link",
-                   "name": "test-job-config-name-to-link",
-                   "type": "rundeck",
-                   "host": "http://example.com",
-                   "author": "test-author",
-                   "auth_token": "test-auth-token"
-                 },
-                 "job_id": "test-job-id",
-                 "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-               }
-             ]
-            },
-           {
-             "name": "test-instruction-to-get-step-1-operation-2-name",
-             "time_to_complete": {"seconds": 3, "unit":"s"},
-             "description": "test-instruction-to-get-step-1-operation-2-description",
-             "jobs": [
-               {
-                 "_id": "test-job-to-test-instruction-to-get-step-1-operation-2-1",
-                 "name": "test-job-to-test-instruction-to-get-step-1-operation-2-1-name",
-                 "author": "test_author",
+                 "_id": "test-job-to-instruction-edit-1",
+                 "name": "test-job-to-instruction-edit-1-name",
+                 "author": "test-job-to-instruction-edit-1-author",
                  "config": {
-                   "_id": "test-job-config-to-link",
-                   "name": "test-job-config-name-to-link",
+                   "_id": "test-job-config-to-edit-instruction",
+                   "name": "test-job-config-to-edit-instruction-name",
                    "type": "rundeck",
                    "host": "http://example.com",
                    "author": "test-author",
                    "auth_token": "test-auth-token"
                  },
-                 "job_id": "test-job-id",
+                 "job_id": "test-job-to-instruction-edit-1-external-id",
                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                }
              ]
            }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
-      },
-      {
-       "name": "test-instruction-to-get-step-2-name",
-       "operations": [
-         {
-           "name": "test-instruction-to-get-step-2-operation-1-name",
-           "time_to_complete": {"seconds": 6, "unit":"s"},
-           "description": "test-instruction-to-get-step-2-operation-1-description",
-           "jobs": [
-             {
-               "_id": "test-job-to-test-instruction-to-get-step-2-operation-1-1",
-               "name": "test-job-to-test-instruction-to-get-step-2-operation-1-1-name",
-               "author": "test_author",
-               "config": {
-                 "_id": "test-job-config-to-link",
-                 "name": "test-job-config-name-to-link",
-                 "type": "rundeck",
-                 "host": "http://example.com",
-                 "author": "test-author",
-                 "auth_token": "test-auth-token"
-               },
-               "job_id": "test-job-id",
-               "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-             },
-             {
-               "_id": "test-job-to-test-instruction-to-get-step-2-operation-1-2",
-               "name": "test-job-to-test-instruction-to-get-step-2-operation-1-2-name",
-               "author": "test_author",
-               "config": {
-                 "_id": "test-job-config-to-link",
-                 "name": "test-job-config-name-to-link",
-                 "type": "rundeck",
-                 "host": "http://example.com",
-                 "author": "test-author",
-                 "auth_token": "test-auth-token"
-               },
-               "job_id": "test-job-id",
-               "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-             }
-           ]
-         }
-       ],
-       "stop_on_fail": true,
-       "endpoint": "test-instruction-to-get-step-2-endpoint"
-      }
+         ],
+         "stop_on_fail": true,
+         "endpoint": "test-instruction-to-get-1-step-2-endpoint"
+        }
       ],
       "last_executed_by": {
         "_id": "root",
@@ -337,13 +402,10 @@ Feature: get a instruction
     Then the response body should contain:
     """
     {
-      "data": [
-        {
-          "_id": "test-instruction-execution-running",
-          "deletable": false,
-          "running": true
-        }
-      ]
+      "_id": "test-instruction-execution-running",
+      "name": "test-instruction-execution-running-name",
+      "deletable": false,
+      "running": true
     }
     """
 
diff --git a/tests/functional/features/api/cat/instruction_update.feature b/tests/functional/features/api/cat/instruction_update.feature
index 996a64ca..1890a0c2 100644
--- a/tests/functional/features/api/cat/instruction_update.feature
+++ b/tests/functional/features/api/cat/instruction_update.feature
@@ -1,70 +1,12 @@
 Feature: Instruction update
 
   Scenario: PUT as unauthorized
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-    """
-    {
-      "name": "test-instruction-to-update-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-to-update-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-update-step-1-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-1-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-1-description",
-              "jobs": [
-                "test-job-to-link-3"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-1-endpoint"
-        }
-      ]
-    }
-    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update
     Then the response code should be 401
 
   Scenario: PUT without permissions
     When I am noperms
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-    """
-    {
-      "name": "test-instruction-to-update-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-to-update-description",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-update-step-1-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-1-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-1-description",
-              "jobs": [
-                "test-job-to-link-3"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-1-endpoint"
-        }
-      ]
-    }
-    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update
     Then the response code should be 403
 
   Scenario: PUT a valid instruction without any changes
@@ -89,7 +31,7 @@ Feature: Instruction update
               "time_to_complete": {"seconds": 1, "unit":"s"},
               "description": "test-instruction-to-update-step-1-operation-1-description",
               "jobs": [
-                "test-job-to-link-3"
+                "test-job-to-instruction-edit-2"
               ]
             }
           ],
@@ -104,6 +46,7 @@ Feature: Instruction update
     """
     {
       "_id": "test-instruction-to-update",
+      "type": 0,
       "name": "test-instruction-to-update-name",
       "entity_patterns": [
         {
@@ -113,13 +56,6 @@ Feature: Instruction update
       "description": "test-instruction-to-update-description",
       "author": "root",
       "enabled": true,
-      "rating": 0,
-      "avg_complete_time": 10,
-      "month_executions": 0,
-      "last_executed_by": {
-        "_id": "root"
-      },
-      "last_executed_on": 1596712203,
       "steps": [
         {
           "name": "test-instruction-to-update-step-1-name",
@@ -130,17 +66,17 @@ Feature: Instruction update
               "description": "test-instruction-to-update-step-1-operation-1-description",
               "jobs": [
                 {
-                  "_id": "test-job-to-link-3",
-                  "name": "test-job-name-to-link-3",
-                  "author": "test-author",
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
-                    "name": "test-job-config-name-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "job_id": "test-job-id",
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
               ]
@@ -175,8 +111,8 @@ Feature: Instruction update
               "time_to_complete": {"seconds": 1, "unit":"s"},
               "description": "test-instruction-to-update-step-1-operation-1-description",
               "jobs": [
-                "test-job-to-link-3",
-                "test-job-to-link-2"
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
               ]
             },
             {
@@ -184,7 +120,7 @@ Feature: Instruction update
               "time_to_complete": {"seconds": 1, "unit":"s"},
               "description": "test-instruction-to-update-step-1-operation-2-description",
               "jobs": [
-                "test-job-to-link-3"
+                "test-job-to-instruction-edit-2"
               ]
             }
           ],
@@ -199,8 +135,8 @@ Feature: Instruction update
               "time_to_complete": {"seconds": 1, "unit":"s"},
               "description": "test-instruction-to-update-step-2-operation-1-description",
               "jobs": [
-                "test-job-to-link-3",
-                "test-job-to-link-1"
+                "test-job-to-instruction-edit-2",
+                "test-job-to-instruction-edit-1"
               ]
             }
           ],
@@ -224,9 +160,6 @@ Feature: Instruction update
       "description": "test-instruction-to-update-description-changed",
       "author": "root",
       "enabled": true,
-      "rating": 0,
-      "avg_complete_time": 10,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-update-step-1-name",
@@ -237,31 +170,31 @@ Feature: Instruction update
               "description": "test-instruction-to-update-step-1-operation-1-description",
               "jobs": [
                 {
-                  "_id": "test-job-to-link-3",
-                  "name": "test-job-name-to-link-3",
-                  "author": "test-author",
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
-                    "name": "test-job-config-name-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "job_id": "test-job-id",
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 },
                 {
-                  "_id": "test-job-to-link-2",
-                  "name": "test-job-name-to-link-2",
-                  "author": "test-author",
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
-                    "name": "test-job-config-name-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "job_id": "test-job-id",
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
               ]
@@ -272,17 +205,17 @@ Feature: Instruction update
               "description": "test-instruction-to-update-step-1-operation-2-description",
               "jobs": [
                 {
-                  "_id": "test-job-to-link-3",
-                  "name": "test-job-name-to-link-3",
-                  "author": "test-author",
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
-                    "name": "test-job-config-name-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "job_id": "test-job-id",
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
               ]
@@ -300,31 +233,32 @@ Feature: Instruction update
               "description": "test-instruction-to-update-step-2-operation-1-description",
               "jobs": [
                 {
-                  "_id": "test-job-to-link-3",
-                  "name": "test-job-name-to-link-3",
-                  "author": "test-author",
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
-                    "name": "test-job-config-name-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "job_id": "test-job-id",
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 },
                 {
-                  "_id": "test-job-to-link-1",
-                  "name": "test-job-name-to-link-1",
-                  "author": "test-author",
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
                   "config": {
-                    "_id": "test-job-config-to-link",
-                    "name": "test-job-config-name-to-link",
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "job_id": "test-job-id",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
               ]
@@ -333,11 +267,7 @@ Feature: Instruction update
           "stop_on_fail": true,
           "endpoint": "test-instruction-to-update-step-2-endpoint"
         }
-      ],
-      "last_executed_by": {
-        "_id": "root"
-      },
-      "last_executed_on": 1596712203
+      ]
     }
     """
 
@@ -346,60 +276,11 @@ Feature: Instruction update
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
     """
     {
-      "name": "test-instruction-to-get-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-to-update-description-changed",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-update-step-1-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-1-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-1-description",
-              "jobs": [
-                "test-job-to-link-3",
-                "test-job-to-link-2"
-              ]
-            },
-            {
-              "name": "test-instruction-to-update-step-1-operation-2-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-2-description",
-              "jobs": [
-                "test-job-to-link-3"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-1-endpoint"
-        },
-        {
-          "name": "test-instruction-to-update-step-2-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-2-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-2-operation-1-description",
-              "jobs": [
-                "test-job-to-link-3",
-                "test-job-to-link-1"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-2-endpoint"
-        }
-      ]
+      "name": "test-instruction-to-check-unique-name-name"
     }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "errors": {
@@ -408,69 +289,39 @@ Feature: Instruction update
     }
     """
 
-  Scenario: PUT an invalid instruction, where name already exists
+  Scenario: PUT an invalid instruction, where job doesn't exist
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
     """
     {
       "name": "test-instruction-to-update-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-to-update-description-changed",
-      "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-update-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-step-1-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-1-description",
               "jobs": [
-                "test-job-to-link-3",
-                "test-job-to-link-2",
-                "test-job-to-link-2-NOT-EXIST"
+                "test-job-to-instruction-edit-2",
+                "test-job-to-instruction-edit-2",
+                "test-job-to-instruction-edit-2-NOT-EXIST"
               ]
             },
             {
-              "name": "test-instruction-to-update-step-1-operation-2-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-2-description",
               "jobs": [
-                "test-job-to-link-3"
+                "test-job-to-instruction-edit-2"
               ]
             }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-1-endpoint"
-        },
-        {
-          "name": "test-instruction-to-update-step-2-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-2-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-2-operation-1-description",
-              "jobs": [
-                "test-job-to-link-3",
-                "test-job-to-link-1"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-2-endpoint"
+          ]
         }
       ]
     }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
-      "error": "job doesn't exist"
+      "errors": {
+        "steps.0.operations.0.jobs": "Jobs doesn't exist."
+      }
     }
     """
 
diff --git a/tests/functional/features/api/cat/instructionexecution_cancel.feature b/tests/functional/features/api/cat/instructionexecution_cancel.feature
index df874c9a..3f981c5a 100644
--- a/tests/functional/features/api/cat/instructionexecution_cancel.feature
+++ b/tests/functional/features/api/cat/instructionexecution_cancel.feature
@@ -7,6 +7,7 @@ Feature: cancel a instruction execution
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-cancel-1-name",
       "alarm_patterns": [
         {
@@ -53,6 +54,7 @@ Feature: cancel a instruction execution
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-cancel-2-name",
       "alarm_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instructionexecution_get.feature b/tests/functional/features/api/cat/instructionexecution_get.feature
index 10a9ee73..fa249d25 100644
--- a/tests/functional/features/api/cat/instructionexecution_get.feature
+++ b/tests/functional/features/api/cat/instructionexecution_get.feature
@@ -7,6 +7,7 @@ Feature: get running instruction
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-get-1-name",
       "alarm_patterns": [
         {
@@ -116,6 +117,7 @@ Feature: get running instruction
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-get-2-name",
       "alarm_patterns": [
         {
@@ -230,6 +232,7 @@ Feature: get running instruction
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-get-3-name",
       "alarm_patterns": [
         {
@@ -345,6 +348,7 @@ Feature: get running instruction
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-get-4-name",
       "alarm_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instructionexecution_next.feature b/tests/functional/features/api/cat/instructionexecution_next.feature
index 3930b0bd..bd756fbe 100644
--- a/tests/functional/features/api/cat/instructionexecution_next.feature
+++ b/tests/functional/features/api/cat/instructionexecution_next.feature
@@ -7,6 +7,7 @@ Feature: move a instruction execution to next operation
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-1-name",
       "alarm_patterns": [
         {
@@ -116,6 +117,7 @@ Feature: move a instruction execution to next operation
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-2-name",
       "alarm_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instructionexecution_nextstep.feature b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
index 93cf0ff6..e8b8d9b9 100644
--- a/tests/functional/features/api/cat/instructionexecution_nextstep.feature
+++ b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
@@ -7,6 +7,7 @@ Feature: move a instruction execution to next step
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-step-1-name",
       "alarm_patterns": [
         {
@@ -104,6 +105,7 @@ Feature: move a instruction execution to next step
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-step-2-name",
       "alarm_patterns": [
         {
@@ -206,6 +208,7 @@ Feature: move a instruction execution to next step
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-step-3-name",
       "alarm_patterns": [
         {
@@ -319,6 +322,7 @@ Feature: move a instruction execution to next step
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-step-4-name",
       "alarm_patterns": [
         {
@@ -383,6 +387,7 @@ Feature: move a instruction execution to next step
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-step-5-name",
       "alarm_patterns": [
         {
@@ -499,6 +504,7 @@ Feature: move a instruction execution to next step
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-next-step-6-name",
       "alarm_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instructionexecution_pause.feature b/tests/functional/features/api/cat/instructionexecution_pause.feature
index b858810a..f7d046e3 100644
--- a/tests/functional/features/api/cat/instructionexecution_pause.feature
+++ b/tests/functional/features/api/cat/instructionexecution_pause.feature
@@ -7,6 +7,7 @@ Feature: pause a instruction execution
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-pause-1-name",
       "alarm_patterns": [
         {
@@ -65,6 +66,7 @@ Feature: pause a instruction execution
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-pause-2-name",
       "alarm_patterns": [
         {
@@ -126,6 +128,7 @@ Feature: pause a instruction execution
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-pause-3-name",
       "alarm_patterns": [
         {
@@ -198,6 +201,7 @@ Feature: pause a instruction execution
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-pause-4-name",
       "alarm_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instructionexecution_previous.feature b/tests/functional/features/api/cat/instructionexecution_previous.feature
index 6d00a8b6..48a7eda4 100644
--- a/tests/functional/features/api/cat/instructionexecution_previous.feature
+++ b/tests/functional/features/api/cat/instructionexecution_previous.feature
@@ -7,6 +7,7 @@ Feature: move a instruction execution to previous operation
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-previous-1-name",
       "alarm_patterns": [
         {
@@ -118,6 +119,7 @@ Feature: move a instruction execution to previous operation
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-previous-2-name",
       "alarm_patterns": [
         {
@@ -176,6 +178,7 @@ Feature: move a instruction execution to previous operation
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-previous-3-name",
       "alarm_patterns": [
         {
@@ -289,6 +292,7 @@ Feature: move a instruction execution to previous operation
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-previous-4-name",
       "alarm_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instructionexecution_start.feature b/tests/functional/features/api/cat/instructionexecution_start.feature
index 041cc3c9..bb44531f 100644
--- a/tests/functional/features/api/cat/instructionexecution_start.feature
+++ b/tests/functional/features/api/cat/instructionexecution_start.feature
@@ -7,6 +7,7 @@ Feature: run a instruction
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-execution-start-1-name",
       "alarm_patterns": [
         {
diff --git a/tests/functional/features/api/cat/job_config_delete.feature b/tests/functional/features/api/cat/job_config_delete.feature
index 661163e5..8cd94ab9 100644
--- a/tests/functional/features/api/cat/job_config_delete.feature
+++ b/tests/functional/features/api/cat/job_config_delete.feature
@@ -26,7 +26,7 @@ Feature: delete a job's config
     """
   Scenario: DELETE a linked job's config shouldn't be possible
     When I am admin
-    When I do DELETE /api/v4/cat/job-configs/test-job-config-to-link
+    When I do DELETE /api/v4/cat/job-configs/test-job-config-to-check-linked
     Then the response code should be 400
     Then the response body should be:
     """
diff --git a/tests/functional/features/api/cat/job_config_get.feature b/tests/functional/features/api/cat/job_config_get.feature
index 9fed76d6..6e5b34a5 100644
--- a/tests/functional/features/api/cat/job_config_get.feature
+++ b/tests/functional/features/api/cat/job_config_get.feature
@@ -78,14 +78,14 @@ Feature: get a job's config
 
   Scenario: Get a job's config with linked job
     When I am admin
-    When I do GET /api/v4/cat/job-configs?search=test-job-config-name-to-link&with_flags=true
+    When I do GET /api/v4/cat/job-configs?search=test-job-config-check-linked&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "data": [
         {
-          "_id": "test-job-config-to-link",
+          "_id": "test-job-config-to-check-linked",
           "deletable": false,
           "running": false
         }
diff --git a/tests/functional/features/api/cat/job_create.feature b/tests/functional/features/api/cat/job_create.feature
index 92a7d9e0..29f7af1c 100644
--- a/tests/functional/features/api/cat/job_create.feature
+++ b/tests/functional/features/api/cat/job_create.feature
@@ -7,7 +7,7 @@ Feature: create a job
     """
     {
       "name": "test-job-name",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -20,7 +20,7 @@ Feature: create a job
     """
     {
       "name": "test-job-name",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -33,7 +33,7 @@ Feature: create a job
     """
     {
       "name": "test-job-name",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
     }
@@ -45,10 +45,10 @@ Feature: create a job
       "name": "test-job-name",
       "author": "root",
       "config": {
-        "_id": "test-job-config-to-link",
+        "_id": "test-job-config-to-edit-job",
         "auth_token": "test-auth-token",
         "host": "http://example.com",
-        "name": "test-job-config-name-to-link",
+        "name": "test-job-config-to-edit-job-name",
         "type": "rundeck"
       },
       "job_id": "test-job-id",
@@ -62,7 +62,7 @@ Feature: create a job
     """
     {
       "name": "test-job-name-2",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -75,10 +75,10 @@ Feature: create a job
     {
       "name": "test-job-name-2",
       "config": {
-        "_id": "test-job-config-to-link",
+        "_id": "test-job-config-to-edit-job",
         "auth_token": "test-auth-token",
         "host": "http://example.com",
-        "name": "test-job-config-name-to-link",
+        "name": "test-job-config-to-edit-job-name",
         "type": "rundeck"
       },
       "job_id": "test-job-id",
@@ -93,7 +93,7 @@ Feature: create a job
     {
       "_id": "custom-id",
       "name": "test-job-name-2-custom-id-1",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -109,7 +109,7 @@ Feature: create a job
     {
       "_id": "test-job-to-update",
       "name": "test-job-name-2-custom-id-2",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -130,7 +130,7 @@ Feature: create a job
     """
     {
       "name": "test-job-name-to-get",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
diff --git a/tests/functional/features/api/cat/job_delete.feature b/tests/functional/features/api/cat/job_delete.feature
index 028f7abc..9fe60d73 100644
--- a/tests/functional/features/api/cat/job_delete.feature
+++ b/tests/functional/features/api/cat/job_delete.feature
@@ -24,9 +24,18 @@ Feature: delete a job
       "error": "Not found"
     }
     """
+
   Scenario: DELETE a linked job shouldn't be possible
     When I am admin
-    When I do DELETE /api/v4/cat/jobs/test-job-to-test-instruction-to-get-step-2-operation-1-2
+    When I do DELETE /api/v4/cat/jobs/test-job-to-check-linked-to-manual-instruction
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+      "error": "job is linked with instruction"
+    }
+    """
+    When I do DELETE /api/v4/cat/jobs/test-job-to-check-linked-to-auto-instruction
     Then the response code should be 400
     Then the response body should be:
     """
diff --git a/tests/functional/features/api/cat/job_get.feature b/tests/functional/features/api/cat/job_get.feature
index d82a38ed..a1a50df7 100644
--- a/tests/functional/features/api/cat/job_get.feature
+++ b/tests/functional/features/api/cat/job_get.feature
@@ -15,8 +15,8 @@ Feature: get a job
           "name": "test-job-name-to-get",
           "author": "test-author",
           "config": {
-            "_id": "test-job-config-to-link",
-            "name": "test-job-config-name-to-link",
+            "_id": "test-job-config-to-edit-job",
+            "name": "test-job-config-to-edit-job-name",
             "type": "rundeck",
             "host": "http://example.com",
             "author": "test-author",
@@ -78,8 +78,8 @@ Feature: get a job
       "name": "test-job-name-to-get",
       "author": "test-author",
       "config": {
-        "_id": "test-job-config-to-link",
-        "name": "test-job-config-name-to-link",
+        "_id": "test-job-config-to-edit-job",
+        "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
         "author": "test-author",
@@ -92,14 +92,14 @@ Feature: get a job
 
   Scenario: Get a job with linked instruction
     When I am admin
-    When I do GET /api/v4/cat/jobs?search=test-job-to-test-instruction-to-get-step-2-operation-1-2&with_flags=true
+    When I do GET /api/v4/cat/jobs?search=test-job-to-check-linked-to-manual-instruction&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "data": [
         {
-          "_id": "test-job-to-test-instruction-to-get-step-2-operation-1-2",
+          test-job-to-check-linked-to-manual-instruction
           "deletable": false,
           "running": false
         }
diff --git a/tests/functional/features/api/cat/job_update.feature b/tests/functional/features/api/cat/job_update.feature
index b76db201..ce1b94fd 100644
--- a/tests/functional/features/api/cat/job_update.feature
+++ b/tests/functional/features/api/cat/job_update.feature
@@ -5,7 +5,7 @@ Feature: Job update
     """
     {
       "name": "test-job-name-to-update",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     }
@@ -18,7 +18,7 @@ Feature: Job update
     """
     {
       "name": "test-job-name-to-update",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     }
@@ -31,7 +31,7 @@ Feature: Job update
     """
     {
       "name": "test-job-name-to-update",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -44,8 +44,8 @@ Feature: Job update
       "name": "test-job-name-to-update",
       "author": "root",
       "config": {
-        "_id": "test-job-config-to-link",
-        "name": "test-job-config-name-to-link",
+        "_id": "test-job-config-to-edit-job",
+        "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
         "author": "test-author",
@@ -62,7 +62,7 @@ Feature: Job update
     """
     {
       "name": "test-job-name-to-update",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -75,8 +75,8 @@ Feature: Job update
       "name": "test-job-name-to-update",
       "author": "root",
       "config": {
-        "_id": "test-job-config-to-link",
-        "name": "test-job-config-name-to-link",
+        "_id": "test-job-config-to-edit-job",
+        "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
         "author": "test-author",
@@ -93,7 +93,7 @@ Feature: Job update
     """
     {
       "name": "test-job-name-do-not-exists",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
@@ -106,7 +106,7 @@ Feature: Job update
     """
     {
       "name": "test-job-name-to-get",
-      "config": "test-job-config-to-link",
+      "config": "test-job-config-to-edit-job",
       "job_id": "test-job-id",
       "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
     }
diff --git a/tests/functional/features/engines/integration/axe_api_instruction.feature b/tests/functional/features/engines/integration/axe_api_instruction.feature
index 1c80e325..a27e7aa7 100644
--- a/tests/functional/features/engines/integration/axe_api_instruction.feature
+++ b/tests/functional/features/engines/integration/axe_api_instruction.feature
@@ -23,6 +23,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-1-name",
       "entity_patterns": [
         {
@@ -106,6 +107,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-2-name",
       "entity_patterns": [
         {
@@ -207,6 +209,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-3-name",
       "entity_patterns": [
         {
@@ -294,6 +297,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-4-name",
       "entity_patterns": [
         {
@@ -393,6 +397,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-5-name",
       "entity_patterns": [
         {
@@ -480,6 +485,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-6-name",
       "entity_patterns": [
         {
@@ -586,6 +592,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-7-name",
       "filter":{
         "$and":[
@@ -682,6 +689,7 @@ Feature: instruction execution should be added to alarm steps
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-8-name",
       "filter":{
         "$and":[
@@ -722,6 +730,7 @@ Feature: instruction execution should be added to alarm steps
     When I do PUT /api/v4/cat/instructions/{{ .instructionID }}:
     """
     {
+      "type": 0,
       "name": "test-instruction-axe-api-instruction-8-name",
       "filter":{
         "$and":[
diff --git a/tests/functional/features/engines/remediation/jobexecution_start.feature b/tests/functional/features/engines/remediation/jobexecution_start.feature
index a4b00a71..386b8854 100644
--- a/tests/functional/features/engines/remediation/jobexecution_start.feature
+++ b/tests/functional/features/engines/remediation/jobexecution_start.feature
@@ -19,6 +19,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-1-name",
       "entity_patterns": [
         {
@@ -199,6 +200,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-2-name",
       "entity_patterns": [
         {
@@ -323,6 +325,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-3-name",
       "entity_patterns": [
         {
@@ -425,6 +428,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-4-1-name",
       "entity_patterns": [
         {
@@ -456,6 +460,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-4-2-name",
       "entity_patterns": [
         {
@@ -582,6 +587,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-5-name",
       "entity_patterns": [
         {
@@ -674,6 +680,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-6-name",
       "entity_patterns": [
         {
@@ -760,6 +767,7 @@ Feature: run a job
     When I do POST /api/v4/cat/instructions:
     """
     {
+      "type": 0,
       "name": "test-instruction-to-job-execution-start-7-name",
       "entity_patterns": [
         {
-- 
2.25.1


From c4e660263f9010d9c5bc499ba23e1b94f1162c1a Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 8 Apr 2021 12:55:32 +0700
Subject: [PATCH 08/66] Feature #3038 : Update functional tests

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction.json                     | 156 ++++++++++--------
 .../api/cat/instruction_create.feature        |   4 +-
 .../features/api/cat/instruction_get.feature  |   5 +
 3 files changed, 90 insertions(+), 75 deletions(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 60d1eebe..f1fa3078 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -95,6 +95,11 @@
         "job": "test-job-to-instruction-edit-2"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 0,
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -310,6 +315,11 @@
         "job": "test-job-to-check-linked-to-auto-instruction"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 1,
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -656,28 +666,28 @@
       }
     ],
     "description": "test-instruction-to-assign-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-assign-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-assign-step-1",
+        "name": "test-instruction-to-assign-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-assign-step-1-operation-1",
+            "name": "test-instruction-to-assign-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-assign-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-assign-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -695,28 +705,28 @@
       }
     ],
     "description": "test-instruction-to-assign-with-execution-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-assign-with-execution-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-assign-with-execution-step-1",
+        "name": "test-instruction-to-assign-with-execution-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-assign-with-execution-step-1-operation-1",
+            "name": "test-instruction-to-assign-with-execution-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-assign-with-execution-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-assign-with-execution-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -734,28 +744,28 @@
       }
     ],
     "description": "test-instruction-to-assign-with-execution-2-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-assign-with-execution-2-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-assign-with-execution-2-step-1",
+        "name": "test-instruction-to-assign-with-execution-2-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-assign-with-execution-2-step-1-operation-1",
+            "name": "test-instruction-to-assign-with-execution-2-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-assign-with-execution-2-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-assign-with-execution-2-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -773,28 +783,28 @@
       }
     ],
     "description": "test-instruction-to-assign-without-execution-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-assign-without-execution-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-assign-without-execution-step-1",
+        "name": "test-instruction-to-assign-without-execution-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-assign-without-execution-step-1-operation-1",
+            "name": "test-instruction-to-assign-without-execution-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-assign-without-execution-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-assign-without-execution-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -812,28 +822,28 @@
       }
     ],
     "description": "test-instruction-to-rate-1-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-rate-1-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-rate-1-step-1",
+        "name": "test-instruction-to-rate-1-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-rate-1-step-1-operation-1",
+            "name": "test-instruction-to-rate-1-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-rate-1-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-rate-1-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -851,28 +861,28 @@
       }
     ],
     "description": "test-instruction-to-rate-2-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-rate-2-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-rate-2-step-1",
+        "name": "test-instruction-to-rate-2-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-rate-2-step-1-operation-1",
+            "name": "test-instruction-to-rate-2-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-rate-2-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-rate-2-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -890,28 +900,28 @@
       }
     ],
     "description": "test-instruction-to-rate-3-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-rate-3-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-rate-3-step-1",
+        "name": "test-instruction-to-rate-3-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-rate-3-step-1-operation-1",
+            "name": "test-instruction-to-rate-3-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-rate-3-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-rate-3-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -929,28 +939,28 @@
       }
     ],
     "description": "test-instruction-to-rate-4-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-rate-4-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-rate-4-step-1",
+        "name": "test-instruction-to-rate-4-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-rate-4-step-1-operation-1",
+            "name": "test-instruction-to-rate-4-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-rate-4-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-rate-4-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -968,28 +978,28 @@
       }
     ],
     "description": "test-instruction-to-rate-5-description",
-    "author": "test-instruction-to-get-author",
+    "author": "test-instruction-to-rate-5-author",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
     "steps": [
       {
-        "_id": "test-instruction-to-get-step-1",
-        "name": "test-instruction-to-get-step-1-name",
+        "_id": "test-instruction-to-rate-5-step-1",
+        "name": "test-instruction-to-rate-5-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-get-step-1-operation-1",
-            "name": "test-instruction-to-get-step-1-operation-1-name",
+            "_id": "test-instruction-to-rate-5-step-1-operation-1",
+            "name": "test-instruction-to-rate-5-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-get-step-1-operation-1-description",
+            "description": "test-instruction-to-rate-5-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-get-step-1-endpoint"
+        "endpoint": "test-instruction-to-rate-5-step-1-endpoint"
       }
     ],
     "last_executed_by": "test_author",
@@ -1227,8 +1237,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 2,
     "author": "test-instruction-to-run-auto-instruction-1-1-author",
-    "priority": 1,
     "enabled": true,
     "created": 1596712203
   },
@@ -1252,8 +1262,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 3,
     "author": "test-instruction-to-run-auto-instruction-1-2-author",
-    "priority": 2,
     "enabled": true,
     "created": 1596712203
   },
@@ -1277,8 +1287,8 @@
       "seconds": 3,
       "unit": "s"
     },
+    "priority": 4,
     "author": "test-instruction-to-run-auto-instruction-2-1-author",
-    "priority": 1,
     "enabled": true,
     "created": 1596712203
   },
@@ -1302,8 +1312,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 5,
     "author": "test-instruction-to-run-auto-instruction-2-2-author",
-    "priority": 2,
     "enabled": true,
     "created": 1596712203
   },
@@ -1327,8 +1337,8 @@
       "seconds": 10,
       "unit": "s"
     },
+    "priority": 6,
     "author": "test-instruction-to-run-auto-instruction-3-1-author",
-    "priority": 1,
     "enabled": true,
     "created": 1596712203
   },
@@ -1352,8 +1362,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 7,
     "author": "test-instruction-to-run-auto-instruction-3-2-author",
-    "priority": 2,
     "enabled": true,
     "created": 1596712203
   },
@@ -1380,8 +1390,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 8,
     "author": "test-instruction-to-run-auto-instruction-4-1-author",
-    "priority": 1,
     "enabled": true,
     "created": 1596712203
   },
@@ -1405,8 +1415,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 9,
     "author": "test-instruction-to-run-auto-instruction-4-2-author",
-    "priority": 2,
     "enabled": true,
     "created": 1596712203
   },
@@ -1430,8 +1440,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 10,
     "author": "test-instruction-to-run-auto-instruction-4-3-author",
-    "priority": 3,
     "enabled": true,
     "created": 1596712203
   },
@@ -1455,8 +1465,8 @@
       "seconds": 2,
       "unit": "s"
     },
+    "priority": 11,
     "author": "test-instruction-to-run-auto-instruction-5-author",
-    "priority": 1,
     "enabled": true,
     "created": 1596712203
   }
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 0af2a65a..be234445 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -203,7 +203,7 @@ Feature: create a instruction
       "description": "test-instruction-to-create-2-description",
       "author": "test-instruction-to-create-2-author",
       "enabled": true,
-      "priority": 1,
+      "priority": 21,
       "timeout_after_execution": {
         "seconds": 10,
         "unit": "m"
@@ -231,7 +231,7 @@ Feature: create a instruction
       "author": "test-instruction-to-create-2-author",
       "description": "test-instruction-to-create-2-description",
       "enabled": true,
-      "priority": 1,
+      "priority": 21,
       "timeout_after_execution": {
         "seconds": 10,
         "unit": "m"
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index ac24425c..a3eb7fb9 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -202,6 +202,11 @@ Feature: get a instruction
               }
             }
           ],
+          "priority": 0,
+          "timeout_after_execution": {
+            "seconds": 2,
+            "unit": "s"
+          },
           "last_executed_by": {
             "_id": "root",
             "username": "root"
-- 
2.25.1


From c82c0582ef8fe739ec4c7ce13f7660bffb782b3c Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Thu, 8 Apr 2021 18:26:06 +0700
Subject: [PATCH 09/66] update tests

---
 .../api/cat/instruction_create.feature        |  4 ++++
 .../features/api/cat/instruction_get.feature  | 24 +++----------------
 .../api/cat/instruction_update.feature        |  3 +++
 .../cat/instructionexecution_nextstep.feature |  5 ----
 4 files changed, 10 insertions(+), 26 deletions(-)

diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index be234445..6fa09f18 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -64,6 +64,8 @@ Feature: create a instruction
     Then the response body should contain:
     """
     {
+      "type": 0,
+      "status": 0,
       "entity_patterns": [
         {
           "name": "test-instruction-to-create-1-pattern"
@@ -339,6 +341,8 @@ Feature: create a instruction
     Then the response body should contain:
     """
     {
+      "type": 0,
+      "status": 0,
       "entity_patterns": [
         {
           "name": "test-instruction-to-create-3-pattern"
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index a3eb7fb9..31e663c6 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -13,6 +13,7 @@ Feature: get a instruction
         {
           "_id": "test-instruction-to-get-1",
           "type": 0,
+          "status": 0,
           "name": "test-instruction-to-get-1-name",
           "entity_patterns": [
             {
@@ -23,9 +24,6 @@ Feature: get a instruction
           "description": "test-instruction-to-get-1-description",
           "author": "test-instruction-to-get-1-author",
           "enabled": true,
-          "rating": 0,
-          "comments": [],
-          "avg_complete_time": 10,
           "month_executions": 0,
           "steps": [
             {
@@ -139,16 +137,13 @@ Feature: get a instruction
               "endpoint": "test-instruction-to-get-1-step-2-endpoint"
             }
           ],
-          "last_executed_by": {
-            "_id": "root",
-            "username": "root"
-          },
           "last_executed_on": 1596712203,
           "last_modified": 1596712203
         },
         {
           "_id": "test-instruction-to-get-2",
           "type": 1,
+          "status": 0,
           "name": "test-instruction-to-get-2-name",
           "entity_patterns": [
             {
@@ -159,9 +154,6 @@ Feature: get a instruction
           "description": "test-instruction-to-get-2-description",
           "author": "test-instruction-to-get-2-author",
           "enabled": true,
-          "rating": 0,
-          "comments": [],
-          "avg_complete_time": 10,
           "month_executions": 0,
           "deletable": true,
           "running": false,
@@ -207,10 +199,6 @@ Feature: get a instruction
             "seconds": 2,
             "unit": "s"
           },
-          "last_executed_by": {
-            "_id": "root",
-            "username": "root"
-          },
           "last_executed_on": 1596712203,
           "last_modified": 1596712203
         }
@@ -265,6 +253,7 @@ Feature: get a instruction
     {
       "_id": "test-instruction-to-get-1",
       "type": 0,
+      "status": 0,
       "name": "test-instruction-to-get-1-name",
       "entity_patterns": [
         {
@@ -275,9 +264,6 @@ Feature: get a instruction
       "description": "test-instruction-to-get-1-description",
       "author": "test-instruction-to-get-1-author",
       "enabled": true,
-      "rating": 0,
-      "comments": [],
-      "avg_complete_time": 10,
       "month_executions": 0,
       "steps": [
         {
@@ -391,10 +377,6 @@ Feature: get a instruction
          "endpoint": "test-instruction-to-get-1-step-2-endpoint"
         }
       ],
-      "last_executed_by": {
-        "_id": "root",
-        "username": "root"
-      },
       "last_executed_on": 1596712203,
       "last_modified": 1596712203
     }
diff --git a/tests/functional/features/api/cat/instruction_update.feature b/tests/functional/features/api/cat/instruction_update.feature
index 1890a0c2..b751c6c2 100644
--- a/tests/functional/features/api/cat/instruction_update.feature
+++ b/tests/functional/features/api/cat/instruction_update.feature
@@ -47,6 +47,7 @@ Feature: Instruction update
     {
       "_id": "test-instruction-to-update",
       "type": 0,
+      "status": 0,
       "name": "test-instruction-to-update-name",
       "entity_patterns": [
         {
@@ -151,6 +152,8 @@ Feature: Instruction update
     """
     {
       "_id": "test-instruction-to-update",
+      "type": 0,
+      "status": 0,
       "name": "test-instruction-to-update-name",
       "entity_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instructionexecution_nextstep.feature b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
index e8b8d9b9..304e6b8f 100644
--- a/tests/functional/features/api/cat/instructionexecution_nextstep.feature
+++ b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
@@ -372,14 +372,9 @@ Feature: move a instruction execution to next step
     Then the response body should contain:
     """
     {
-      "last_executed_by": {
-        "_id": "root",
-        "username": "root"
-      },
       "month_executions": 1
     }
     """
-    Then the response key "avg_complete_time" should not be "0"
     Then the response key "last_executed_on" should not be "0"
 
   Scenario: given running instruction should fail execution
-- 
2.25.1


From 38940ade4f8cc73fbee3c07cd798b182672ec11d Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Mon, 12 Apr 2021 12:28:23 +0700
Subject: [PATCH 10/66] Feature #3038 : Add timeout field to manual
 instructions

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction.json                     | 112 ++++++++-
 .../api/cat/instruction_create.feature        |  23 +-
 .../features/api/cat/instruction_get.feature  |   8 +
 .../api/cat/instruction_update.feature        |  61 +++--
 .../cat/instructionexecution_cancel.feature   |  12 +
 .../api/cat/instructionexecution_get.feature  |  16 ++
 .../api/cat/instructionexecution_next.feature |   8 +
 .../cat/instructionexecution_nextstep.feature |  24 ++
 .../cat/instructionexecution_pause.feature    |  16 ++
 .../cat/instructionexecution_previous.feature |  16 ++
 .../api/cat/instructionexecution_rate.feature | 228 +++++++++---------
 .../cat/instructionexecution_start.feature    |   4 +
 .../integration/axe_api_instruction.feature   |  36 +++
 .../remediation/jobexecution_start.feature    |  32 +++
 14 files changed, 455 insertions(+), 141 deletions(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index f1fa3078..3443285a 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -68,6 +68,10 @@
         "endpoint": "test-instruction-to-get-1-step-2-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -138,6 +142,10 @@
         "endpoint": "test-instruction-to-delete-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -176,6 +184,10 @@
         "endpoint": "test-instruction-to-update-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 10,
+      "unit": "m"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -214,6 +226,10 @@
         "endpoint": "test-instruction-to-check-unique-id-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -252,6 +268,10 @@
         "endpoint": "test-instruction-to-check-unique-name-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -292,6 +312,10 @@
         "endpoint": "test-instruction-to-job-check-linked-1-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -309,7 +333,6 @@
     "description": "test-instruction-to-job-check-linked-2-description",
     "author": "test-instruction-to-job-check-linked-2-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "jobs": [
       {
         "job": "test-job-to-check-linked-to-auto-instruction"
@@ -320,7 +343,6 @@
       "unit": "s"
     },
     "priority": 1,
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000000
@@ -386,6 +408,10 @@
         "endpoint": "test-instruction-execution-to-start-multiple-times-step-2-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -454,6 +480,10 @@
         "endpoint": "test-instruction-execution-running-step-2-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -520,6 +550,10 @@
         "endpoint": "test-instruction-cancel-execution-running-1-step-2-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -586,6 +620,10 @@
         "endpoint": "test-instruction-delete-execution-running-step-2-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203
@@ -651,6 +689,10 @@
         "endpoint": "test-instruction-execution-resume-1-step-2-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -690,6 +732,10 @@
         "endpoint": "test-instruction-to-assign-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -729,6 +775,10 @@
         "endpoint": "test-instruction-to-assign-with-execution-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -768,6 +818,10 @@
         "endpoint": "test-instruction-to-assign-with-execution-2-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -807,6 +861,10 @@
         "endpoint": "test-instruction-to-assign-without-execution-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -846,6 +904,10 @@
         "endpoint": "test-instruction-to-rate-1-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -885,6 +947,10 @@
         "endpoint": "test-instruction-to-rate-2-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -924,6 +990,10 @@
         "endpoint": "test-instruction-to-rate-3-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -963,6 +1033,10 @@
         "endpoint": "test-instruction-to-rate-4-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -1002,6 +1076,10 @@
         "endpoint": "test-instruction-to-rate-5-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -1043,6 +1121,10 @@
         "endpoint": "test-instruction-with-entity-pattern-1-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -1084,6 +1166,10 @@
         "endpoint": "test-instruction-with-entity-pattern-2-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -1132,6 +1218,10 @@
         "endpoint": "test-instruction-with-patterns-combined-step-1-endpoint"
       }
     ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
@@ -1152,6 +1242,10 @@
       }
     ],
     "steps": [],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "active_on_pbh": [
       "pbh-type-for-instruction-with-pbehavior-1",
       "pbh-type-for-instruction-with-pbehavior-2"
@@ -1171,7 +1265,11 @@
         }
       }
     ],
-    "steps": []
+    "steps": [],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    }
   },
   {
     "_id": "test-instruction-with-pbh-with-some-disabled",
@@ -1188,6 +1286,10 @@
       }
     ],
     "steps": [],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "disabled_on_pbh": [
       "pbh-type-for-instruction-with-pbehavior-1",
       "pbh-type-for-instruction-with-pbehavior-2"
@@ -1208,6 +1310,10 @@
       }
     ],
     "steps": [],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
     "active_on_pbh": [
       "test1",
       "test2"
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 6fa09f18..3b9dc428 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -16,6 +16,10 @@ Feature: create a instruction
       ],
       "description": "test-instruction-to-create-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-1-step-1",
@@ -75,6 +79,10 @@ Feature: create a instruction
       "description": "test-instruction-to-create-1-description",
       "enabled": true,
       "name": "test-instruction-to-create-1-name",
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "stop_on_fail": true,
@@ -293,6 +301,10 @@ Feature: create a instruction
       ],
       "description": "test-instruction-to-create-3-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-3-step-1",
@@ -352,6 +364,10 @@ Feature: create a instruction
       "description": "test-instruction-to-create-3-description",
       "enabled": true,
       "name": "test-instruction-to-create-3-name",
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "stop_on_fail": true,
@@ -482,6 +498,10 @@ Feature: create a instruction
       ],
       "description": "test-instruction-to-create-4-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-4-step-1",
@@ -565,7 +585,8 @@ Feature: create a instruction
         "description": "Description is missing.",
         "enabled": "Enabled is missing.",
         "name": "Name is missing.",
-        "steps": "Steps is missing."
+        "steps": "Steps is missing.",
+        "timeout_after_execution": "TimeoutAfterExecution is missing."
       }
     }
     """
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index 31e663c6..f33044ce 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -25,6 +25,10 @@ Feature: get a instruction
           "author": "test-instruction-to-get-1-author",
           "enabled": true,
           "month_executions": 0,
+          "timeout_after_execution": {
+            "seconds": 2,
+            "unit": "s"
+          },
           "steps": [
             {
               "name": "test-instruction-to-get-1-step-1-name",
@@ -265,6 +269,10 @@ Feature: get a instruction
       "author": "test-instruction-to-get-1-author",
       "enabled": true,
       "month_executions": 0,
+      "timeout_after_execution": {
+        "seconds": 2,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-get-1-step-1-name",
diff --git a/tests/functional/features/api/cat/instruction_update.feature b/tests/functional/features/api/cat/instruction_update.feature
index b751c6c2..5a15b70f 100644
--- a/tests/functional/features/api/cat/instruction_update.feature
+++ b/tests/functional/features/api/cat/instruction_update.feature
@@ -22,6 +22,10 @@ Feature: Instruction update
       ],
       "description": "test-instruction-to-update-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-step-1-name",
@@ -57,6 +61,10 @@ Feature: Instruction update
       "description": "test-instruction-to-update-description",
       "author": "root",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-step-1-name",
@@ -103,6 +111,10 @@ Feature: Instruction update
       ],
       "description": "test-instruction-to-update-description-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-step-1-name",
@@ -163,6 +175,10 @@ Feature: Instruction update
       "description": "test-instruction-to-update-description-changed",
       "author": "root",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-step-1-name",
@@ -336,6 +352,10 @@ Feature: Instruction update
       "name": "test-instruction-with-pbh-to-edit-name",
       "description": "test-instruction-with-pbh-to-edit-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "alarm_patterns": [
         {
           "v": {
@@ -343,7 +363,23 @@ Feature: Instruction update
           }
         }
       ],
-      "steps": [],
+      "steps": [
+        {
+          "name": "test-instruction-with-pbh-to-edit-step-1-name",
+          "endpoint": "test-instruction-with-pbh-to-edit-step-1-endpoint",
+          "stop_on_fail": true,
+          "operations": [
+            {
+              "name": "test-instruction-with-pbh-to-edit-step-1-operation-1-name",
+              "description": "test-instruction-with-pbh-to-edit-step-1-operation-1-description",
+              "time_to_complete": {
+                "seconds": 10,
+                "unit": "m"
+              }
+            }
+          ]
+        }
+      ],
       "active_on_pbh": [
         "pbh-type-for-instruction-with-pbehavior-1"
       ]
@@ -354,16 +390,6 @@ Feature: Instruction update
     """
     {
       "name": "test-instruction-with-pbh-to-edit-name",
-      "description": "test-instruction-with-pbh-to-edit-description",
-      "author": "root",
-      "enabled": true,
-      "alarm_patterns": [
-        {
-          "v": {
-            "component": "test-alarm-instruction-with-pbehavior-component-no-match"
-          }
-        }
-      ],
       "active_on_pbh": [
         "pbh-type-for-instruction-with-pbehavior-1"
       ]
@@ -375,17 +401,6 @@ Feature: Instruction update
     When I do PUT /api/v4/cat/instructions/test-instruction-with-pbh-to-edit:
     """
     {
-      "name": "test-instruction-with-pbh-to-edit-name",
-      "description": "test-instruction-with-pbh-to-edit-description",
-      "enabled": true,
-      "alarm_patterns": [
-        {
-          "v": {
-            "component": "test-alarm-instruction-with-pbehavior-component-no-match"
-          }
-        }
-      ],
-      "steps": [],
       "active_on_pbh": [
         "pbh-type-for-instruction-with-pbehavior-1",
         "not-exist"
@@ -393,7 +408,7 @@ Feature: Instruction update
     }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "errors": {
diff --git a/tests/functional/features/api/cat/instructionexecution_cancel.feature b/tests/functional/features/api/cat/instructionexecution_cancel.feature
index 3f981c5a..9e3d35f0 100644
--- a/tests/functional/features/api/cat/instructionexecution_cancel.feature
+++ b/tests/functional/features/api/cat/instructionexecution_cancel.feature
@@ -16,6 +16,10 @@ Feature: cancel a instruction execution
       ],
       "description": "test-instruction-execution-cancel-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-cancel-1-step-1",
@@ -63,6 +67,10 @@ Feature: cancel a instruction execution
       ],
       "description": "test-instruction-execution-cancel-2-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-cancel-2-step-1",
@@ -121,6 +129,10 @@ Feature: cancel a instruction execution
       ],
       "description": "test-instruction-cancel-execution-running-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-cancel-execution-running-1-step-1",
diff --git a/tests/functional/features/api/cat/instructionexecution_get.feature b/tests/functional/features/api/cat/instructionexecution_get.feature
index fa249d25..5ccb7d1c 100644
--- a/tests/functional/features/api/cat/instructionexecution_get.feature
+++ b/tests/functional/features/api/cat/instructionexecution_get.feature
@@ -16,6 +16,10 @@ Feature: get running instruction
       ],
       "description": "test-instruction-execution-get-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-get-1-step-1",
@@ -126,6 +130,10 @@ Feature: get running instruction
       ],
       "description": "test-instruction-execution-get-2-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-get-2-step-1",
@@ -241,6 +249,10 @@ Feature: get running instruction
       ],
       "description": "test-instruction-execution-get-3-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-get-3-step-1",
@@ -357,6 +369,10 @@ Feature: get running instruction
       ],
       "description": "test-instruction-execution-get-4-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-get-4-step-1",
diff --git a/tests/functional/features/api/cat/instructionexecution_next.feature b/tests/functional/features/api/cat/instructionexecution_next.feature
index bd756fbe..11851ef2 100644
--- a/tests/functional/features/api/cat/instructionexecution_next.feature
+++ b/tests/functional/features/api/cat/instructionexecution_next.feature
@@ -16,6 +16,10 @@ Feature: move a instruction execution to next operation
       ],
       "description": "test-instruction-execution-next-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-1-step-1",
@@ -126,6 +130,10 @@ Feature: move a instruction execution to next operation
       ],
       "description": "test-instruction-execution-next-2-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-2-step-1",
diff --git a/tests/functional/features/api/cat/instructionexecution_nextstep.feature b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
index 304e6b8f..ea49a52f 100644
--- a/tests/functional/features/api/cat/instructionexecution_nextstep.feature
+++ b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
@@ -16,6 +16,10 @@ Feature: move a instruction execution to next step
       ],
       "description": "test-instruction-execution-next-step-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-step-1-step-1",
@@ -114,6 +118,10 @@ Feature: move a instruction execution to next step
       ],
       "description": "test-instruction-execution-next-step-2-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-step-2-step-1",
@@ -217,6 +225,10 @@ Feature: move a instruction execution to next step
       ],
       "description": "test-instruction-execution-next-step-3-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-step-3-step-1",
@@ -331,6 +343,10 @@ Feature: move a instruction execution to next step
       ],
       "description": "test-instruction-execution-next-step-4-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-step-4-step-1",
@@ -391,6 +407,10 @@ Feature: move a instruction execution to next step
       ],
       "description": "test-instruction-execution-next-step-5-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-step-5-step-1",
@@ -508,6 +528,10 @@ Feature: move a instruction execution to next step
       ],
       "description": "test-instruction-execution-next-step-6-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-next-step-6-step-1",
diff --git a/tests/functional/features/api/cat/instructionexecution_pause.feature b/tests/functional/features/api/cat/instructionexecution_pause.feature
index f7d046e3..67a67e29 100644
--- a/tests/functional/features/api/cat/instructionexecution_pause.feature
+++ b/tests/functional/features/api/cat/instructionexecution_pause.feature
@@ -16,6 +16,10 @@ Feature: pause a instruction execution
       ],
       "description": "test-instruction-execution-pause-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-pause-1-step-1",
@@ -75,6 +79,10 @@ Feature: pause a instruction execution
       ],
       "description": "test-instruction-execution-pause-2-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-pause-2-step-1",
@@ -137,6 +145,10 @@ Feature: pause a instruction execution
       ],
       "description": "test-instruction-execution-pause-3-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-pause-3-step-1",
@@ -210,6 +222,10 @@ Feature: pause a instruction execution
       ],
       "description": "test-instruction-execution-pause-4-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-pause-4-step-1",
diff --git a/tests/functional/features/api/cat/instructionexecution_previous.feature b/tests/functional/features/api/cat/instructionexecution_previous.feature
index 48a7eda4..c498cebd 100644
--- a/tests/functional/features/api/cat/instructionexecution_previous.feature
+++ b/tests/functional/features/api/cat/instructionexecution_previous.feature
@@ -16,6 +16,10 @@ Feature: move a instruction execution to previous operation
       ],
       "description": "test-instruction-execution-previous-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-previous-1-step-1",
@@ -128,6 +132,10 @@ Feature: move a instruction execution to previous operation
       ],
       "description": "test-instruction-execution-previous-2-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-previous-2-step-1",
@@ -187,6 +195,10 @@ Feature: move a instruction execution to previous operation
       ],
       "description": "test-instruction-execution-previous-3-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-previous-3-step-1",
@@ -301,6 +313,10 @@ Feature: move a instruction execution to previous operation
       ],
       "description": "test-instruction-execution-previous-4-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-previous-4-step-1",
diff --git a/tests/functional/features/api/cat/instructionexecution_rate.feature b/tests/functional/features/api/cat/instructionexecution_rate.feature
index 7a4cbbd9..dfb90b62 100644
--- a/tests/functional/features/api/cat/instructionexecution_rate.feature
+++ b/tests/functional/features/api/cat/instructionexecution_rate.feature
@@ -1,114 +1,114 @@
-Feature: rate an instruction
-  I need to be able to rate an instruction
-  Only admin should be able to rate an instruction
-
-  Scenario: Rate an instruction as unauthorized
-    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
-    """
-    {
-      "rating": 4.5,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 401
-
-  Scenario: Rate an instruction without permissions
-    When I am noperms
-    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
-    """
-    {
-      "rating": 4.5,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 403
-
-  Scenario: Rate an instruction, but without completed execution
-    When I am admin
-    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
-    """
-    {
-      "rating": 4.5,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 400
-    Then the response body should be:
-    """
-    {
-      "error": "instruction wasn't completed by the user"
-    }
-    """
-
-  Scenario: Rate an instruction, when the user has already rated it
-    When I am admin
-    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-2/rate:
-    """
-    {
-      "rating": 2.5,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 400
-    Then the response body should be:
-    """
-    {
-      "error": "rating already exists"
-    }
-    """
-
-  Scenario: Rate completed instruction with success
-    When I am admin
-    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-3/rate:
-    """
-    {
-      "rating": 4.5,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 204
-
-  Scenario: Rate an instruction with success, check rating calculation
-    When I am admin
-    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-4/rate:
-    """
-    {
-      "rating": 3,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 204
-    Then I do GET /api/v4/cat/instructions/test-instruction-to-rate-4
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "_id": "test-instruction-to-rate-4",
-      "rating": 3,
-      "comments": [
-        {
-          "rating": 5,
-          "comment": "test_user_1_comment"
-        },
-        {
-          "rating": 1,
-          "comment": "test_user_2_comment"
-        },
-        {
-          "rating": 3,
-          "comment": "test"
-        }
-      ]
-    }
-    """
-
-  Scenario: Rate failed instruction with success
-    When I am admin
-    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-5/rate:
-    """
-    {
-      "rating": 4.5,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 204
\ No newline at end of file
+#Feature: rate an instruction
+#  I need to be able to rate an instruction
+#  Only admin should be able to rate an instruction
+#
+#  Scenario: Rate an instruction as unauthorized
+#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
+#    """
+#    {
+#      "rating": 4.5,
+#      "comment": "test"
+#    }
+#    """
+#    Then the response code should be 401
+#
+#  Scenario: Rate an instruction without permissions
+#    When I am noperms
+#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
+#    """
+#    {
+#      "rating": 4.5,
+#      "comment": "test"
+#    }
+#    """
+#    Then the response code should be 403
+#
+#  Scenario: Rate an instruction, but without completed execution
+#    When I am admin
+#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
+#    """
+#    {
+#      "rating": 4.5,
+#      "comment": "test"
+#    }
+#    """
+#    Then the response code should be 400
+#    Then the response body should be:
+#    """
+#    {
+#      "error": "instruction wasn't completed by the user"
+#    }
+#    """
+#
+#  Scenario: Rate an instruction, when the user has already rated it
+#    When I am admin
+#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-2/rate:
+#    """
+#    {
+#      "rating": 2.5,
+#      "comment": "test"
+#    }
+#    """
+#    Then the response code should be 400
+#    Then the response body should be:
+#    """
+#    {
+#      "error": "rating already exists"
+#    }
+#    """
+#
+#  Scenario: Rate completed instruction with success
+#    When I am admin
+#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-3/rate:
+#    """
+#    {
+#      "rating": 4.5,
+#      "comment": "test"
+#    }
+#    """
+#    Then the response code should be 204
+#
+#  Scenario: Rate an instruction with success, check rating calculation
+#    When I am admin
+#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-4/rate:
+#    """
+#    {
+#      "rating": 3,
+#      "comment": "test"
+#    }
+#    """
+#    Then the response code should be 204
+#    Then I do GET /api/v4/cat/instructions/test-instruction-to-rate-4
+#    Then the response code should be 200
+#    Then the response body should contain:
+#    """
+#    {
+#      "_id": "test-instruction-to-rate-4",
+#      "rating": 3,
+#      "comments": [
+#        {
+#          "rating": 5,
+#          "comment": "test_user_1_comment"
+#        },
+#        {
+#          "rating": 1,
+#          "comment": "test_user_2_comment"
+#        },
+#        {
+#          "rating": 3,
+#          "comment": "test"
+#        }
+#      ]
+#    }
+#    """
+#
+#  Scenario: Rate failed instruction with success
+#    When I am admin
+#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-5/rate:
+#    """
+#    {
+#      "rating": 4.5,
+#      "comment": "test"
+#    }
+#    """
+#    Then the response code should be 204
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_start.feature b/tests/functional/features/api/cat/instructionexecution_start.feature
index bb44531f..f1cfb784 100644
--- a/tests/functional/features/api/cat/instructionexecution_start.feature
+++ b/tests/functional/features/api/cat/instructionexecution_start.feature
@@ -16,6 +16,10 @@ Feature: run a instruction
       ],
       "description": "test-instruction-execution-start-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-execution-start-1-step-1",
diff --git a/tests/functional/features/engines/integration/axe_api_instruction.feature b/tests/functional/features/engines/integration/axe_api_instruction.feature
index a27e7aa7..2e4b3e77 100644
--- a/tests/functional/features/engines/integration/axe_api_instruction.feature
+++ b/tests/functional/features/engines/integration/axe_api_instruction.feature
@@ -32,6 +32,10 @@ Feature: instruction execution should be added to alarm steps
       ],
       "description": "test-instruction-axe-api-instruction-1-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-1-step-1",
@@ -116,6 +120,10 @@ Feature: instruction execution should be added to alarm steps
       ],
       "description": "test-instruction-axe-api-instruction-2-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-2-step-1",
@@ -218,6 +226,10 @@ Feature: instruction execution should be added to alarm steps
       ],
       "description": "test-instruction-axe-api-instruction-3-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-3-step-1",
@@ -306,6 +318,10 @@ Feature: instruction execution should be added to alarm steps
       ],
       "description": "test-instruction-axe-api-instruction-4-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-4-step-1",
@@ -406,6 +422,10 @@ Feature: instruction execution should be added to alarm steps
       ],
       "description": "test-instruction-axe-api-instruction-5-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-5-step-1",
@@ -494,6 +514,10 @@ Feature: instruction execution should be added to alarm steps
       ],
       "description": "test-instruction-axe-api-instruction-6-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-6-step-1",
@@ -603,6 +627,10 @@ Feature: instruction execution should be added to alarm steps
       },
       "description": "test-instruction-axe-api-instruction-7-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-7-step-1",
@@ -700,6 +728,10 @@ Feature: instruction execution should be added to alarm steps
       },
       "description": "test-instruction-axe-api-instruction-8-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-8-step-1",
@@ -741,6 +773,10 @@ Feature: instruction execution should be added to alarm steps
       },
       "description": "test-instruction-axe-api-instruction-8-description",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-axe-api-instruction-8-step-1",
diff --git a/tests/functional/features/engines/remediation/jobexecution_start.feature b/tests/functional/features/engines/remediation/jobexecution_start.feature
index 386b8854..51ce707e 100644
--- a/tests/functional/features/engines/remediation/jobexecution_start.feature
+++ b/tests/functional/features/engines/remediation/jobexecution_start.feature
@@ -29,6 +29,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-1-description",
       "author": "test-instruction-to-job-execution-start-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-1-step-1",
@@ -210,6 +214,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-2-description",
       "author": "test-instruction-to-job-execution-start-2-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-2-step-1",
@@ -335,6 +343,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-3-description",
       "author": "test-instruction-to-job-execution-start-3-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-3-step-1",
@@ -438,6 +450,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-4-1-description",
       "author": "test-instruction-to-job-execution-start-4-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-4-1-step-1",
@@ -470,6 +486,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-4-2-description",
       "author": "test-instruction-to-job-execution-start-4-2-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-4-2-step-1",
@@ -597,6 +617,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-5-description",
       "author": "test-instruction-to-job-execution-start-5-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-5-step-1",
@@ -690,6 +714,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-6-description",
       "author": "test-instruction-to-job-execution-start-6-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-6-step-1",
@@ -777,6 +805,10 @@ Feature: run a job
       "description": "test-instruction-to-job-execution-start-7-description",
       "author": "test-instruction-to-job-execution-start-7-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "s"
+      },
       "steps": [
         {
           "name": "test-instruction-to-job-execution-start-7-step-1",
-- 
2.25.1


From 1ee54b3b45cd6cdb9068bf3f875a785bb4232290 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 14 Apr 2021 12:44:58 +0700
Subject: [PATCH 11/66] Feature #3043 : Add get instruction stats API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/auto_instruction_execution.json      |  41 ++-
 fixtures/instruction.json                     | 172 +++++++-----
 fixtures/instruction_execution.json           |  61 ++--
 fixtures/instruction_rating.json              |  28 +-
 fixtures/job.json                             |   9 +
 lib/bdd/DummyHttpServer.go                    |  11 +
 .../features/api/cat/instruction_get.feature  |   3 +
 .../cat/instructionexecution_cancel.feature   |   4 +-
 .../api/cat/instructionexecution_get.feature  |   4 +-
 .../api/cat/instructionexecution_next.feature |   4 +-
 .../cat/instructionexecution_nextstep.feature |   4 +-
 .../cat/instructionexecution_pause.feature    |   4 +-
 .../cat/instructionexecution_previous.feature |   4 +-
 .../cat/instructionexecution_resume.feature   |   4 +-
 .../api/cat/instructionstats_get.feature      | 262 ++++++++++++++++++
 .../instructionexecution_stats.feature        | 206 ++++++++++++++
 16 files changed, 697 insertions(+), 124 deletions(-)
 create mode 100644 tests/functional/features/api/cat/instructionstats_get.feature
 create mode 100644 tests/functional/features/engines/remediation/instructionexecution_stats.feature

diff --git a/fixtures/auto_instruction_execution.json b/fixtures/auto_instruction_execution.json
index 0637a088..480bf5b0 100644
--- a/fixtures/auto_instruction_execution.json
+++ b/fixtures/auto_instruction_execution.json
@@ -1 +1,40 @@
-[]
\ No newline at end of file
+[
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-1",
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-2",
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-3",
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-4",
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
+  }
+]
\ No newline at end of file
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 3443285a..892438ac 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -11,7 +11,6 @@
     "description": "test-instruction-to-get-1-description",
     "author": "test-instruction-to-get-1-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-to-get-1-step-1",
@@ -72,10 +71,9 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "created": 1000000000
+    "created": 1596712203
   },
   {
     "_id": "test-instruction-to-get-2",
@@ -89,7 +87,6 @@
     "description": "test-instruction-to-get-2-description",
     "author": "test-instruction-to-get-2-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "jobs": [
       {
         "job": "test-job-to-instruction-edit-1",
@@ -104,10 +101,9 @@
       "unit": "s"
     },
     "priority": 0,
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "created": 1000000000
+    "created": 1596712203
   },
   {
     "_id": "test-instruction-to-delete",
@@ -121,7 +117,6 @@
     "description": "test-instruction-to-delete-description",
     "author": "test-instruction-to-delete-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-to-delete-step-1",
@@ -146,7 +141,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000001
@@ -163,7 +157,6 @@
     "description": "test-instruction-to-update-description",
     "author": "test-instruction-to-update-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-to-update-step-1",
@@ -188,7 +181,6 @@
       "seconds": 10,
       "unit": "m"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000002
@@ -205,7 +197,6 @@
     "description": "test-instruction-to-check-unique-id-description",
     "author": "test-instruction-to-check-unique-id-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-to-check-unique-id-step-1",
@@ -230,7 +221,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000001
@@ -247,7 +237,6 @@
     "description": "test-instruction-to-check-unique-name-description",
     "author": "test-instruction-to-check-unique-name-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-to-check-unique-name-step-1",
@@ -272,7 +261,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000001
@@ -289,7 +277,6 @@
     "description": "test-instruction-to-job-check-linked-1-description",
     "author": "test-instruction-to-job-check-linked-1-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-to-job-check-linked-1-step-1",
@@ -316,7 +303,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000000
@@ -359,7 +345,6 @@
     "description": "test-instruction-execution-to-start-multiple-times-description",
     "author": "test-instruction-execution-to-start-multiple-times-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-execution-to-start-multiple-times-step-1",
@@ -412,7 +397,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000003
@@ -429,7 +413,6 @@
     "description": "test-instruction-execution-running-description",
     "author": "test-instruction-execution-running-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-execution-running-step-1",
@@ -484,7 +467,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000004
@@ -501,7 +483,6 @@
     "description": "test-instruction-cancel-execution-running-1-description",
     "author": "test-instruction-cancel-execution-running-1-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-cancel-execution-running-1-step-1",
@@ -554,7 +535,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000008
@@ -571,7 +551,6 @@
     "description": "test-instruction-delete-execution-running-description",
     "author": "test-instruction-delete-execution-running-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-delete-execution-running-step-1",
@@ -624,7 +603,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203
   },
@@ -640,7 +618,6 @@
     "description": "test-instruction-execution-resume-1-description",
     "author": "test-instruction-execution-resume-1-author",
     "enabled": true,
-    "avg_complete_time": 10,
     "steps": [
       {
         "_id": "test-instruction-execution-resume-1-step-1",
@@ -693,7 +670,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "root",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000011
@@ -710,8 +686,6 @@
     "description": "test-instruction-to-assign-description",
     "author": "test-instruction-to-assign-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-assign-step-1",
@@ -736,7 +710,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000012
@@ -753,8 +726,6 @@
     "description": "test-instruction-to-assign-with-execution-description",
     "author": "test-instruction-to-assign-with-execution-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-assign-with-execution-step-1",
@@ -779,7 +750,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000013
@@ -796,8 +766,6 @@
     "description": "test-instruction-to-assign-with-execution-2-description",
     "author": "test-instruction-to-assign-with-execution-2-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-assign-with-execution-2-step-1",
@@ -822,7 +790,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000014
@@ -839,8 +806,6 @@
     "description": "test-instruction-to-assign-without-execution-description",
     "author": "test-instruction-to-assign-without-execution-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-assign-without-execution-step-1",
@@ -865,7 +830,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000015
@@ -882,8 +846,6 @@
     "description": "test-instruction-to-rate-1-description",
     "author": "test-instruction-to-rate-1-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-rate-1-step-1",
@@ -908,7 +870,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000016
@@ -925,8 +886,6 @@
     "description": "test-instruction-to-rate-2-description",
     "author": "test-instruction-to-rate-2-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-rate-2-step-1",
@@ -951,7 +910,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000017
@@ -968,8 +926,6 @@
     "description": "test-instruction-to-rate-3-description",
     "author": "test-instruction-to-rate-3-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-rate-3-step-1",
@@ -994,7 +950,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000018
@@ -1011,8 +966,6 @@
     "description": "test-instruction-to-rate-4-description",
     "author": "test-instruction-to-rate-4-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-rate-4-step-1",
@@ -1037,7 +990,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000019
@@ -1054,8 +1006,6 @@
     "description": "test-instruction-to-rate-5-description",
     "author": "test-instruction-to-rate-5-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-to-rate-5-step-1",
@@ -1080,7 +1030,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000019
@@ -1099,8 +1048,6 @@
     "description": "test-instruction-with-entity-pattern-1-description",
     "author": "test-instruction-with-entity-pattern-1-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-with-entity-pattern-1-step-1",
@@ -1125,7 +1072,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000019
@@ -1144,8 +1090,6 @@
     "description": "test-instruction-with-entity-pattern-2-description",
     "author": "test-instruction-with-entity-pattern-2-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-with-entity-pattern-2-step-1",
@@ -1170,7 +1114,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000019
@@ -1196,8 +1139,6 @@
     "description": "test-instruction-with-patterns-combined-description",
     "author": "test-instruction-with-patterns-combined-author",
     "enabled": true,
-    "avg_complete_time": 10,
-    "month_executions": 5,
     "steps": [
       {
         "_id": "test-instruction-with-patterns-combined-step-1",
@@ -1222,7 +1163,6 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_by": "test_author",
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
     "created": 1000000019
@@ -1575,5 +1515,113 @@
     "author": "test-instruction-to-run-auto-instruction-5-author",
     "enabled": true,
     "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-get-1",
+    "type": 0,
+    "name": "test-instruction-to-stats-get-1-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-get-1-description",
+    "author": "test-instruction-to-stats-get-1-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-get-1-step-1",
+        "name": "test-instruction-to-stats-get-1-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-get-1-step-1-operation-1",
+            "name": "test-instruction-to-stats-get-1-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-get-1-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-get-1-step-1-operation-2",
+            "name": "test-instruction-to-stats-get-1-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-get-1-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-get-1-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-get-1-step-2",
+        "name": "test-instruction-to-stats-get-1-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-get-1-step-2-operation-1",
+            "name": "test-instruction-to-stats-get-1-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-get-1-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-get-1-step-2-operation-2",
+            "name": "test-instruction-to-stats-get-1-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-get-1-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-get-1-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-get-2",
+    "type": 1,
+    "name": "test-instruction-to-stats-get-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-get-2-description",
+    "author": "test-instruction-to-stats-get-2-author",
+    "enabled": true,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1",
+        "stop_on_fail": true
+      },
+      {
+        "job": "test-job-to-instruction-edit-2"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 12,
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index f69d6b94..e545cca1 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -10,7 +10,9 @@
           {
             "operation": "test-instruction-execution-running-step-1-operation-1",
             "started_at": 1597905434,
-            "job_history": ["test-job-execution-to-get"]
+            "job_history": [
+              "test-job-execution-to-get"
+            ]
           }
         ]
       }
@@ -88,38 +90,41 @@
     "status": 0
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-1",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-1",
-    "status": 0
-  },
-  {
-    "_id": "execution-for-test-instruction-to-rate-2",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-2",
-    "status": 2
+    "_id": "test-instruction-execution-to-get-stats-1",
+    "instruction": "test-instruction-to-stats-get-1",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-3",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-3",
-    "status": 2
+    "_id": "test-instruction-execution-to-get-stats-2",
+    "instruction": "test-instruction-to-stats-get-1",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-4",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-4",
-    "status": 2
+    "_id": "test-instruction-execution-to-get-stats-3",
+    "instruction": "test-instruction-to-stats-get-1",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-5",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-5",
-    "status": 4
+    "_id": "test-instruction-execution-to-get-stats-4",
+    "instruction": "test-instruction-to-stats-get-1",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_rating.json b/fixtures/instruction_rating.json
index 35c3ebd3..aebeaad8 100644
--- a/fixtures/instruction_rating.json
+++ b/fixtures/instruction_rating.json
@@ -1,26 +1,16 @@
 [
   {
-    "_id": "rating-1-for-test-instruction-to-rate-2",
-    "execution": "execution-for-test-instruction-to-rate-2",
-    "instruction": "test-instruction-to-rate-2",
-    "user": "root",
+    "_id": "test-rating-to-stats-get-1",
+    "instruction": "test-instruction-to-stats-get-1",
+    "user": "test-rating-to-stats-get-1-user",
     "rating": 4.5,
-    "comment": "test"
+    "comment": "test-rating-to-stats-get-1-comment"
   },
   {
-    "_id": "rating-1-for-test-instruction-to-rate-4",
-    "execution": "execution-for-test-instruction-to-rate-4",
-    "instruction": "test-instruction-to-rate-4",
-    "user": "test_user_1",
-    "rating": 5,
-    "comment": "test_user_1_comment"
-  },
-  {
-    "_id": "rating-2-for-test-instruction-to-rate-4",
-    "execution": "execution-for-test-instruction-to-rate-4",
-    "instruction": "test-instruction-to-rate-4",
-    "user": "test_user_2",
-    "rating": 1,
-    "comment": "test_user_2_comment"
+    "_id": "test-rating-to-stats-get-2",
+    "instruction": "test-instruction-to-stats-get-1",
+    "user": "test-rating-to-stats-get-2-user",
+    "rating": 2,
+    "comment": "test-rating-to-stats-get-2-comment"
   }
 ]
\ No newline at end of file
diff --git a/fixtures/job.json b/fixtures/job.json
index 346673db..96c75120 100644
--- a/fixtures/job.json
+++ b/fixtures/job.json
@@ -133,5 +133,14 @@
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
     "created": 1596712203
+  },
+  {
+    "_id": "test-job-to-run-auto-instruction-5",
+    "name": "test-job-to-run-auto-instruction-5-name",
+    "author": "test-job-to-run-auto-instruction-5-author",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-long-succeeded",
+    "payload": "{\"test-job-to-run-auto-instruction-5-key\": \"test-job-to-run-auto-instruction-5-val\"}",
+    "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/lib/bdd/DummyHttpServer.go b/lib/bdd/DummyHttpServer.go
index 3a1929b0..9bc3787b 100644
--- a/lib/bdd/DummyHttpServer.go
+++ b/lib/bdd/DummyHttpServer.go
@@ -112,5 +112,16 @@ func getDummyRoutes(addr string) map[string]dummyResponse {
 			Method: http.MethodGet,
 			Body:   "{\"message\":\"http-error\"}",
 		},
+		"/api/35/job/test-job-long-succeeded/run": {
+			Code:   http.StatusOK,
+			Method: http.MethodPost,
+			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-long-succeeded\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-long-succeeded\"}", addr),
+		},
+		"/api/35/execution/test-job-execution-long-succeeded": {
+			Code:    http.StatusOK,
+			Method:  http.MethodGet,
+			Body:    "{\"status\":\"succeeded\"}",
+			Timeout: 2 * time.Second,
+		},
 	}
 }
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index f33044ce..ca60662d 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -142,6 +142,7 @@ Feature: get a instruction
             }
           ],
           "last_executed_on": 1596712203,
+          "created": 1596712203,
           "last_modified": 1596712203
         },
         {
@@ -204,6 +205,7 @@ Feature: get a instruction
             "unit": "s"
           },
           "last_executed_on": 1596712203,
+          "created": 1596712203,
           "last_modified": 1596712203
         }
       ],
@@ -386,6 +388,7 @@ Feature: get a instruction
         }
       ],
       "last_executed_on": 1596712203,
+      "created": 1596712203,
       "last_modified": 1596712203
     }
     """
diff --git a/tests/functional/features/api/cat/instructionexecution_cancel.feature b/tests/functional/features/api/cat/instructionexecution_cancel.feature
index 9e3d35f0..b5f932a3 100644
--- a/tests/functional/features/api/cat/instructionexecution_cancel.feature
+++ b/tests/functional/features/api/cat/instructionexecution_cancel.feature
@@ -159,10 +159,10 @@ Feature: cancel a instruction execution
     Then the response code should be 410
 
   Scenario: given unauth request should not allow access
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/cancel
+    When I do PUT /api/v4/cat/executions/notexist/cancel
     Then the response code should be 401
 
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/cancel
+    When I do PUT /api/v4/cat/executions/notexist/cancel
     Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_get.feature b/tests/functional/features/api/cat/instructionexecution_get.feature
index 5ccb7d1c..47857ad6 100644
--- a/tests/functional/features/api/cat/instructionexecution_get.feature
+++ b/tests/functional/features/api/cat/instructionexecution_get.feature
@@ -404,10 +404,10 @@ Feature: get running instruction
     Then the response code should be 404
 
   Scenario: given unauth request should not allow access
-    When I do GET /api/v4/cat/executions/test-instruction-execution-running
+    When I do GET /api/v4/cat/executions/notexist
     Then the response code should be 401
 
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
-    When I do GET /api/v4/cat/executions/test-instruction-execution-running
+    When I do GET /api/v4/cat/executions/notexist
     Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_next.feature b/tests/functional/features/api/cat/instructionexecution_next.feature
index 11851ef2..5b4feabb 100644
--- a/tests/functional/features/api/cat/instructionexecution_next.feature
+++ b/tests/functional/features/api/cat/instructionexecution_next.feature
@@ -188,10 +188,10 @@ Feature: move a instruction execution to next operation
     """
 
   Scenario: given unauth request should not allow access
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/next
+    When I do PUT /api/v4/cat/executions/notexist/next
     Then the response code should be 401
 
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/next
+    When I do PUT /api/v4/cat/executions/notexist/next
     Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_nextstep.feature b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
index ea49a52f..2bfe413b 100644
--- a/tests/functional/features/api/cat/instructionexecution_nextstep.feature
+++ b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
@@ -638,10 +638,10 @@ Feature: move a instruction execution to next step
     Then the response key "steps.1.operations.0.completed_at" should not be "0"
 
   Scenario: given unauth request should not allow access
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/next
+    When I do PUT /api/v4/cat/executions/notexist/next-step
     Then the response code should be 401
 
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/next
+    When I do PUT /api/v4/cat/executions/notexist/next-step
     Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_pause.feature b/tests/functional/features/api/cat/instructionexecution_pause.feature
index 67a67e29..43125ae8 100644
--- a/tests/functional/features/api/cat/instructionexecution_pause.feature
+++ b/tests/functional/features/api/cat/instructionexecution_pause.feature
@@ -290,10 +290,10 @@ Feature: pause a instruction execution
     """
 
   Scenario: given unauth request should not allow access
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/pause
+    When I do PUT /api/v4/cat/executions/notexist/pause
     Then the response code should be 401
 
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/pause
+    When I do PUT /api/v4/cat/executions/notexist/pause
     Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_previous.feature b/tests/functional/features/api/cat/instructionexecution_previous.feature
index c498cebd..dbbd8469 100644
--- a/tests/functional/features/api/cat/instructionexecution_previous.feature
+++ b/tests/functional/features/api/cat/instructionexecution_previous.feature
@@ -426,10 +426,10 @@ Feature: move a instruction execution to previous operation
     Then the response key "steps.1.operations.0.completed_at" should not be "0"
 
   Scenario: given unauth request should not allow access
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/previous
+    When I do PUT /api/v4/cat/executions/notexist/previous
     Then the response code should be 401
 
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/previous
+    When I do PUT /api/v4/cat/executions/notexist/previous
     Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_resume.feature b/tests/functional/features/api/cat/instructionexecution_resume.feature
index f6fd30b0..1b186c47 100644
--- a/tests/functional/features/api/cat/instructionexecution_resume.feature
+++ b/tests/functional/features/api/cat/instructionexecution_resume.feature
@@ -55,10 +55,10 @@ Feature: pause a instruction execution
     """
 
   Scenario: given unauth request should not allow access
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/resume
+    When I do PUT /api/v4/cat/executions/notexist/resume
     Then the response code should be 401
 
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
-    When I do PUT /api/v4/cat/executions/test-instruction-execution-running/resume
+    When I do PUT /api/v4/cat/executions/notexist/resume
     Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
new file mode 100644
index 00000000..09eb34b8
--- /dev/null
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -0,0 +1,262 @@
+Feature: get instruction statistics
+  I need to be able to get instruction statistics
+  Only admin should be able to get instruction statistics
+
+  Scenario: given get all request for all executions should return instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1615342850&to=1618280210
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-stats-get-1",
+          "alarm_states": {
+            "critical": {
+              "from": 1,
+              "to": 2
+            },
+            "major": {
+              "from": 2,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 1,
+          "avg_complete_time": 316,
+          "comments": [
+            {
+              "rating": 4.5,
+              "comment": "test-rating-to-stats-get-1-comment"
+            },
+            {
+              "rating": 2,
+              "comment": "test-rating-to-stats-get-2-comment"
+            }
+          ],
+          "execution_count": 3,
+          "last_executed_on": 1618280210,
+          "last_modified": 1596712203,
+          "created": 1596712203,
+          "name": "test-instruction-to-stats-get-1-name",
+          "rating": 3.2,
+          "type": 0
+        },
+        {
+          "_id": "test-instruction-to-stats-get-2",
+          "alarm_states": {
+            "critical": {
+              "from": 1,
+              "to": 2
+            },
+            "major": {
+              "from": 2,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 1,
+          "avg_complete_time": 316,
+          "comments": [],
+          "execution_count": 3,
+          "last_executed_on": 1618280210,
+          "last_modified": 1596712203,
+          "created": 1596712203,
+          "name": "test-instruction-to-stats-get-2-name",
+          "rating": 0,
+          "type": 1
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: given get all request for one execution should return instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1618279610&to=1618280210
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-stats-get-1",
+          "alarm_states": {
+            "critical": {
+              "from": 1,
+              "to": 1
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 400,
+          "comments": [
+            {
+              "rating": 4.5,
+              "comment": "test-rating-to-stats-get-1-comment"
+            },
+            {
+              "rating": 2,
+              "comment": "test-rating-to-stats-get-2-comment"
+            }
+          ],
+          "execution_count": 1,
+          "last_executed_on": 1618280210,
+          "last_modified": 1596712203,
+          "created": 1596712203,
+          "name": "test-instruction-to-stats-get-1-name",
+          "rating": 3.2,
+          "type": 0
+        },
+        {
+          "_id": "test-instruction-to-stats-get-2",
+          "alarm_states": {
+            "critical": {
+              "from": 1,
+              "to": 1
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 400,
+          "comments": [],
+          "execution_count": 1,
+          "last_executed_on": 1618280210,
+          "last_modified": 1596712203,
+          "created": 1596712203,
+          "name": "test-instruction-to-stats-get-2-name",
+          "rating": 0,
+          "type": 1
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: given sort all request should return sorted instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats?sort_by=name&sort=desc&search=test-instruction-to-stats-get&from=1618279610&to=1618280210
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-stats-get-2"
+        },
+        {
+          "_id": "test-instruction-to-stats-get-1"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: given get request should return instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-get-1
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "_id": "test-instruction-to-stats-get-1",
+      "alarm_states": {
+        "critical": {
+          "from": 1,
+          "to": 2
+        },
+        "major": {
+          "from": 2,
+          "to": 0
+        },
+        "minor": {
+          "from": 0,
+          "to": 0
+        }
+      },
+      "ok_alarm_states": 1,
+      "avg_complete_time": 316,
+      "comments": [
+        {
+          "rating": 4.5,
+          "comment": "test-rating-to-stats-get-1-comment"
+        },
+        {
+          "rating": 2,
+          "comment": "test-rating-to-stats-get-2-comment"
+        }
+      ],
+      "execution_count": 3,
+      "last_executed_on": 1618280210,
+      "last_modified": 1596712203,
+      "created": 1596712203,
+      "name": "test-instruction-to-stats-get-1-name",
+      "rating": 3.2,
+      "type": 0
+    }
+    """
+
+  Scenario: given get all request and no auth user should not allow access
+    When I do GET /api/v4/cat/instruction-stats
+    Then the response code should be 401
+
+  Scenario: given get all request and auth user by api key without permissions should not allow access
+    When I am noperms
+    When I do GET /api/v4/cat/instruction-stats
+    Then the response code should be 403
+
+  Scenario: given get request and no auth user should not allow access
+    When I do GET /api/v4/cat/instruction-stats/notexist
+    Then the response code should be 401
+
+  Scenario: given get request and auth user by api key without permissions should not allow access
+    When I am noperms
+    When I do GET /api/v4/cat/instruction-stats/notexist
+    Then the response code should be 403
+
+  Scenario: given get request with not exist id should return not found error
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/notexist
+    Then the response code should be 404
+    Then the response body should be:
+    """
+    {
+      "error": "Not found"
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
new file mode 100644
index 00000000..8d1d4075
--- /dev/null
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -0,0 +1,206 @@
+Feature: update an instruction statistics
+  I need to be able to update an instruction statistics
+
+  Scenario: given manual instruction execution should update statistics
+    When I am admin
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "type": 0,
+      "name": "test-instruction-to-stats-update-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-stats-update-1"
+        }
+      ],
+      "description": "test-instruction-to-stats-update-1-description",
+      "author": "test-instruction-to-stats-update-1-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 3,
+        "unit": "s"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-stats-update-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-stats-update-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-stats-update-1-step-1-operation-1-description",
+              "jobs": []
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-stats-update-1-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-stats-update-1",
+      "connector_name": "test-connector-name-to-stats-update-1",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-stats-update-1",
+      "resource": "test-resource-to-stats-update-1",
+      "state": 1,
+      "output": "test-output-to-stats-update-1"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-1
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarmID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I save response executionID={{ .lastResponse._id }}
+    When I wait the end of event processing
+    When I wait 2s
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    Then the response code should be 200
+    When I save response executionTime={{ .lastResponse.completed_at }}
+    When I wait the end of event processing
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-stats-update-1",
+      "connector_name": "test-connector-name-to-stats-update-1",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-stats-update-1",
+      "resource": "test-resource-to-stats-update-1",
+      "state": 0,
+      "output": "test-output-to-stats-update-1"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 5s
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "{{ .instructionID }}",
+      "alarm_states": {
+        "critical": {
+          "from": 0,
+          "to": 0
+        },
+        "major": {
+          "from": 0,
+          "to": 0
+        },
+        "minor": {
+          "from": 1,
+          "to": 0
+        }
+      },
+      "ok_alarm_states": 1,
+      "comments": [],
+      "execution_count": 1,
+      "last_executed_on": {{ .executionTime }},
+      "name": "test-instruction-to-stats-update-1-name",
+      "rating": 0,
+      "type": 0
+    }
+    """
+
+  Scenario: given auto instruction execution should update statistics
+    When I am admin
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "type": 1,
+      "name": "test-instruction-to-stats-update-2-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-stats-update-2"
+        }
+      ],
+      "description": "test-instruction-to-stats-update-2-description",
+      "author": "test-instruction-to-stats-update-2-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 3,
+        "unit": "s"
+      },
+      "jobs": [
+        {
+          "job": "test-job-to-run-auto-instruction-5"
+        }
+      ],
+      "priority": 20
+    }
+    """
+    Then the response code should be 201
+    When I save response instructionID={{ .lastResponse._id }}
+    When I wait the next periodical process
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-stats-update-2",
+      "connector_name": "test-connector-name-to-stats-update-2",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-stats-update-2",
+      "resource": "test-resource-to-stats-update-2",
+      "state": 1,
+      "output": "test-output-to-stats-update-2"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 2s
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-stats-update-2",
+      "connector_name": "test-connector-name-to-stats-update-2",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-stats-update-2",
+      "resource": "test-resource-to-stats-update-2",
+      "state": 0,
+      "output": "test-output-to-stats-update-2"
+    }
+    """
+    When I wait the end of event processing
+    When I wait 5s
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "{{ .instructionID }}",
+      "alarm_states": {
+        "critical": {
+          "from": 0,
+          "to": 0
+        },
+        "major": {
+          "from": 0,
+          "to": 0
+        },
+        "minor": {
+          "from": 1,
+          "to": 0
+        }
+      },
+      "ok_alarm_states": 1,
+      "comments": [],
+      "execution_count": 1,
+      "name": "test-instruction-to-stats-update-2-name",
+      "rating": 0,
+      "type": 1
+    }
+    """
-- 
2.25.1


From af6ce929f840b96b4cba98fd9c09d73f941c535c Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 14 Apr 2021 14:57:20 +0700
Subject: [PATCH 12/66] Feature #3048 : Add instruction and instruction
 statistics migrations

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../000_migrate_instructions.js               |  34 +++++
 .../001_migrate_instruction_executions.js     | 125 ++++++++++++++++++
 2 files changed, 159 insertions(+)
 create mode 100644 database/migrations/remediationnextstep/000_migrate_instructions.js
 create mode 100644 database/migrations/remediationnextstep/001_migrate_instruction_executions.js

diff --git a/database/migrations/remediationnextstep/000_migrate_instructions.js b/database/migrations/remediationnextstep/000_migrate_instructions.js
new file mode 100644
index 00000000..21dda059
--- /dev/null
+++ b/database/migrations/remediationnextstep/000_migrate_instructions.js
@@ -0,0 +1,34 @@
+(function () {
+    db.instruction.find().forEach(function (doc) {
+        var set = {};
+        var unset = {};
+
+        if (!doc.type) {
+            set["type"] = 0;
+        }
+        if (!doc.timeout_after_execution) {
+            set["timeout_after_execution"] = {
+                seconds: 60,
+                unit: "m"
+            };
+        }
+        if (doc.avg_complete_time) {
+            unset["avg_complete_time"] = "";
+        }
+        if (doc.last_executed_by) {
+            unset["last_executed_by"] = "";
+        }
+
+        var update = {};
+        if (Object.keys(set).length > 0) {
+            update["$set"] = set;
+        }
+        if (Object.keys(unset).length > 0) {
+            update["$unset"] = unset;
+        }
+
+        if (Object.keys(update).length > 0) {
+            db.instruction.updateOne({_id: doc._id}, update);
+        }
+    });
+})();
diff --git a/database/migrations/remediationnextstep/001_migrate_instruction_executions.js b/database/migrations/remediationnextstep/001_migrate_instruction_executions.js
new file mode 100644
index 00000000..76ba2c81
--- /dev/null
+++ b/database/migrations/remediationnextstep/001_migrate_instruction_executions.js
@@ -0,0 +1,125 @@
+(function () {
+    var pipeline = [
+        {
+            $lookup: {
+                from: "periodical_alarm",
+                localField: "alarm",
+                foreignField: "_id",
+                as: "alarm",
+            }
+        },
+        {$unwind: {path: "$alarm", preserveNullAndEmptyArrays: true}},
+    ];
+    var cursor = db.instruction_execution.aggregate(pipeline);
+
+    while (cursor.hasNext()) {
+        var doc = cursor.next();
+        var set = {};
+
+        if (!doc.started_at) {
+            if (doc.step_history && doc.step_history.length > 0) {
+                var firstStep = doc.step_history[0];
+                if (firstStep.operation_history && firstStep.operation_history.length > 0) {
+                    var firstOperation = firstStep.operation_history[0];
+                    if (firstOperation.started_at) {
+                        doc.started_at = firstOperation.started_at;
+                        set["started_at"] = doc.started_at;
+                    }
+                }
+            }
+        }
+
+        if (!doc.completed_at) {
+            if (doc.step_history && doc.step_history.length > 0) {
+                var lastStep = doc.step_history[doc.step_history.length - 1];
+                if (lastStep.operation_history && lastStep.operation_history.length > 0) {
+                    var lastOperation = lastStep.operation_history[lastStep.operation_history.length - 1];
+                    if (lastOperation.completed_at) {
+                        doc.completed_at = lastOperation.completed_at;
+                        set["completed_at"] = doc.completed_at;
+                    }
+                }
+            }
+        }
+
+        if (!doc.complete_time && doc.status === 2) {
+            var completeTime = 0;
+            if (doc.step_history) {
+                doc.step_history.forEach(function (step) {
+                    if (step.operation_history) {
+                        step.operation_history.forEach(function (operation) {
+                            if (operation.completed_at && operation.started_at) {
+                                completeTime += operation.completed_at - operation.started_at;
+                            }
+                        });
+                    }
+                });
+
+                if (completeTime > 0) {
+                    set["complete_time"] = completeTime;
+                }
+            }
+        }
+
+        if (!doc.alarm_state && doc.alarm && doc.alarm.v.steps) {
+            var startIndex = -1;
+            doc.alarm.v.steps.forEach(function (step, i) {
+                if (startIndex >= 0) {
+                    return;
+                }
+                if (step._t === "instructionstart" && step.t >= doc.started_at && step.t <= doc.completed_at) {
+                    startIndex = i;
+                }
+            });
+            var state = -1;
+            if (startIndex >= 0) {
+                doc.alarm.v.steps.forEach(function (step, i) {
+                    if (i >= startIndex) {
+                        return;
+                    }
+                    if (step._t === "statedec" || step._t === "stateinc") {
+                        state = step.val;
+                    }
+                });
+            }
+
+            if (state >= 0) {
+                set["alarm_state"] = state;
+
+                if (doc.status === 2) {
+                    var completeIndex = -1;
+                    var t = -1;
+                    doc.alarm.v.steps.forEach(function (step, i) {
+                        if (completeIndex >= 0 || i <= startIndex) {
+                            return;
+                        }
+                        if (step._t === "instructioncomplete") {
+                            completeIndex = i;
+                            t = step.t + 60;
+                        }
+                    });
+                    var resState = -1;
+                    if (completeIndex >= 0) {
+                        doc.alarm.v.steps.forEach(function (step, i) {
+                            if (i <= completeIndex || resState >= 0) {
+                                return;
+                            }
+                            if (step.t <= t && (step._t === "statedec" || step._t === "stateinc")) {
+                                resState = step.val;
+                            }
+                        });
+                    }
+                    if (resState < 0) {
+                        resState = state;
+                    }
+
+                    set["result_alarm_state"] = resState;
+                }
+            }
+        }
+
+        if (Object.keys(set).length > 0) {
+            db.instruction_execution.updateOne({_id: doc._id}, {"$set": set});
+        }
+    }
+})();
-- 
2.25.1


From c9e8b0eadd836ce7aa69d0a6d8cabf0c44cc0d7d Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 15 Apr 2021 11:56:50 +0700
Subject: [PATCH 13/66] Feature #3043 : Add get instruction comments API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction.json                     | 184 ++++++++++++++++++
 fixtures/instruction_rating.json              |  14 ++
 .../api/cat/instructioncomments_get.feature   |  68 +++++++
 .../cat/instructionexecution_nextstep.feature |  64 ------
 .../api/cat/instructionstats_get.feature      |  83 +++++---
 .../instructionexecution_stats.feature        |  29 ++-
 6 files changed, 342 insertions(+), 100 deletions(-)
 create mode 100644 tests/functional/features/api/cat/instructioncomments_get.feature

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 892438ac..313d29af 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -1623,5 +1623,189 @@
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
     "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-get-3",
+    "type": 1,
+    "name": "test-instruction-to-stats-get-3-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-get-3-description",
+    "author": "test-instruction-to-stats-get-3-author",
+    "enabled": true,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1",
+        "stop_on_fail": true
+      },
+      {
+        "job": "test-job-to-instruction-edit-2"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 13,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-comments-get-1",
+    "type": 0,
+    "name": "test-instruction-to-comments-get-1-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-comments-get-1-description",
+    "author": "test-instruction-to-comments-get-1-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-comments-get-1-step-1",
+        "name": "test-instruction-to-comments-get-1-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-comments-get-1-step-1-operation-1",
+            "name": "test-instruction-to-comments-get-1-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-1-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-comments-get-1-step-1-operation-2",
+            "name": "test-instruction-to-comments-get-1-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-1-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-comments-get-1-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-comments-get-1-step-2",
+        "name": "test-instruction-to-comments-get-1-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-comments-get-1-step-2-operation-1",
+            "name": "test-instruction-to-comments-get-1-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-1-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-comments-get-1-step-2-operation-2",
+            "name": "test-instruction-to-comments-get-1-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-1-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-comments-get-1-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-comments-get-2",
+    "type": 0,
+    "name": "test-instruction-to-comments-get-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-comments-get-2-description",
+    "author": "test-instruction-to-comments-get-2-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-comments-get-2-step-1",
+        "name": "test-instruction-to-comments-get-2-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-comments-get-2-step-1-operation-1",
+            "name": "test-instruction-to-comments-get-2-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-2-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-comments-get-2-step-1-operation-2",
+            "name": "test-instruction-to-comments-get-2-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-2-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-comments-get-2-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-comments-get-2-step-2",
+        "name": "test-instruction-to-comments-get-2-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-comments-get-2-step-2-operation-1",
+            "name": "test-instruction-to-comments-get-2-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-2-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-comments-get-2-step-2-operation-2",
+            "name": "test-instruction-to-comments-get-2-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-comments-get-2-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-comments-get-2-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_modified": 1596712203,
+    "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_rating.json b/fixtures/instruction_rating.json
index aebeaad8..e1336b6d 100644
--- a/fixtures/instruction_rating.json
+++ b/fixtures/instruction_rating.json
@@ -12,5 +12,19 @@
     "user": "test-rating-to-stats-get-2-user",
     "rating": 2,
     "comment": "test-rating-to-stats-get-2-comment"
+  },
+  {
+    "_id": "test-rating-to-comments-get-1",
+    "instruction": "test-instruction-to-comments-get-1",
+    "user": "test-rating-to-comments-get-1-user",
+    "rating": 4.5,
+    "comment": "test-rating-to-comments-get-1-comment"
+  },
+  {
+    "_id": "test-rating-to-comments-get-2",
+    "instruction": "test-instruction-to-comments-get-1",
+    "user": "test-rating-to-comments-get-2-user",
+    "rating": 2,
+    "comment": "test-rating-to-comments-get-2-comment"
   }
 ]
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructioncomments_get.feature b/tests/functional/features/api/cat/instructioncomments_get.feature
new file mode 100644
index 00000000..e6196f01
--- /dev/null
+++ b/tests/functional/features/api/cat/instructioncomments_get.feature
@@ -0,0 +1,68 @@
+Feature: get instruction comments
+  I need to be able to get instruction comments
+  Only admin should be able to get instruction comments
+  
+  Scenario: given get request should return instruction comments
+    When I am admin
+    When I do GET /api/v4/cat/instruction-comments/test-instruction-to-comments-get-1
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-rating-to-comments-get-1",
+          "comment": "test-rating-to-comments-get-1-comment",
+          "rating": 4.5
+        },
+        {
+          "_id": "test-rating-to-comments-get-2",
+          "comment": "test-rating-to-comments-get-2-comment",
+          "rating": 2
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: given get request should return empty instruction comments
+    When I am admin
+    When I do GET /api/v4/cat/instruction-comments/test-instruction-to-comments-get-2
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 0
+      }
+    }
+    """
+
+  Scenario: given get request and no auth user should not allow access
+    When I do GET /api/v4/cat/instruction-comments/notexist
+    Then the response code should be 401
+
+  Scenario: given get request and auth user by api key without permissions should not allow access
+    When I am noperms
+    When I do GET /api/v4/cat/instruction-comments/notexist
+    Then the response code should be 403
+
+  Scenario: given get request with not exist id should return not found error
+    When I am admin
+    When I do GET /api/v4/cat/instruction-comments/notexist
+    Then the response code should be 404
+    Then the response body should be:
+    """
+    {
+      "error": "Not found"
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_nextstep.feature b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
index 2bfe413b..b3cb3862 100644
--- a/tests/functional/features/api/cat/instructionexecution_nextstep.feature
+++ b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
@@ -329,70 +329,6 @@ Feature: move a instruction execution to next step
     Then the response key "steps.1.operations.0.started_at" should not be "0"
     Then the response key "steps.1.operations.0.completed_at" should not be "0"
 
-  Scenario: given running instruction should complete execution and update instruction stats
-    When I am admin
-    When I do POST /api/v4/cat/instructions:
-    """
-    {
-      "type": 0,
-      "name": "test-instruction-execution-next-step-4-name",
-      "alarm_patterns": [
-        {
-          "_id": "test-instruction-execution-next-step-4"
-        }
-      ],
-      "description": "test-instruction-execution-next-step-4-description",
-      "enabled": true,
-      "timeout_after_execution": {
-        "seconds": 10,
-        "unit": "s"
-      },
-      "steps": [
-        {
-          "name": "test-instruction-execution-next-step-4-step-1",
-          "operations": [
-            {
-              "name": "test-instruction-execution-next-step-4-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-execution-next-step-4-step-1-operation-1-description"
-            },
-            {
-              "name": "test-instruction-execution-next-step-4-step-1-operation-2",
-              "time_to_complete": {"seconds": 3, "unit":"s"},
-              "description": "test-instruction-execution-next-step-4-step-1-operation-2-description"
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-execution-next-step-4-step-1-endpoint"
-        }
-      ]
-    }
-    """
-    Then the response code should be 201
-    When I save response instructionID={{ .lastResponse._id }}
-    When I do POST /api/v4/cat/executions:
-    """
-    {
-      "alarm": "test-instruction-execution-next-step-4",
-      "instruction": "{{ .lastResponse._id }}"
-    }
-    """
-    Then the response code should be 200
-    When I wait 1s
-    When I do PUT /api/v4/cat/executions/{{ .lastResponse._id }}/next
-    Then the response code should be 200
-    When I do PUT /api/v4/cat/executions/{{ .lastResponse._id }}/next-step
-    Then the response code should be 200
-    When I do GET /api/v4/cat/instructions/{{ .instructionID }}
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "month_executions": 1
-    }
-    """
-    Then the response key "last_executed_on" should not be "0"
-
   Scenario: given running instruction should fail execution
     When I am admin
     When I do POST /api/v4/cat/instructions:
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 09eb34b8..2802f650 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -28,16 +28,6 @@ Feature: get instruction statistics
           },
           "ok_alarm_states": 1,
           "avg_complete_time": 316,
-          "comments": [
-            {
-              "rating": 4.5,
-              "comment": "test-rating-to-stats-get-1-comment"
-            },
-            {
-              "rating": 2,
-              "comment": "test-rating-to-stats-get-2-comment"
-            }
-          ],
           "execution_count": 3,
           "last_executed_on": 1618280210,
           "last_modified": 1596712203,
@@ -64,7 +54,6 @@ Feature: get instruction statistics
           },
           "ok_alarm_states": 1,
           "avg_complete_time": 316,
-          "comments": [],
           "execution_count": 3,
           "last_executed_on": 1618280210,
           "last_modified": 1596712203,
@@ -109,16 +98,6 @@ Feature: get instruction statistics
           },
           "ok_alarm_states": 0,
           "avg_complete_time": 400,
-          "comments": [
-            {
-              "rating": 4.5,
-              "comment": "test-rating-to-stats-get-1-comment"
-            },
-            {
-              "rating": 2,
-              "comment": "test-rating-to-stats-get-2-comment"
-            }
-          ],
           "execution_count": 1,
           "last_executed_on": 1618280210,
           "last_modified": 1596712203,
@@ -145,7 +124,6 @@ Feature: get instruction statistics
           },
           "ok_alarm_states": 0,
           "avg_complete_time": 400,
-          "comments": [],
           "execution_count": 1,
           "last_executed_on": 1618280210,
           "last_modified": 1596712203,
@@ -164,6 +142,23 @@ Feature: get instruction statistics
     }
     """
 
+  Scenario: given get all request should return nothing
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1618279500&to=1618279600
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 0
+      }
+    }
+    """
+
   Scenario: given sort all request should return sorted instruction stats
     When I am admin
     When I do GET /api/v4/cat/instruction-stats?sort_by=name&sort=desc&search=test-instruction-to-stats-get&from=1618279610&to=1618280210
@@ -212,16 +207,6 @@ Feature: get instruction statistics
       },
       "ok_alarm_states": 1,
       "avg_complete_time": 316,
-      "comments": [
-        {
-          "rating": 4.5,
-          "comment": "test-rating-to-stats-get-1-comment"
-        },
-        {
-          "rating": 2,
-          "comment": "test-rating-to-stats-get-2-comment"
-        }
-      ],
       "execution_count": 3,
       "last_executed_on": 1618280210,
       "last_modified": 1596712203,
@@ -232,6 +217,40 @@ Feature: get instruction statistics
     }
     """
 
+  Scenario: given get request should return empty instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-get-3
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "_id": "test-instruction-to-stats-get-3",
+      "alarm_states": {
+        "critical": {
+          "from": 0,
+          "to": 0
+        },
+        "major": {
+          "from": 0,
+          "to": 0
+        },
+        "minor": {
+          "from": 0,
+          "to": 0
+        }
+      },
+      "ok_alarm_states": 0,
+      "avg_complete_time": 0,
+      "execution_count": 0,
+      "last_executed_on": null,
+      "last_modified": 1596712203,
+      "created": 1596712203,
+      "name": "test-instruction-to-stats-get-3-name",
+      "rating": 0,
+      "type": 1
+    }
+    """
+
   Scenario: given get all request and no auth user should not allow access
     When I do GET /api/v4/cat/instruction-stats
     Then the response code should be 401
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
index 8d1d4075..317b689f 100644
--- a/tests/functional/features/engines/remediation/instructionexecution_stats.feature
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -85,7 +85,7 @@ Feature: update an instruction statistics
     }
     """
     When I wait the end of event processing
-    When I wait 5s
+    When I wait 7s
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}
     Then the response code should be 200
     Then the response body should contain:
@@ -107,7 +107,6 @@ Feature: update an instruction statistics
         }
       },
       "ok_alarm_states": 1,
-      "comments": [],
       "execution_count": 1,
       "last_executed_on": {{ .executionTime }},
       "name": "test-instruction-to-stats-update-1-name",
@@ -115,6 +114,17 @@ Feature: update an instruction statistics
       "type": 0
     }
     """
+    Then the response key "avg_complete_time" should not be "0"
+    When I do GET /api/v4/cat/instructions/{{ .instructionID }}
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "{{ .instructionID }}",
+      "month_executions": 1,
+      "last_executed_on": {{ .executionTime }}
+    }
+    """
 
   Scenario: given auto instruction execution should update statistics
     When I am admin
@@ -175,7 +185,7 @@ Feature: update an instruction statistics
     }
     """
     When I wait the end of event processing
-    When I wait 5s
+    When I wait 7s
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}
     Then the response code should be 200
     Then the response body should contain:
@@ -197,10 +207,21 @@ Feature: update an instruction statistics
         }
       },
       "ok_alarm_states": 1,
-      "comments": [],
       "execution_count": 1,
       "name": "test-instruction-to-stats-update-2-name",
       "rating": 0,
       "type": 1
     }
     """
+    Then the response key "avg_complete_time" should not be "0"
+    Then the response key "last_executed_on" should not be "0"
+    When I do GET /api/v4/cat/instructions/{{ .instructionID }}
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "{{ .instructionID }}",
+      "month_executions": 1
+    }
+    """
+    Then the response key "last_executed_on" should not be "0"
-- 
2.25.1


From a8fb34eae25da651f1ac803750920b8d8a021be0 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 20 Apr 2021 11:20:23 +0700
Subject: [PATCH 14/66] Feature #3044 : Add instruction statistics by
 modification date API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../000_migrate_instructions.js               |   7 +
 .../001_migrate_instruction_executions.js     |  17 +
 fixtures/auto_instruction_execution.json      |  88 +++++
 fixtures/instruction.json                     | 339 +++++++++++++++++-
 fixtures/instruction_execution.json           |  94 +++++
 .../api/cat/instructionstats_changes.feature  | 217 +++++++++++
 .../api/cat/instructionstats_get.feature      |  88 -----
 .../api/cat/instructionstats_summary.feature  | 122 +++++++
 .../instructionexecution_stats.feature        |  78 +++-
 9 files changed, 949 insertions(+), 101 deletions(-)
 create mode 100644 tests/functional/features/api/cat/instructionstats_changes.feature
 create mode 100644 tests/functional/features/api/cat/instructionstats_summary.feature

diff --git a/database/migrations/remediationnextstep/000_migrate_instructions.js b/database/migrations/remediationnextstep/000_migrate_instructions.js
index 21dda059..ddcb2641 100644
--- a/database/migrations/remediationnextstep/000_migrate_instructions.js
+++ b/database/migrations/remediationnextstep/000_migrate_instructions.js
@@ -12,6 +12,13 @@
                 unit: "m"
             };
         }
+        if (!doc.mod_history) {
+            if (doc.last_modified === doc.created) {
+                set["mod_history"] = [doc.last_modified];
+            } else {
+                set["mod_history"] = [doc.created, doc.last_modified];
+            }
+        }
         if (doc.avg_complete_time) {
             unset["avg_complete_time"] = "";
         }
diff --git a/database/migrations/remediationnextstep/001_migrate_instruction_executions.js b/database/migrations/remediationnextstep/001_migrate_instruction_executions.js
index 76ba2c81..5a374d06 100644
--- a/database/migrations/remediationnextstep/001_migrate_instruction_executions.js
+++ b/database/migrations/remediationnextstep/001_migrate_instruction_executions.js
@@ -9,6 +9,15 @@
             }
         },
         {$unwind: {path: "$alarm", preserveNullAndEmptyArrays: true}},
+        {
+            $lookup: {
+                from: "instruction",
+                localField: "instruction",
+                foreignField: "_id",
+                as: "instruction",
+            }
+        },
+        {$unwind: {path: "$instruction", preserveNullAndEmptyArrays: true}},
     ];
     var cursor = db.instruction_execution.aggregate(pipeline);
 
@@ -118,6 +127,14 @@
             }
         }
 
+        if (!doc.instruction_modified_on && doc.instruction) {
+            if (doc.started_at < doc.instruction.last_modified) {
+                set["instruction_modified_on"] = doc.instruction.created;
+            } else {
+                set["instruction_modified_on"] = doc.instruction.last_modified;
+            }
+        }
+
         if (Object.keys(set).length > 0) {
             db.instruction_execution.updateOne({_id: doc._id}, {"$set": set});
         }
diff --git a/fixtures/auto_instruction_execution.json b/fixtures/auto_instruction_execution.json
index 480bf5b0..4523a49d 100644
--- a/fixtures/auto_instruction_execution.json
+++ b/fixtures/auto_instruction_execution.json
@@ -1,6 +1,7 @@
 [
   {
     "_id": "test-auto-instruction-execution-to-get-stats-1",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 2,
     "started_at": 1618279610,
@@ -11,6 +12,7 @@
   },
   {
     "_id": "test-auto-instruction-execution-to-get-stats-2",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 2,
     "started_at": 1618021010,
@@ -21,6 +23,7 @@
   },
   {
     "_id": "test-auto-instruction-execution-to-get-stats-3",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 2,
     "started_at": 1615342850,
@@ -31,10 +34,95 @@
   },
   {
     "_id": "test-auto-instruction-execution-to-get-stats-4",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 4,
     "started_at": 1618279610,
     "completed_at": 1618280210,
     "alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-3",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-2",
+    "instruction_modified_on": 1596712103,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-3",
+    "instruction_modified_on": 1596712103,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 313d29af..b3119fb9 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -73,6 +73,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -103,6 +104,7 @@
     "priority": 0,
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -143,6 +145,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000001
   },
   {
@@ -183,6 +186,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000002
   },
   {
@@ -223,6 +227,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000001
   },
   {
@@ -263,6 +268,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000001
   },
   {
@@ -305,6 +311,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000000
   },
   {
@@ -331,6 +338,7 @@
     "priority": 1,
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000000
   },
   {
@@ -399,6 +407,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000003
   },
   {
@@ -469,6 +478,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000004
   },
   {
@@ -537,6 +547,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000008
   },
   {
@@ -604,7 +615,9 @@
       "unit": "s"
     },
     "last_executed_on": 1596712203,
-    "last_modified": 1596712203
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
   },
   {
     "_id": "test-instruction-execution-resume-1",
@@ -672,6 +685,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000011
   },
   {
@@ -712,6 +726,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000012
   },
   {
@@ -752,6 +767,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000013
   },
   {
@@ -792,6 +808,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000014
   },
   {
@@ -832,6 +849,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000015
   },
   {
@@ -872,6 +890,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000016
   },
   {
@@ -912,6 +931,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000017
   },
   {
@@ -952,6 +972,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000018
   },
   {
@@ -992,6 +1013,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000019
   },
   {
@@ -1032,6 +1054,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000019
   },
   {
@@ -1074,6 +1097,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000019
   },
   {
@@ -1116,6 +1140,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000019
   },
   {
@@ -1165,6 +1190,7 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1000000019
   },
   {
@@ -1189,7 +1215,10 @@
     "active_on_pbh": [
       "pbh-type-for-instruction-with-pbehavior-1",
       "pbh-type-for-instruction-with-pbehavior-2"
-    ]
+    ],
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
   },
   {
     "_id": "test-instruction-with-pbh-all-active",
@@ -1209,7 +1238,10 @@
     "timeout_after_execution": {
       "seconds": 2,
       "unit": "s"
-    }
+    },
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
   },
   {
     "_id": "test-instruction-with-pbh-with-some-disabled",
@@ -1233,7 +1265,10 @@
     "disabled_on_pbh": [
       "pbh-type-for-instruction-with-pbehavior-1",
       "pbh-type-for-instruction-with-pbehavior-2"
-    ]
+    ],
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
   },
   {
     "_id": "test-instruction-with-pbh-to-edit",
@@ -1257,7 +1292,10 @@
     "active_on_pbh": [
       "test1",
       "test2"
-    ]
+    ],
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
   },
   {
     "_id": "test-instruction-to-run-auto-instruction-1-1",
@@ -1286,6 +1324,8 @@
     "priority": 2,
     "author": "test-instruction-to-run-auto-instruction-1-1-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1311,6 +1351,8 @@
     "priority": 3,
     "author": "test-instruction-to-run-auto-instruction-1-2-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1336,6 +1378,8 @@
     "priority": 4,
     "author": "test-instruction-to-run-auto-instruction-2-1-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1361,6 +1405,8 @@
     "priority": 5,
     "author": "test-instruction-to-run-auto-instruction-2-2-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1386,6 +1432,8 @@
     "priority": 6,
     "author": "test-instruction-to-run-auto-instruction-3-1-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1411,6 +1459,8 @@
     "priority": 7,
     "author": "test-instruction-to-run-auto-instruction-3-2-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1439,6 +1489,8 @@
     "priority": 8,
     "author": "test-instruction-to-run-auto-instruction-4-1-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1464,6 +1516,8 @@
     "priority": 9,
     "author": "test-instruction-to-run-auto-instruction-4-2-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1489,6 +1543,8 @@
     "priority": 10,
     "author": "test-instruction-to-run-auto-instruction-4-3-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1514,6 +1570,8 @@
     "priority": 11,
     "author": "test-instruction-to-run-auto-instruction-5-author",
     "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1592,6 +1650,7 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1622,19 +1681,278 @@
     "priority": 12,
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-summary-get-1",
+    "type": 0,
+    "name": "test-instruction-to-stats-summary-get-1-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-summary-get-1-description",
+    "author": "test-instruction-to-stats-summary-get-1-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-summary-get-1-step-1",
+        "name": "test-instruction-to-stats-summary-get-1-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-summary-get-1-step-1-operation-1",
+            "name": "test-instruction-to-stats-summary-get-1-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-summary-get-1-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-summary-get-1-step-1-operation-2",
+            "name": "test-instruction-to-stats-summary-get-1-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-summary-get-1-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-summary-get-1-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-summary-get-1-step-2",
+        "name": "test-instruction-to-stats-summary-get-1-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-summary-get-1-step-2-operation-1",
+            "name": "test-instruction-to-stats-summary-get-1-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-summary-get-1-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-summary-get-1-step-2-operation-2",
+            "name": "test-instruction-to-stats-summary-get-1-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-summary-get-1-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-summary-get-1-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-summary-get-2",
+    "type": 1,
+    "name": "test-instruction-to-stats-summary-get-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-summary-get-2-description",
+    "author": "test-instruction-to-stats-summary-get-2-author",
+    "enabled": true,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1",
+        "stop_on_fail": true
+      },
+      {
+        "job": "test-job-to-instruction-edit-2"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 12,
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-summary-get-3",
+    "type": 1,
+    "name": "test-instruction-to-stats-summary-get-3-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-summary-get-3-description",
+    "author": "test-instruction-to-stats-summary-get-3-author",
+    "enabled": true,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1",
+        "stop_on_fail": true
+      },
+      {
+        "job": "test-job-to-instruction-edit-2"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 13,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-changes-get-1",
+    "type": 0,
+    "name": "test-instruction-to-stats-changes-get-1-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-changes-get-1-description",
+    "author": "test-instruction-to-stats-changes-get-1-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-changes-get-1-step-1",
+        "name": "test-instruction-to-stats-changes-get-1-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-changes-get-1-step-1-operation-1",
+            "name": "test-instruction-to-stats-changes-get-1-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-changes-get-1-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-changes-get-1-step-1-operation-2",
+            "name": "test-instruction-to-stats-changes-get-1-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-changes-get-1-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-changes-get-1-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-changes-get-1-step-2",
+        "name": "test-instruction-to-stats-changes-get-1-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-changes-get-1-step-2-operation-1",
+            "name": "test-instruction-to-stats-changes-get-1-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-changes-get-1-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-changes-get-1-step-2-operation-2",
+            "name": "test-instruction-to-stats-changes-get-1-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-changes-get-1-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-changes-get-1-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "mod_history": [
+      1596712003,
+      1596712103,
+      1596712203
+    ],
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-changes-get-2",
+    "type": 1,
+    "name": "test-instruction-to-stats-changes-get-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-changes-get-2-description",
+    "author": "test-instruction-to-stats-changes-get-2-author",
+    "enabled": true,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1",
+        "stop_on_fail": true
+      },
+      {
+        "job": "test-job-to-instruction-edit-2"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 12,
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "mod_history": [
+      1596712003,
+      1596712103,
+      1596712203
+    ],
     "created": 1596712203
   },
   {
-    "_id": "test-instruction-to-stats-get-3",
+    "_id": "test-instruction-to-stats-changes-get-3",
     "type": 1,
-    "name": "test-instruction-to-stats-get-3-name",
+    "name": "test-instruction-to-stats-changes-get-3-name",
     "entity_patterns": [
       {
         "name": "test filter"
       }
     ],
-    "description": "test-instruction-to-stats-get-3-description",
-    "author": "test-instruction-to-stats-get-3-author",
+    "description": "test-instruction-to-stats-changes-get-3-description",
+    "author": "test-instruction-to-stats-changes-get-3-author",
     "enabled": true,
     "jobs": [
       {
@@ -1651,6 +1969,7 @@
     },
     "priority": 13,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1729,6 +2048,7 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   },
   {
@@ -1806,6 +2126,7 @@
       "unit": "s"
     },
     "last_modified": 1596712203,
+    "mod_history": [1596712203],
     "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index e545cca1..4abcf92b 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -1,6 +1,7 @@
 [
   {
     "_id": "test-instruction-execution-running",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-execution-running",
     "status": 0,
     "step_history": [
@@ -20,6 +21,7 @@
   },
   {
     "_id": "test-instruction-cancel-execution-running-1",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-cancel-execution-running-1",
     "status": 0,
     "step_history": [
@@ -37,6 +39,7 @@
   },
   {
     "_id": "test-instruction-delete-execution-running",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-delete-execution-running",
     "status": 0,
     "step_history": [
@@ -54,6 +57,7 @@
   },
   {
     "_id": "test-instruction-execution-resume-1",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-execution-resume-1",
     "status": 1,
     "step_history": [
@@ -80,17 +84,20 @@
   {
     "_id": "execution-for-test-alarm-with-instruction-resource-2",
     "alarm": "test-alarm-with-instruction-2",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-assign-with-execution",
     "status": 0
   },
   {
     "_id": "execution-for-test-alarm-with-instruction-resource-3",
     "alarm": "test-alarm-with-instruction-3",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-assign-with-execution-2",
     "status": 0
   },
   {
     "_id": "test-instruction-execution-to-get-stats-1",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 2,
     "started_at": 1618279610,
@@ -101,6 +108,7 @@
   },
   {
     "_id": "test-instruction-execution-to-get-stats-2",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 2,
     "started_at": 1618021010,
@@ -111,6 +119,7 @@
   },
   {
     "_id": "test-instruction-execution-to-get-stats-3",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 2,
     "started_at": 1615342850,
@@ -121,10 +130,95 @@
   },
   {
     "_id": "test-instruction-execution-to-get-stats-4",
+    "instruction_modified_on": 1596712203,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 4,
     "started_at": 1618279610,
     "completed_at": 1618280210,
     "alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-summary-get-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-1",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-summary-get-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-1",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-summary-get-3",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-1",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-summary-get-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-changes-get-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-changes-get-2",
+    "instruction_modified_on": 1596712103,
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-changes-get-3",
+    "instruction_modified_on": 1596712103,
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-changes-get-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
   }
 ]
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_changes.feature b/tests/functional/features/api/cat/instructionstats_changes.feature
new file mode 100644
index 00000000..dede7d86
--- /dev/null
+++ b/tests/functional/features/api/cat/instructionstats_changes.feature
@@ -0,0 +1,217 @@
+Feature: get instruction statistics
+  I need to be able to get instruction statistics
+  Only admin should be able to get instruction statistics
+
+  Scenario: given get request should return manual instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-changes-get-1/changes
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 1,
+              "to": 1
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 400,
+          "execution_count": 1,
+          "modified_on": 1596712203
+        },
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 1
+            },
+            "major": {
+              "from": 2,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 1,
+          "avg_complete_time": 275,
+          "execution_count": 2,
+          "modified_on": 1596712103
+        },
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 0,
+          "execution_count": 0,
+          "modified_on": 1596712003
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 3
+      }
+    }
+    """
+
+  Scenario: given get request should return auto instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-changes-get-2/changes
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 1,
+              "to": 1
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 400,
+          "execution_count": 1,
+          "modified_on": 1596712203
+        },
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 1
+            },
+            "major": {
+              "from": 2,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 1,
+          "avg_complete_time": 275,
+          "execution_count": 2,
+          "modified_on": 1596712103
+        },
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 0,
+          "execution_count": 0,
+          "modified_on": 1596712003
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 3
+      }
+    }
+    """
+
+  Scenario: given get request should return empty instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-changes-get-3/changes
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 0,
+          "execution_count": 0,
+          "modified_on": 1596712203
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+
+  Scenario: given get request and no auth user should not allow access
+    When I do GET /api/v4/cat/instruction-stats/notexist/changes
+    Then the response code should be 401
+
+  Scenario: given get request and auth user by api key without permissions should not allow access
+    When I am noperms
+    When I do GET /api/v4/cat/instruction-stats/notexist/changes
+    Then the response code should be 403
+
+  Scenario: given get request with not exist id should return not found error
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/notexist/changes
+    Then the response code should be 404
+    Then the response body should be:
+    """
+    {
+      "error": "Not found"
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 2802f650..78f93f22 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -183,74 +183,6 @@ Feature: get instruction statistics
     }
     """
 
-  Scenario: given get request should return instruction stats
-    When I am admin
-    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-get-1
-    Then the response code should be 200
-    Then the response body should be:
-    """
-    {
-      "_id": "test-instruction-to-stats-get-1",
-      "alarm_states": {
-        "critical": {
-          "from": 1,
-          "to": 2
-        },
-        "major": {
-          "from": 2,
-          "to": 0
-        },
-        "minor": {
-          "from": 0,
-          "to": 0
-        }
-      },
-      "ok_alarm_states": 1,
-      "avg_complete_time": 316,
-      "execution_count": 3,
-      "last_executed_on": 1618280210,
-      "last_modified": 1596712203,
-      "created": 1596712203,
-      "name": "test-instruction-to-stats-get-1-name",
-      "rating": 3.2,
-      "type": 0
-    }
-    """
-
-  Scenario: given get request should return empty instruction stats
-    When I am admin
-    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-get-3
-    Then the response code should be 200
-    Then the response body should be:
-    """
-    {
-      "_id": "test-instruction-to-stats-get-3",
-      "alarm_states": {
-        "critical": {
-          "from": 0,
-          "to": 0
-        },
-        "major": {
-          "from": 0,
-          "to": 0
-        },
-        "minor": {
-          "from": 0,
-          "to": 0
-        }
-      },
-      "ok_alarm_states": 0,
-      "avg_complete_time": 0,
-      "execution_count": 0,
-      "last_executed_on": null,
-      "last_modified": 1596712203,
-      "created": 1596712203,
-      "name": "test-instruction-to-stats-get-3-name",
-      "rating": 0,
-      "type": 1
-    }
-    """
-
   Scenario: given get all request and no auth user should not allow access
     When I do GET /api/v4/cat/instruction-stats
     Then the response code should be 401
@@ -259,23 +191,3 @@ Feature: get instruction statistics
     When I am noperms
     When I do GET /api/v4/cat/instruction-stats
     Then the response code should be 403
-
-  Scenario: given get request and no auth user should not allow access
-    When I do GET /api/v4/cat/instruction-stats/notexist
-    Then the response code should be 401
-
-  Scenario: given get request and auth user by api key without permissions should not allow access
-    When I am noperms
-    When I do GET /api/v4/cat/instruction-stats/notexist
-    Then the response code should be 403
-
-  Scenario: given get request with not exist id should return not found error
-    When I am admin
-    When I do GET /api/v4/cat/instruction-stats/notexist
-    Then the response code should be 404
-    Then the response body should be:
-    """
-    {
-      "error": "Not found"
-    }
-    """
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_summary.feature b/tests/functional/features/api/cat/instructionstats_summary.feature
new file mode 100644
index 00000000..fcf0466b
--- /dev/null
+++ b/tests/functional/features/api/cat/instructionstats_summary.feature
@@ -0,0 +1,122 @@
+Feature: get instruction statistics
+  I need to be able to get instruction statistics
+  Only admin should be able to get instruction statistics
+
+  Scenario: given request should return manual instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-summary-get-1/summary
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "_id": "test-instruction-to-stats-summary-get-1",
+      "alarm_states": {
+        "critical": {
+          "from": 1,
+          "to": 2
+        },
+        "major": {
+          "from": 2,
+          "to": 0
+        },
+        "minor": {
+          "from": 0,
+          "to": 0
+        }
+      },
+      "ok_alarm_states": 1,
+      "avg_complete_time": 316,
+      "execution_count": 3,
+      "last_executed_on": 1618280210,
+      "last_modified": 1596712203,
+      "created": 1596712203,
+      "name": "test-instruction-to-stats-summary-get-1-name",
+      "type": 0
+    }
+    """
+
+  Scenario: given request should return auto instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-summary-get-2/summary
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "_id": "test-instruction-to-stats-summary-get-2",
+      "alarm_states": {
+        "critical": {
+          "from": 1,
+          "to": 2
+        },
+        "major": {
+          "from": 2,
+          "to": 0
+        },
+        "minor": {
+          "from": 0,
+          "to": 0
+        }
+      },
+      "ok_alarm_states": 1,
+      "avg_complete_time": 316,
+      "execution_count": 3,
+      "last_executed_on": 1618280210,
+      "last_modified": 1596712203,
+      "created": 1596712203,
+      "name": "test-instruction-to-stats-summary-get-2-name",
+      "type": 1
+    }
+    """
+
+  Scenario: given request should return empty instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-summary-get-3/summary
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "_id": "test-instruction-to-stats-summary-get-3",
+      "alarm_states": {
+        "critical": {
+          "from": 0,
+          "to": 0
+        },
+        "major": {
+          "from": 0,
+          "to": 0
+        },
+        "minor": {
+          "from": 0,
+          "to": 0
+        }
+      },
+      "ok_alarm_states": 0,
+      "avg_complete_time": 0,
+      "execution_count": 0,
+      "last_executed_on": null,
+      "last_modified": 1596712203,
+      "created": 1596712203,
+      "name": "test-instruction-to-stats-summary-get-3-name",
+      "type": 1
+    }
+    """
+
+  Scenario: given request and no auth user should not allow access
+    When I do GET /api/v4/cat/instruction-stats/notexist/summary
+    Then the response code should be 401
+
+  Scenario: given request and auth user by api key without permissions should not allow access
+    When I am noperms
+    When I do GET /api/v4/cat/instruction-stats/notexist/summary
+    Then the response code should be 403
+
+  Scenario: given request with not exist id should return not found error
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/notexist/summary
+    Then the response code should be 404
+    Then the response body should be:
+    """
+    {
+      "error": "Not found"
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
index 317b689f..f43a7f36 100644
--- a/tests/functional/features/engines/remediation/instructionexecution_stats.feature
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -39,6 +39,7 @@ Feature: update an instruction statistics
     """
     Then the response code should be 201
     When I save response instructionID={{ .lastResponse._id }}
+    When I save response creationTime={{ .lastResponse.last_modified }}
     When I send an event:
     """
     {
@@ -86,7 +87,7 @@ Feature: update an instruction statistics
     """
     When I wait the end of event processing
     When I wait 7s
-    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/summary
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -110,11 +111,45 @@ Feature: update an instruction statistics
       "execution_count": 1,
       "last_executed_on": {{ .executionTime }},
       "name": "test-instruction-to-stats-update-1-name",
-      "rating": 0,
       "type": 0
     }
     """
     Then the response key "avg_complete_time" should not be "0"
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/changes
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 1,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 1,
+          "execution_count": 1,
+          "modified_on": {{ .creationTime }}
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    Then the response key "data.0.avg_complete_time" should not be "0"
     When I do GET /api/v4/cat/instructions/{{ .instructionID }}
     Then the response code should be 200
     Then the response body should contain:
@@ -155,6 +190,7 @@ Feature: update an instruction statistics
     """
     Then the response code should be 201
     When I save response instructionID={{ .lastResponse._id }}
+    When I save response creationTime={{ .lastResponse.last_modified }}
     When I wait the next periodical process
     When I send an event:
     """
@@ -186,7 +222,7 @@ Feature: update an instruction statistics
     """
     When I wait the end of event processing
     When I wait 7s
-    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/summary
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -209,12 +245,46 @@ Feature: update an instruction statistics
       "ok_alarm_states": 1,
       "execution_count": 1,
       "name": "test-instruction-to-stats-update-2-name",
-      "rating": 0,
       "type": 1
     }
     """
     Then the response key "avg_complete_time" should not be "0"
     Then the response key "last_executed_on" should not be "0"
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/changes
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 1,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 1,
+          "execution_count": 1,
+          "modified_on": {{ .creationTime }}
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    Then the response key "data.0.avg_complete_time" should not be "0"
     When I do GET /api/v4/cat/instructions/{{ .instructionID }}
     Then the response code should be 200
     Then the response body should contain:
-- 
2.25.1


From 7a48dba8c15b71f91cee806728e9f19b074efdab Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 21 Apr 2021 12:02:28 +0700
Subject: [PATCH 15/66] Feature #3043 : Use the same execution colllection for
 manual and auto instructions

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/auto_instruction_execution.json      | 128 ------------------
 fixtures/default_entities.json                |  10 ++
 fixtures/instruction.json                     |  31 +++++
 fixtures/instruction_execution.json           | 126 +++++++++++++++++
 fixtures/periodical_alarm.json                |  47 +++++++
 lib/mongo/mongo.go                            |   1 -
 .../cat/instructionexecution_nextstep.feature |   2 +-
 .../cat/instructionexecution_previous.feature |   2 +-
 .../cat/instructionexecution_start.feature    |  11 ++
 9 files changed, 227 insertions(+), 131 deletions(-)
 delete mode 100644 fixtures/auto_instruction_execution.json

diff --git a/fixtures/auto_instruction_execution.json b/fixtures/auto_instruction_execution.json
deleted file mode 100644
index 4523a49d..00000000
--- a/fixtures/auto_instruction_execution.json
+++ /dev/null
@@ -1,128 +0,0 @@
-[
-  {
-    "_id": "test-auto-instruction-execution-to-get-stats-1",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-get-2",
-    "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "complete_time": 400,
-    "alarm_state": 3,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-get-stats-2",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-get-2",
-    "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
-    "complete_time": 350,
-    "alarm_state": 2,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-get-stats-3",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-get-2",
-    "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
-    "complete_time": 200,
-    "alarm_state": 2,
-    "result_alarm_state": 0
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-get-stats-4",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-get-2",
-    "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-1",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "complete_time": 400,
-    "alarm_state": 3,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-2",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
-    "complete_time": 350,
-    "alarm_state": 2,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-3",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
-    "complete_time": 200,
-    "alarm_state": 2,
-    "result_alarm_state": 0
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-4",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-1",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "complete_time": 400,
-    "alarm_state": 3,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-2",
-    "instruction_modified_on": 1596712103,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
-    "complete_time": 350,
-    "alarm_state": 2,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-3",
-    "instruction_modified_on": 1596712103,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
-    "complete_time": 200,
-    "alarm_state": 2,
-    "result_alarm_state": 0
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-4",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "alarm_state": 3
-  }
-]
\ No newline at end of file
diff --git a/fixtures/default_entities.json b/fixtures/default_entities.json
index 4b5eb4e3..1c1d2ce2 100644
--- a/fixtures/default_entities.json
+++ b/fixtures/default_entities.json
@@ -2133,5 +2133,15 @@
     "type": "resource",
     "component": "test-idle-rule-count-patterns-component",
     "impact_level": 1
+  },
+  {
+    "_id": "test-resource-to-not-run-auto-instruction-manually/test-component-to-not-run-auto-instruction-manually",
+    "depends": [],
+    "enabled": true,
+    "impact": [],
+    "infos": {},
+    "name": "test-resource-to-not-run-auto-instruction-manually",
+    "type": "resource",
+    "impact_level": 1
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index b3119fb9..885ce60a 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -2128,5 +2128,36 @@
     "last_modified": 1596712203,
     "mod_history": [1596712203],
     "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-not-run-auto-instruction-manually",
+    "type": 1,
+    "name": "test-instruction-to-not-run-auto-instruction-manually-name",
+    "alarm_patterns": [
+      {
+        "_id": "test-alarm-to-not-run-auto-instruction-manually"
+      }
+    ],
+    "description": "test-instruction-to-not-run-auto-instruction-manually-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-1",
+        "stop_on_fail": false
+      },
+      {
+        "job": "test-job-to-run-auto-instruction-2",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 2,
+    "author": "test-instruction-to-not-run-auto-instruction-manually-author",
+    "enabled": true,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 4abcf92b..2415bc43 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -220,5 +220,131 @@
     "started_at": 1618279610,
     "completed_at": 1618280210,
     "alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-3",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-get-stats-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-get-2",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-3",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-summary-get-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-2",
+    "instruction_modified_on": 1596712103,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 2,
+    "started_at": 1618021010,
+    "completed_at": 1618021250,
+    "complete_time": 350,
+    "alarm_state": 2,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-3",
+    "instruction_modified_on": 1596712103,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 2,
+    "started_at": 1615342850,
+    "completed_at": 1615343450,
+    "complete_time": 200,
+    "alarm_state": 2,
+    "result_alarm_state": 0
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-changes-get-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "status": 4,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "alarm_state": 3
   }
 ]
\ No newline at end of file
diff --git a/fixtures/periodical_alarm.json b/fixtures/periodical_alarm.json
index 001779bf..0a691f1c 100644
--- a/fixtures/periodical_alarm.json
+++ b/fixtures/periodical_alarm.json
@@ -3823,5 +3823,52 @@
       "infos": {},
       "infos_rule_version": {}
     }
+  },
+  {
+    "_id": "test-alarm-to-not-run-auto-instruction-manually",
+    "d": "test-resource-to-not-run-auto-instruction-manually/test-component-to-not-run-auto-instruction-manually",
+    "t": 1596942720,
+    "v": {
+      "state": {
+        "_t": "stateinc",
+        "t": 1596942720,
+        "a": "",
+        "m": "",
+        "val": 3
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1596942720,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [],
+      "component": "test-component-to-not-run-auto-instruction-manually",
+      "connector": "test-connector-to-not-run-auto-instruction-manually",
+      "connector_name": "test-connector-name-to-not-run-auto-instruction-manually",
+      "creation_date": 1596942720,
+      "display_name": "RC-KC_tW",
+      "initial_output": "",
+      "output": "",
+      "initial_long_output": "",
+      "long_output": "",
+      "long_output_history": [
+        ""
+      ],
+      "last_update_date": 1596942720,
+      "last_event_date": 1596942720,
+      "resource": "test-resource-to-not-run-auto-instruction-manually",
+      "tags": [],
+      "parents": [],
+      "children": [],
+      "total_state_changes": 1,
+      "extra": {
+      },
+      "infos": {
+      },
+      "infos_rule_version": {
+      }
+    }
   }
 ]
\ No newline at end of file
diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index 6aab1fea..cb354dd2 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -31,7 +31,6 @@ const (
 	FileMongoCollection                 = "files"
 	InstructionMongoCollection          = "instruction"
 	InstructionExecutionMongoCollection = "instruction_execution"
-	AutoInstructionExecutionMongoCollection = "auto_instruction_execution"
 	InstructionRatingMongoCollection    = "instruction_rating"
 	JobConfigMongoCollection            = "job_config"
 	JobMongoCollection                  = "job"
diff --git a/tests/functional/features/api/cat/instructionexecution_nextstep.feature b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
index b3cb3862..7b28492c 100644
--- a/tests/functional/features/api/cat/instructionexecution_nextstep.feature
+++ b/tests/functional/features/api/cat/instructionexecution_nextstep.feature
@@ -280,7 +280,7 @@ Feature: move a instruction execution to next step
     Then the response body should contain:
     """
     {
-      "status": 2,
+      "status": 5,
       "name": "test-instruction-execution-next-step-3-name",
       "description": "test-instruction-execution-next-step-3-description",
       "steps": [
diff --git a/tests/functional/features/api/cat/instructionexecution_previous.feature b/tests/functional/features/api/cat/instructionexecution_previous.feature
index dbbd8469..1ce901e8 100644
--- a/tests/functional/features/api/cat/instructionexecution_previous.feature
+++ b/tests/functional/features/api/cat/instructionexecution_previous.feature
@@ -380,7 +380,7 @@ Feature: move a instruction execution to previous operation
     Then the response body should contain:
     """
     {
-      "status": 2,
+      "status": 5,
       "name": "test-instruction-execution-previous-4-name",
       "description": "test-instruction-execution-previous-4-description",
       "steps": [
diff --git a/tests/functional/features/api/cat/instructionexecution_start.feature b/tests/functional/features/api/cat/instructionexecution_start.feature
index f1cfb784..65c6e267 100644
--- a/tests/functional/features/api/cat/instructionexecution_start.feature
+++ b/tests/functional/features/api/cat/instructionexecution_start.feature
@@ -160,6 +160,17 @@ Feature: run a instruction
     }
     """
 
+  Scenario: given auto instruction should return errors
+    When I am admin
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "test-alarm-to-not-run-auto-instruction-manually",
+      "instruction": "test-instruction-to-not-run-auto-instruction-manually"
+    }
+    """
+    Then the response code should be 404
+
   Scenario: given unauth request should not allow access
     When I do POST /api/v4/cat/executions:
     """
-- 
2.25.1


From d59edab78a97fb462cd2787e7aee18f55fd5b903 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 21 Apr 2021 14:28:07 +0700
Subject: [PATCH 16/66] Feature #3043 : Add rating to instruction

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction.json           |  1 +
 fixtures/instruction_execution.json |  2 +-
 fixtures/instruction_rating.json    | 14 --------------
 3 files changed, 2 insertions(+), 15 deletions(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 885ce60a..c3f09f40 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -1586,6 +1586,7 @@
     "description": "test-instruction-to-stats-get-1-description",
     "author": "test-instruction-to-stats-get-1-author",
     "enabled": true,
+    "rating": 3.2,
     "steps": [
       {
         "_id": "test-instruction-to-stats-get-1-step-1",
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 2415bc43..611acedd 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -173,7 +173,7 @@
   {
     "_id": "test-instruction-execution-to-stats-summary-get-4",
     "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-changes-get-1",
+    "instruction": "test-instruction-to-stats-summary-get-1",
     "status": 4,
     "started_at": 1618279610,
     "completed_at": 1618280210,
diff --git a/fixtures/instruction_rating.json b/fixtures/instruction_rating.json
index e1336b6d..f7db6d41 100644
--- a/fixtures/instruction_rating.json
+++ b/fixtures/instruction_rating.json
@@ -1,18 +1,4 @@
 [
-  {
-    "_id": "test-rating-to-stats-get-1",
-    "instruction": "test-instruction-to-stats-get-1",
-    "user": "test-rating-to-stats-get-1-user",
-    "rating": 4.5,
-    "comment": "test-rating-to-stats-get-1-comment"
-  },
-  {
-    "_id": "test-rating-to-stats-get-2",
-    "instruction": "test-instruction-to-stats-get-1",
-    "user": "test-rating-to-stats-get-2-user",
-    "rating": 2,
-    "comment": "test-rating-to-stats-get-2-comment"
-  },
   {
     "_id": "test-rating-to-comments-get-1",
     "instruction": "test-instruction-to-comments-get-1",
-- 
2.25.1


From 5c3905e1da73622a36bf82203c4c88fa53243d0c Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 21 Apr 2021 18:12:20 +0700
Subject: [PATCH 17/66] Fix merge conflicts

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 tests/functional/features/api/cat/instruction_get.feature | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index ca60662d..832a3706 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -160,8 +160,6 @@ Feature: get a instruction
           "author": "test-instruction-to-get-2-author",
           "enabled": true,
           "month_executions": 0,
-          "deletable": true,
-          "running": false,
           "jobs": [
             {
               "job": {
@@ -220,14 +218,14 @@ Feature: get a instruction
 
   Scenario: given get all request should return instructions with flags
     When I am admin
-    When I do GET /api/v4/cat/instructions?search=test-instruction-to-get-name&with_flags=true
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-get-1-name&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "data": [
         {
-          "_id": "test-instruction-to-get",
+          "_id": "test-instruction-to-get-1",
           "deletable": true,
           "running": false
         }
-- 
2.25.1


From ec5cdb29f3f80d8832f4ece66b92a8c4818214bd Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 22 Apr 2021 18:37:18 +0700
Subject: [PATCH 18/66] Feature #3043 : Add with month executions parameter to
 instruction API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../features/api/cat/instruction_get.feature  | 30 ++++++++++++++++---
 .../instructionexecution_stats.feature        | 24 ++++++++++-----
 2 files changed, 42 insertions(+), 12 deletions(-)

diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index 832a3706..c5ddd360 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -24,7 +24,6 @@ Feature: get a instruction
           "description": "test-instruction-to-get-1-description",
           "author": "test-instruction-to-get-1-author",
           "enabled": true,
-          "month_executions": 0,
           "timeout_after_execution": {
             "seconds": 2,
             "unit": "s"
@@ -159,7 +158,6 @@ Feature: get a instruction
           "description": "test-instruction-to-get-2-description",
           "author": "test-instruction-to-get-2-author",
           "enabled": true,
-          "month_executions": 0,
           "jobs": [
             {
               "job": {
@@ -239,6 +237,32 @@ Feature: get a instruction
     }
     """
 
+  Scenario: given get all request should return instructions with month executions
+    When I am admin
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-get&with_month_executions=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-get-1",
+          "month_executions": 0
+        },
+        {
+          "_id": "test-instruction-to-get-2",
+          "month_executions": 0
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
   Scenario: GET a instruction but unauthorized
     When I do GET /api/v4/cat/instructions/test-instruction-to-get
     Then the response code should be 401
@@ -268,7 +292,6 @@ Feature: get a instruction
       "description": "test-instruction-to-get-1-description",
       "author": "test-instruction-to-get-1-author",
       "enabled": true,
-      "month_executions": 0,
       "timeout_after_execution": {
         "seconds": 2,
         "unit": "s"
@@ -385,7 +408,6 @@ Feature: get a instruction
          "endpoint": "test-instruction-to-get-1-step-2-endpoint"
         }
       ],
-      "last_executed_on": 1596712203,
       "created": 1596712203,
       "last_modified": 1596712203
     }
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
index f43a7f36..4a119a68 100644
--- a/tests/functional/features/engines/remediation/instructionexecution_stats.feature
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -150,14 +150,18 @@ Feature: update an instruction statistics
     }
     """
     Then the response key "data.0.avg_complete_time" should not be "0"
-    When I do GET /api/v4/cat/instructions/{{ .instructionID }}
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-stats-update-1-name&with_month_executions=true
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "{{ .instructionID }}",
-      "month_executions": 1,
-      "last_executed_on": {{ .executionTime }}
+      "data": [
+        {
+          "_id": "{{ .instructionID }}",
+          "month_executions": 1,
+          "last_executed_on": {{ .executionTime }}
+        }
+      ]
     }
     """
 
@@ -285,13 +289,17 @@ Feature: update an instruction statistics
     }
     """
     Then the response key "data.0.avg_complete_time" should not be "0"
-    When I do GET /api/v4/cat/instructions/{{ .instructionID }}
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-stats-update-2-name&with_month_executions=true
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "{{ .instructionID }}",
-      "month_executions": 1
+      "data": [
+        {
+          "_id": "{{ .instructionID }}",
+          "month_executions": 1
+        }
+      ]
     }
     """
-    Then the response key "last_executed_on" should not be "0"
+    Then the response key "data.0.last_executed_on" should not be "0"
-- 
2.25.1


From 5d61edce3b534bef99fd74b11500ddaf9b6406f0 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Tue, 27 Apr 2021 20:08:53 +0700
Subject: [PATCH 19/66] add instructions rate + notification endpoint

---
 fixtures/default_rights.json                  |  23 ++
 fixtures/instruction.json                     |  42 ++++
 fixtures/instruction_execution.json           |  72 +++++++
 fixtures/instruction_rating.json              |  16 ++
 fixtures/notification.json                    |  12 ++
 lib/api/notification/api.go                   |  59 ++++++
 lib/api/notification/model.go                 |  12 ++
 lib/api/notification/store.go                 |  50 +++++
 lib/api/router.go                             |  18 ++
 lib/mongo/mongo.go                            |   1 +
 .../features/api/cat/instruction_get.feature  |   3 +
 .../features/api/cat/instruction_rate.feature | 199 ++++++++++++++++++
 .../api/cat/instructionexecution_rate.feature | 114 ----------
 .../api/cat/instructionstats_get.feature      |   4 +
 .../api/cat/instructionstats_summary.feature  |   9 +-
 .../features/api/core/notification.feature    |  64 ++++++
 16 files changed, 581 insertions(+), 117 deletions(-)
 create mode 100644 fixtures/notification.json
 create mode 100644 lib/api/notification/api.go
 create mode 100644 lib/api/notification/model.go
 create mode 100644 lib/api/notification/store.go
 create mode 100644 tests/functional/features/api/cat/instruction_rate.feature
 delete mode 100644 tests/functional/features/api/cat/instructionexecution_rate.feature
 create mode 100644 tests/functional/features/api/core/notification.feature

diff --git a/fixtures/default_rights.json b/fixtures/default_rights.json
index f5e78803..a4e0e8a9 100644
--- a/fixtures/default_rights.json
+++ b/fixtures/default_rights.json
@@ -199,6 +199,11 @@
     "desc": "Associative table",
     "type": "CRUD"
   },
+  {
+    "_id": "api_notification",
+    "crecord_type": "action",
+    "crecord_name": "api_notification"
+  },
   {
     "_id": "admin",
     "crecord_type": "role",
@@ -308,6 +313,10 @@
         "checksum": 1,
         "crecord_type": "right"
       },
+      "api_notification": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
       "api_viewgroup": {
         "checksum": 15,
         "crecord_type": "right"
@@ -497,6 +506,20 @@
     },
     "enable": true
   },
+  {
+    "_id": "manageruser",
+    "crecord_type": "user",
+    "crecord_name": "manageruser",
+    "role": "manager",
+    "mail": "manager@canopsis.net",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
+    "authkey": "2be1d0ee-5e9e-4b1f-9d80-e857e50f4191",
+    "contact": {
+      "name": "John Doe",
+      "address": "30 Rue du Triez 59290 Wasquehal France"
+    },
+    "enable": true
+  },
   {
     "_id": "nopermsuser",
     "crecord_type": "user",
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index c3f09f40..ec61ebcd 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -1057,6 +1057,48 @@
     "mod_history": [1596712203],
     "created": 1000000019
   },
+  {
+    "_id": "test-instruction-to-check-rate-notify",
+    "type": 0,
+    "name": "test-instruction-to-check-rate-notify-name",
+    "alarm_patterns": [
+      {
+        "_id": "test-alarm-it-does-not-matter"
+      }
+    ],
+    "description": "test-instruction-to-check-rate-notify-description",
+    "author": "test-instruction-to-check-rate-notify-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-check-rate-notify-step-1",
+        "name": "test-instruction-to-check-rate-notify-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-check-rate-notify-step-1-operation-1",
+            "name": "test-instruction-to-check-rate-notify-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-check-rate-notify-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-check-rate-notify-step-1-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "mod_history": [1596712203],
+    "created": 1000000019,
+    "rating": 5.0
+  },
   {
     "_id": "test-instruction-with-entity-pattern-1",
     "type": 0,
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 611acedd..ac556148 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -346,5 +346,77 @@
     "started_at": 1618279610,
     "completed_at": 1618280210,
     "alarm_state": 3
+  },
+  {
+    "_id": "execution-for-test-instruction-to-rate-1",
+    "alarm": "it-does-not-matter",
+    "user": "root",
+    "instruction": "test-instruction-to-rate-1",
+    "status": 0,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-rate-2-root",
+    "alarm": "it-does-not-matter",
+    "user": "root",
+    "instruction": "test-instruction-to-rate-2",
+    "status": 2,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-rate-2-manager",
+    "alarm": "it-does-not-matter",
+    "user": "manageruser",
+    "instruction": "test-instruction-to-rate-2",
+    "status": 2,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-rate-3-root",
+    "alarm": "it-does-not-matter",
+    "user": "root",
+    "instruction": "test-instruction-to-rate-3",
+    "status": 2,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-rate-3-manager",
+    "alarm": "it-does-not-matter",
+    "user": "manageruser",
+    "instruction": "test-instruction-to-rate-3",
+    "status": 2,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-rate-4",
+    "alarm": "it-does-not-matter",
+    "user": "root",
+    "instruction": "test-instruction-to-rate-4",
+    "status": 2,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-rate-5",
+    "alarm": "it-does-not-matter",
+    "user": "root",
+    "instruction": "test-instruction-to-rate-5",
+    "status": 4,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-check-rate-notify-1",
+    "alarm": "it-does-not-matter",
+    "user": "root",
+    "instruction": "test-instruction-to-check-rate-notify",
+    "status": 2,
+    "completed_at": 1100000000
+  },
+  {
+    "_id": "execution-for-test-instruction-to-check-rate-notify-2",
+    "alarm": "it-does-not-matter",
+    "user": "manageruser",
+    "instruction": "test-instruction-to-check-rate-notify",
+    "status": 2,
+    "completed_at": 2000000000
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_rating.json b/fixtures/instruction_rating.json
index f7db6d41..bf5331aa 100644
--- a/fixtures/instruction_rating.json
+++ b/fixtures/instruction_rating.json
@@ -12,5 +12,21 @@
     "user": "test-rating-to-comments-get-2-user",
     "rating": 2,
     "comment": "test-rating-to-comments-get-2-comment"
+  },
+  {
+    "_id": "test-instruction-to-check-rate-notify-rating-1",
+    "instruction": "test-instruction-to-check-rate-notify",
+    "user": "root",
+    "rating": 5,
+    "comment": "test-instruction-to-check-rate-notify-rating-1-comment",
+    "created": 1000000000
+  },
+  {
+    "_id": "test-instruction-to-check-rate-notify-rating-2",
+    "instruction": "test-instruction-to-check-rate-notify",
+    "user": "manageruser",
+    "rating": 5,
+    "comment": "test-instruction-to-check-rate-notify-rating-2-comment",
+    "created": 2000000000
   }
 ]
\ No newline at end of file
diff --git a/fixtures/notification.json b/fixtures/notification.json
new file mode 100644
index 00000000..47cb1b41
--- /dev/null
+++ b/fixtures/notification.json
@@ -0,0 +1,12 @@
+[
+  {
+    "_id": "notification",
+    "instruction": {
+      "rate": true,
+      "rate_frequency": {
+        "seconds": 604800,
+        "unit": "s"
+      }
+    }
+  }
+]
\ No newline at end of file
diff --git a/lib/api/notification/api.go b/lib/api/notification/api.go
new file mode 100644
index 00000000..2a2edfc4
--- /dev/null
+++ b/lib/api/notification/api.go
@@ -0,0 +1,59 @@
+package notification
+
+import (
+	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/common"
+	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/logger"
+	"github.com/gin-gonic/gin"
+	"go.mongodb.org/mongo-driver/mongo"
+	"net/http"
+)
+
+type API interface {
+	Update(c *gin.Context)
+	Get(c *gin.Context)
+}
+
+type api struct {
+	store        Store
+	actionLogger logger.ActionLogger
+}
+
+func NewApi(
+	store Store,
+	actionLogger logger.ActionLogger,
+) API {
+	return &api{
+		store:        store,
+		actionLogger: actionLogger,
+	}
+}
+
+func (a *api) Get(c *gin.Context) {
+	notification, err := a.store.Get()
+	if err == mongo.ErrNoDocuments {
+		c.AbortWithStatusJSON(http.StatusNotFound, common.NotFoundResponse)
+		return
+	} else if err != nil {
+		panic(err)
+	}
+
+	c.JSON(http.StatusOK, notification)
+}
+
+func (a *api) Update(c *gin.Context) {
+	request := Notification{}
+	if err := c.ShouldBindJSON(&request); err != nil {
+		c.JSON(http.StatusBadRequest, common.NewValidationErrorResponse(err, request))
+		return
+	}
+
+	notification, err := a.store.Update(request)
+	if err == mongo.ErrNoDocuments {
+		c.AbortWithStatusJSON(http.StatusNotFound, common.NotFoundResponse)
+		return
+	} else if err != nil {
+		panic(err)
+	}
+
+	c.JSON(http.StatusOK, notification)
+}
diff --git a/lib/api/notification/model.go b/lib/api/notification/model.go
new file mode 100644
index 00000000..5453d37b
--- /dev/null
+++ b/lib/api/notification/model.go
@@ -0,0 +1,12 @@
+package notification
+
+import "git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/canopsis/types"
+
+type Notification struct {
+	Instruction InstructionNotification `json:"instruction" bson:"instruction"`
+}
+
+type InstructionNotification struct {
+	Rate          *bool                  `json:"rate" bson:"rate" binding:"required"`
+	RateFrequency types.DurationWithUnit `json:"rate_frequency" bson:"rate_frequency" binding:"required,numeric,gte=0"`
+}
diff --git a/lib/api/notification/store.go b/lib/api/notification/store.go
new file mode 100644
index 00000000..150ce0f9
--- /dev/null
+++ b/lib/api/notification/store.go
@@ -0,0 +1,50 @@
+package notification
+
+import (
+	"context"
+	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/mongo"
+	"go.mongodb.org/mongo-driver/bson"
+	"go.mongodb.org/mongo-driver/mongo/options"
+)
+
+type Store interface {
+	Get() (Notification, error)
+	Update(request Notification) (Notification, error)
+}
+
+type store struct {
+	dbCollection mongo.DbCollection
+}
+
+func NewStore(
+	dbClient mongo.DbClient,
+) Store {
+	return &store{
+		dbCollection: dbClient.Collection(mongo.NotificationCollection),
+	}
+}
+
+func (s *store) Get() (Notification, error) {
+	ctx, cancel := context.WithCancel(context.Background())
+	defer cancel()
+
+	notification := Notification{}
+	err := s.dbCollection.FindOne(ctx, bson.M{"_id": "notification"}).Decode(&notification)
+
+	return notification, err
+}
+
+func (s *store) Update(request Notification) (Notification, error) {
+	ctx, cancel := context.WithCancel(context.Background())
+	defer cancel()
+
+	notification := Notification{}
+	err := s.dbCollection.FindOneAndUpdate(
+		ctx,
+		bson.M{"_id": "notification"},
+		bson.M{"$set": request},
+		options.FindOneAndUpdate().SetReturnDocument(options.After),
+	).Decode(&notification)
+
+	return notification, err
+}
diff --git a/lib/api/router.go b/lib/api/router.go
index 529d5426..4bac3402 100644
--- a/lib/api/router.go
+++ b/lib/api/router.go
@@ -24,6 +24,7 @@ import (
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/idlerule"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/logger"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/middleware"
+	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/notification"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/pbehavior"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/pbehaviorcomment"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/pbehaviorexception"
@@ -85,6 +86,8 @@ const (
 	authUserInterfaceDelete = "api_user_interface_delete"
 	authEvent               = "api_event"
 	authObjIdleRule         = "api_idlerule"
+	authObjNotification     = "api_notification"
+	authObjJUnit            = "api_junit"
 
 	permRead   = model.PermissionRead
 	permCreate = model.PermissionCreate
@@ -834,6 +837,21 @@ func RegisterRoutes(
 			)
 		}
 
+		notificationRouter := protected.Group("/notification")
+		{
+			notificationApi := notification.NewApi(notification.NewStore(dbClient), actionLogger)
+			notificationRouter.PUT(
+				"/",
+				middleware.Authorize(authObjNotification, permCan, enforcer),
+				notificationApi.Update,
+			)
+			notificationRouter.GET(
+				"/",
+				middleware.Authorize(authObjNotification, permCan, enforcer),
+				notificationApi.Get,
+			)
+		}
+
 		playlistRouter := protected.Group("/playlists")
 		{
 			playlistApi := playlist.NewApi(playlist.NewStore(dbClient), actionLogger)
diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index cb354dd2..d8b174ea 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -53,6 +53,7 @@ const (
 	StateSettingsMongoCollection        = "state_settings"
 	BroadcastMessageMongoCollection     = "broadcast_message"
 	AssociativeTableCollection          = "default_associativetable"
+	NotificationCollection              = "notification"
 )
 
 type SingleResultHelper interface {
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index c5ddd360..4cf99baf 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -14,6 +14,7 @@ Feature: get a instruction
           "_id": "test-instruction-to-get-1",
           "type": 0,
           "status": 0,
+          "rating": 0,
           "name": "test-instruction-to-get-1-name",
           "entity_patterns": [
             {
@@ -148,6 +149,7 @@ Feature: get a instruction
           "_id": "test-instruction-to-get-2",
           "type": 1,
           "status": 0,
+          "rating": 0,
           "name": "test-instruction-to-get-2-name",
           "entity_patterns": [
             {
@@ -282,6 +284,7 @@ Feature: get a instruction
       "_id": "test-instruction-to-get-1",
       "type": 0,
       "status": 0,
+      "rating": 0,
       "name": "test-instruction-to-get-1-name",
       "entity_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instruction_rate.feature b/tests/functional/features/api/cat/instruction_rate.feature
new file mode 100644
index 00000000..311739d1
--- /dev/null
+++ b/tests/functional/features/api/cat/instruction_rate.feature
@@ -0,0 +1,199 @@
+Feature: rate an instruction
+  I need to be able to rate an instruction
+  Only admin should be able to rate an instruction
+
+  Scenario: Rate an instruction as unauthorized
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate:
+    """
+    {
+      "rating": 4.5,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 401
+
+  Scenario: Rate an instruction without permissions
+    When I am noperms
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate:
+    """
+    {
+      "rating": 4.5,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 403
+
+  Scenario: Rate an instruction, but without completed execution
+    When I am admin
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate:
+    """
+    {
+      "rating": 4.5,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+      "error": "instruction wasn't completed by the user"
+    }
+    """
+
+  Scenario: Rate completed instruction with success, can rate only once per day, rating should be calculated properly
+    When I am admin
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-2/rate:
+    """
+    {
+      "rating": 1,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 204
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-2/rate:
+    """
+    {
+      "rating": 3,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+       "error": "user has already rated today"
+    }
+    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-3/rate:
+    """
+    {
+      "rating": 3,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 204
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-4/rate:
+    """
+    {
+      "rating": 5,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 204
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-2/rate:
+    """
+    {
+      "rating": 2,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 204
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-3/rate:
+    """
+    {
+      "rating": 5,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 204
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-rate-2",
+          "rating": 1.5
+        },
+        {
+          "_id": "test-instruction-to-rate-3",
+          "rating": 4
+        },
+        {
+          "_id": "test-instruction-to-rate-4",
+          "rating": 5
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 3
+      }
+    }
+    """
+
+  Scenario: Should be notified if the user rated long ago, not notified otherwise
+    When I am authenticated with username "root" and password "test"
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-check-rate-notify",
+          "rate_notify": true,
+          "rating": 5
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I am authenticated with username "manageruser" and password "test"
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-check-rate-notify",
+          "rate_notify": false,
+          "rating": 5
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-check-rate-notify/rate:
+    """
+    {
+      "rating": 2,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 204
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-check-rate-notify",
+          "rate_notify": false,
+          "rating": 4
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_rate.feature b/tests/functional/features/api/cat/instructionexecution_rate.feature
deleted file mode 100644
index dfb90b62..00000000
--- a/tests/functional/features/api/cat/instructionexecution_rate.feature
+++ /dev/null
@@ -1,114 +0,0 @@
-#Feature: rate an instruction
-#  I need to be able to rate an instruction
-#  Only admin should be able to rate an instruction
-#
-#  Scenario: Rate an instruction as unauthorized
-#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
-#    """
-#    {
-#      "rating": 4.5,
-#      "comment": "test"
-#    }
-#    """
-#    Then the response code should be 401
-#
-#  Scenario: Rate an instruction without permissions
-#    When I am noperms
-#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
-#    """
-#    {
-#      "rating": 4.5,
-#      "comment": "test"
-#    }
-#    """
-#    Then the response code should be 403
-#
-#  Scenario: Rate an instruction, but without completed execution
-#    When I am admin
-#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-1/rate:
-#    """
-#    {
-#      "rating": 4.5,
-#      "comment": "test"
-#    }
-#    """
-#    Then the response code should be 400
-#    Then the response body should be:
-#    """
-#    {
-#      "error": "instruction wasn't completed by the user"
-#    }
-#    """
-#
-#  Scenario: Rate an instruction, when the user has already rated it
-#    When I am admin
-#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-2/rate:
-#    """
-#    {
-#      "rating": 2.5,
-#      "comment": "test"
-#    }
-#    """
-#    Then the response code should be 400
-#    Then the response body should be:
-#    """
-#    {
-#      "error": "rating already exists"
-#    }
-#    """
-#
-#  Scenario: Rate completed instruction with success
-#    When I am admin
-#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-3/rate:
-#    """
-#    {
-#      "rating": 4.5,
-#      "comment": "test"
-#    }
-#    """
-#    Then the response code should be 204
-#
-#  Scenario: Rate an instruction with success, check rating calculation
-#    When I am admin
-#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-4/rate:
-#    """
-#    {
-#      "rating": 3,
-#      "comment": "test"
-#    }
-#    """
-#    Then the response code should be 204
-#    Then I do GET /api/v4/cat/instructions/test-instruction-to-rate-4
-#    Then the response code should be 200
-#    Then the response body should contain:
-#    """
-#    {
-#      "_id": "test-instruction-to-rate-4",
-#      "rating": 3,
-#      "comments": [
-#        {
-#          "rating": 5,
-#          "comment": "test_user_1_comment"
-#        },
-#        {
-#          "rating": 1,
-#          "comment": "test_user_2_comment"
-#        },
-#        {
-#          "rating": 3,
-#          "comment": "test"
-#        }
-#      ]
-#    }
-#    """
-#
-#  Scenario: Rate failed instruction with success
-#    When I am admin
-#    When I do PUT /api/v4/cat/executions/execution-for-test-instruction-to-rate-5/rate:
-#    """
-#    {
-#      "rating": 4.5,
-#      "comment": "test"
-#    }
-#    """
-#    Then the response code should be 204
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 78f93f22..45fc5191 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -34,6 +34,7 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
+          "rate_notify": false,
           "type": 0
         },
         {
@@ -60,6 +61,7 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
+          "rate_notify": false,
           "type": 1
         }
       ],
@@ -104,6 +106,7 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
+          "rate_notify": false,
           "type": 0
         },
         {
@@ -130,6 +133,7 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
+          "rate_notify": false,
           "type": 1
         }
       ],
diff --git a/tests/functional/features/api/cat/instructionstats_summary.feature b/tests/functional/features/api/cat/instructionstats_summary.feature
index fcf0466b..232a80b1 100644
--- a/tests/functional/features/api/cat/instructionstats_summary.feature
+++ b/tests/functional/features/api/cat/instructionstats_summary.feature
@@ -31,7 +31,8 @@ Feature: get instruction statistics
       "last_modified": 1596712203,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-1-name",
-      "type": 0
+      "type": 0,
+      "rate_notify": false
     }
     """
 
@@ -64,7 +65,8 @@ Feature: get instruction statistics
       "last_modified": 1596712203,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-2-name",
-      "type": 1
+      "type": 1,
+      "rate_notify": false
     }
     """
 
@@ -97,7 +99,8 @@ Feature: get instruction statistics
       "last_modified": 1596712203,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-3-name",
-      "type": 1
+      "type": 1,
+      "rate_notify": false
     }
     """
 
diff --git a/tests/functional/features/api/core/notification.feature b/tests/functional/features/api/core/notification.feature
new file mode 100644
index 00000000..18b6048c
--- /dev/null
+++ b/tests/functional/features/api/core/notification.feature
@@ -0,0 +1,64 @@
+Feature: update notifications
+  I need to be able to update notifications
+  Only admin should be able to update notifications
+
+  Scenario: GET unauthorized
+    When I do GET /api/v4/notification
+    Then the response code should be 401
+
+  Scenario: GET without permissions
+    When I am noperms
+    When I do GET /api/v4/notification
+
+  Scenario: GET ok
+    When I am admin
+    When I do GET /api/v4/notification
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "instruction": {
+        "rate": true,
+        "rate_frequency": {
+          "seconds": 604800,
+          "unit": "s"
+        }
+      }
+    }
+    """
+
+  Scenario: PUT unauthorized
+      When I do PUT /api/v4/notification
+      Then the response code should be 401
+
+  Scenario: PUT without permissions
+    When I am noperms
+    When I do PUT /api/v4/notification
+
+  Scenario: PUT ok
+    When I am admin
+    When I do PUT /api/v4/notification:
+    """
+    {
+      "instruction": {
+        "rate": false,
+        "rate_frequency": {
+          "seconds": 1,
+          "unit": "s"
+        }
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "instruction": {
+        "rate": false,
+        "rate_frequency": {
+          "seconds": 1,
+          "unit": "s"
+        }
+      }
+    }
+    """
\ No newline at end of file
-- 
2.25.1


From e75ad2b16af89503564523122754bcb32f3bfa24 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Tue, 27 Apr 2021 21:12:12 +0700
Subject: [PATCH 20/66] update swagger docs

---
 docs/docs.go                | 148 ++++++++++++++++++++++++++++++++++++
 docs/swagger.json           | 148 ++++++++++++++++++++++++++++++++++++
 docs/swagger.yaml           |  92 ++++++++++++++++++++++
 lib/api/notification/api.go |  28 +++++++
 4 files changed, 416 insertions(+)

diff --git a/docs/docs.go b/docs/docs.go
index e8f219b5..0f9a03a2 100644
--- a/docs/docs.go
+++ b/docs/docs.go
@@ -3682,6 +3682,129 @@ var doc = `{
                 }
             }
         },
+        "/notification": {
+            "get": {
+                "security": [
+                    {
+                        "ApiKeyAuth": []
+                    },
+                    {
+                        "BasicAuth": []
+                    }
+                ],
+                "description": "Get notification settings",
+                "consumes": [
+                    "application/json"
+                ],
+                "produces": [
+                    "application/json"
+                ],
+                "tags": [
+                    "notification"
+                ],
+                "summary": "Get notification settings",
+                "operationId": "notification-get",
+                "parameters": [
+                    {
+                        "type": "integer",
+                        "description": "current page",
+                        "name": "page",
+                        "in": "query",
+                        "required": true
+                    },
+                    {
+                        "type": "integer",
+                        "description": "items per page",
+                        "name": "limit",
+                        "in": "query",
+                        "required": true
+                    }
+                ],
+                "responses": {
+                    "200": {
+                        "description": "OK",
+                        "schema": {
+                            "allOf": [
+                                {
+                                    "$ref": "#/definitions/common.PaginatedListResponse"
+                                },
+                                {
+                                    "type": "object",
+                                    "properties": {
+                                        "data": {
+                                            "type": "array",
+                                            "items": {
+                                                "$ref": "#/definitions/notification.Notification"
+                                            }
+                                        }
+                                    }
+                                }
+                            ]
+                        }
+                    }
+                }
+            },
+            "put": {
+                "security": [
+                    {
+                        "ApiKeyAuth": []
+                    },
+                    {
+                        "BasicAuth": []
+                    }
+                ],
+                "description": "Update notification settings",
+                "consumes": [
+                    "application/json"
+                ],
+                "produces": [
+                    "application/json"
+                ],
+                "tags": [
+                    "notification"
+                ],
+                "summary": "Update notification settings",
+                "operationId": "notification-update",
+                "parameters": [
+                    {
+                        "type": "string",
+                        "description": "type id",
+                        "name": "id",
+                        "in": "path",
+                        "required": true
+                    },
+                    {
+                        "description": "body",
+                        "name": "body",
+                        "in": "body",
+                        "required": true,
+                        "schema": {
+                            "$ref": "#/definitions/notification.Notification"
+                        }
+                    }
+                ],
+                "responses": {
+                    "200": {
+                        "description": "OK",
+                        "schema": {
+                            "$ref": "#/definitions/notification.Notification"
+                        }
+                    },
+                    "400": {
+                        "description": "Bad Request",
+                        "schema": {
+                            "$ref": "#/definitions/common.ValidationErrorResponse"
+                        }
+                    },
+                    "404": {
+                        "description": "Not Found",
+                        "schema": {
+                            "$ref": "#/definitions/common.ErrorResponse"
+                        }
+                    }
+                }
+            }
+        },
         "/pbehavior-comments": {
             "post": {
                 "security": [
@@ -9233,6 +9356,31 @@ var doc = `{
                 }
             }
         },
+        "notification.InstructionNotification": {
+            "type": "object",
+            "required": [
+                "rate",
+                "rate_frequency"
+            ],
+            "properties": {
+                "rate": {
+                    "type": "boolean"
+                },
+                "rate_frequency": {
+                    "type": "object",
+                    "$ref": "#/definitions/types.DurationWithUnit"
+                }
+            }
+        },
+        "notification.Notification": {
+            "type": "object",
+            "properties": {
+                "instruction": {
+                    "type": "object",
+                    "$ref": "#/definitions/notification.InstructionNotification"
+                }
+            }
+        },
         "pattern.AlarmPattern": {
             "type": "object",
             "properties": {
diff --git a/docs/swagger.json b/docs/swagger.json
index 5ecb61db..8b2e8c84 100644
--- a/docs/swagger.json
+++ b/docs/swagger.json
@@ -3666,6 +3666,129 @@
                 }
             }
         },
+        "/notification": {
+            "get": {
+                "security": [
+                    {
+                        "ApiKeyAuth": []
+                    },
+                    {
+                        "BasicAuth": []
+                    }
+                ],
+                "description": "Get notification settings",
+                "consumes": [
+                    "application/json"
+                ],
+                "produces": [
+                    "application/json"
+                ],
+                "tags": [
+                    "notification"
+                ],
+                "summary": "Get notification settings",
+                "operationId": "notification-get",
+                "parameters": [
+                    {
+                        "type": "integer",
+                        "description": "current page",
+                        "name": "page",
+                        "in": "query",
+                        "required": true
+                    },
+                    {
+                        "type": "integer",
+                        "description": "items per page",
+                        "name": "limit",
+                        "in": "query",
+                        "required": true
+                    }
+                ],
+                "responses": {
+                    "200": {
+                        "description": "OK",
+                        "schema": {
+                            "allOf": [
+                                {
+                                    "$ref": "#/definitions/common.PaginatedListResponse"
+                                },
+                                {
+                                    "type": "object",
+                                    "properties": {
+                                        "data": {
+                                            "type": "array",
+                                            "items": {
+                                                "$ref": "#/definitions/notification.Notification"
+                                            }
+                                        }
+                                    }
+                                }
+                            ]
+                        }
+                    }
+                }
+            },
+            "put": {
+                "security": [
+                    {
+                        "ApiKeyAuth": []
+                    },
+                    {
+                        "BasicAuth": []
+                    }
+                ],
+                "description": "Update notification settings",
+                "consumes": [
+                    "application/json"
+                ],
+                "produces": [
+                    "application/json"
+                ],
+                "tags": [
+                    "notification"
+                ],
+                "summary": "Update notification settings",
+                "operationId": "notification-update",
+                "parameters": [
+                    {
+                        "type": "string",
+                        "description": "type id",
+                        "name": "id",
+                        "in": "path",
+                        "required": true
+                    },
+                    {
+                        "description": "body",
+                        "name": "body",
+                        "in": "body",
+                        "required": true,
+                        "schema": {
+                            "$ref": "#/definitions/notification.Notification"
+                        }
+                    }
+                ],
+                "responses": {
+                    "200": {
+                        "description": "OK",
+                        "schema": {
+                            "$ref": "#/definitions/notification.Notification"
+                        }
+                    },
+                    "400": {
+                        "description": "Bad Request",
+                        "schema": {
+                            "$ref": "#/definitions/common.ValidationErrorResponse"
+                        }
+                    },
+                    "404": {
+                        "description": "Not Found",
+                        "schema": {
+                            "$ref": "#/definitions/common.ErrorResponse"
+                        }
+                    }
+                }
+            }
+        },
         "/pbehavior-comments": {
             "post": {
                 "security": [
@@ -9217,6 +9340,31 @@
                 }
             }
         },
+        "notification.InstructionNotification": {
+            "type": "object",
+            "required": [
+                "rate",
+                "rate_frequency"
+            ],
+            "properties": {
+                "rate": {
+                    "type": "boolean"
+                },
+                "rate_frequency": {
+                    "type": "object",
+                    "$ref": "#/definitions/types.DurationWithUnit"
+                }
+            }
+        },
+        "notification.Notification": {
+            "type": "object",
+            "properties": {
+                "instruction": {
+                    "type": "object",
+                    "$ref": "#/definitions/notification.InstructionNotification"
+                }
+            }
+        },
         "pattern.AlarmPattern": {
             "type": "object",
             "properties": {
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
index 494387dd..0ba7a985 100644
--- a/docs/swagger.yaml
+++ b/docs/swagger.yaml
@@ -1323,6 +1323,23 @@ definitions:
         $ref: '#/definitions/types.CpsTime'
         type: object
     type: object
+  notification.InstructionNotification:
+    properties:
+      rate:
+        type: boolean
+      rate_frequency:
+        $ref: '#/definitions/types.DurationWithUnit'
+        type: object
+    required:
+    - rate
+    - rate_frequency
+    type: object
+  notification.Notification:
+    properties:
+      instruction:
+        $ref: '#/definitions/notification.InstructionNotification'
+        type: object
+    type: object
   pattern.AlarmPattern:
     properties:
       entityID:
@@ -5574,6 +5591,81 @@ paths:
       summary: update user interface
       tags:
       - internal
+  /notification:
+    get:
+      consumes:
+      - application/json
+      description: Get notification settings
+      operationId: notification-get
+      parameters:
+      - description: current page
+        in: query
+        name: page
+        required: true
+        type: integer
+      - description: items per page
+        in: query
+        name: limit
+        required: true
+        type: integer
+      produces:
+      - application/json
+      responses:
+        "200":
+          description: OK
+          schema:
+            allOf:
+            - $ref: '#/definitions/common.PaginatedListResponse'
+            - properties:
+                data:
+                  items:
+                    $ref: '#/definitions/notification.Notification'
+                  type: array
+              type: object
+      security:
+      - ApiKeyAuth: []
+      - BasicAuth: []
+      summary: Get notification settings
+      tags:
+      - notification
+    put:
+      consumes:
+      - application/json
+      description: Update notification settings
+      operationId: notification-update
+      parameters:
+      - description: type id
+        in: path
+        name: id
+        required: true
+        type: string
+      - description: body
+        in: body
+        name: body
+        required: true
+        schema:
+          $ref: '#/definitions/notification.Notification'
+      produces:
+      - application/json
+      responses:
+        "200":
+          description: OK
+          schema:
+            $ref: '#/definitions/notification.Notification'
+        "400":
+          description: Bad Request
+          schema:
+            $ref: '#/definitions/common.ValidationErrorResponse'
+        "404":
+          description: Not Found
+          schema:
+            $ref: '#/definitions/common.ErrorResponse'
+      security:
+      - ApiKeyAuth: []
+      - BasicAuth: []
+      summary: Update notification settings
+      tags:
+      - notification
   /pbehavior-comments:
     post:
       consumes:
diff --git a/lib/api/notification/api.go b/lib/api/notification/api.go
index 2a2edfc4..b87a4241 100644
--- a/lib/api/notification/api.go
+++ b/lib/api/notification/api.go
@@ -28,6 +28,19 @@ func NewApi(
 	}
 }
 
+// Get notification
+// @Summary Get notification settings
+// @Description Get notification settings
+// @Tags notification
+// @ID notification-get
+// @Accept json
+// @Produce json
+// @Security ApiKeyAuth
+// @Security BasicAuth
+// @Param page query integer true "current page"
+// @Param limit query integer true "items per page"
+// @Success 200 {object} common.PaginatedListResponse{data=[]Notification}
+// @Router /notification [get]
 func (a *api) Get(c *gin.Context) {
 	notification, err := a.store.Get()
 	if err == mongo.ErrNoDocuments {
@@ -40,6 +53,21 @@ func (a *api) Get(c *gin.Context) {
 	c.JSON(http.StatusOK, notification)
 }
 
+// Update notification
+// @Summary Update notification settings
+// @Description Update notification settings
+// @Tags notification
+// @ID notification-update
+// @Accept json
+// @Produce json
+// @Security ApiKeyAuth
+// @Security BasicAuth
+// @Param id path string true "type id"
+// @Param body body Notification true "body"
+// @Success 200 {object} Notification
+// @Failure 400 {object} common.ValidationErrorResponse
+// @Failure 404 {object} common.ErrorResponse
+// @Router /notification [put]
 func (a *api) Update(c *gin.Context) {
 	request := Notification{}
 	if err := c.ShouldBindJSON(&request); err != nil {
-- 
2.25.1


From 14ec239d4be298451128209a970b8c03356c3aa3 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Thu, 29 Apr 2021 11:34:29 +0700
Subject: [PATCH 21/66] fixes

---
 lib/api/notification/store.go                 |  6 ++-
 .../features/api/cat/instruction_get.feature  |  3 --
 .../features/api/cat/instruction_rate.feature | 52 +++++++++++++++++--
 .../api/cat/instructionstats_get.feature      |  4 --
 .../api/cat/instructionstats_summary.feature  |  9 ++--
 .../features/api/core/notification.feature    | 23 ++++----
 6 files changed, 65 insertions(+), 32 deletions(-)

diff --git a/lib/api/notification/store.go b/lib/api/notification/store.go
index 150ce0f9..25215eb3 100644
--- a/lib/api/notification/store.go
+++ b/lib/api/notification/store.go
@@ -7,6 +7,8 @@ import (
 	"go.mongodb.org/mongo-driver/mongo/options"
 )
 
+const NotificationID = "notification"
+
 type Store interface {
 	Get() (Notification, error)
 	Update(request Notification) (Notification, error)
@@ -29,7 +31,7 @@ func (s *store) Get() (Notification, error) {
 	defer cancel()
 
 	notification := Notification{}
-	err := s.dbCollection.FindOne(ctx, bson.M{"_id": "notification"}).Decode(&notification)
+	err := s.dbCollection.FindOne(ctx, bson.M{"_id": NotificationID}).Decode(&notification)
 
 	return notification, err
 }
@@ -41,7 +43,7 @@ func (s *store) Update(request Notification) (Notification, error) {
 	notification := Notification{}
 	err := s.dbCollection.FindOneAndUpdate(
 		ctx,
-		bson.M{"_id": "notification"},
+		bson.M{"_id": NotificationID},
 		bson.M{"$set": request},
 		options.FindOneAndUpdate().SetReturnDocument(options.After),
 	).Decode(&notification)
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index 4cf99baf..c5ddd360 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -14,7 +14,6 @@ Feature: get a instruction
           "_id": "test-instruction-to-get-1",
           "type": 0,
           "status": 0,
-          "rating": 0,
           "name": "test-instruction-to-get-1-name",
           "entity_patterns": [
             {
@@ -149,7 +148,6 @@ Feature: get a instruction
           "_id": "test-instruction-to-get-2",
           "type": 1,
           "status": 0,
-          "rating": 0,
           "name": "test-instruction-to-get-2-name",
           "entity_patterns": [
             {
@@ -284,7 +282,6 @@ Feature: get a instruction
       "_id": "test-instruction-to-get-1",
       "type": 0,
       "status": 0,
-      "rating": 0,
       "name": "test-instruction-to-get-1-name",
       "entity_patterns": [
         {
diff --git a/tests/functional/features/api/cat/instruction_rate.feature b/tests/functional/features/api/cat/instruction_rate.feature
index 311739d1..1981ce25 100644
--- a/tests/functional/features/api/cat/instruction_rate.feature
+++ b/tests/functional/features/api/cat/instruction_rate.feature
@@ -150,14 +150,35 @@ Feature: rate an instruction
     When I am authenticated with username "manageruser" and password "test"
     When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
     Then the response code should be 200
-    Then the response body should contain:
+    Then the response body should be:
     """
     {
       "data": [
         {
           "_id": "test-instruction-to-check-rate-notify",
-          "rate_notify": false,
-          "rating": 5
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "avg_complete_time": 0,
+          "created": 1000000019,
+          "execution_count": 2,
+          "last_executed_on": 1596712203,
+          "last_modified": 1596712203,
+          "name": "test-instruction-to-check-rate-notify-name",
+          "ok_alarm_states": 0,
+          "rating": 5,
+          "type": 0
         }
       ],
       "meta": {
@@ -185,8 +206,29 @@ Feature: rate an instruction
       "data": [
         {
           "_id": "test-instruction-to-check-rate-notify",
-          "rate_notify": false,
-          "rating": 4
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "avg_complete_time": 0,
+          "created": 1000000019,
+          "execution_count": 2,
+          "last_executed_on": 1596712203,
+          "last_modified": 1596712203,
+          "name": "test-instruction-to-check-rate-notify-name",
+          "ok_alarm_states": 0,
+          "rating": 4,
+          "type": 0
         }
       ],
       "meta": {
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 45fc5191..78f93f22 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -34,7 +34,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
-          "rate_notify": false,
           "type": 0
         },
         {
@@ -61,7 +60,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
-          "rate_notify": false,
           "type": 1
         }
       ],
@@ -106,7 +104,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
-          "rate_notify": false,
           "type": 0
         },
         {
@@ -133,7 +130,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
-          "rate_notify": false,
           "type": 1
         }
       ],
diff --git a/tests/functional/features/api/cat/instructionstats_summary.feature b/tests/functional/features/api/cat/instructionstats_summary.feature
index 232a80b1..fcf0466b 100644
--- a/tests/functional/features/api/cat/instructionstats_summary.feature
+++ b/tests/functional/features/api/cat/instructionstats_summary.feature
@@ -31,8 +31,7 @@ Feature: get instruction statistics
       "last_modified": 1596712203,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-1-name",
-      "type": 0,
-      "rate_notify": false
+      "type": 0
     }
     """
 
@@ -65,8 +64,7 @@ Feature: get instruction statistics
       "last_modified": 1596712203,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-2-name",
-      "type": 1,
-      "rate_notify": false
+      "type": 1
     }
     """
 
@@ -99,8 +97,7 @@ Feature: get instruction statistics
       "last_modified": 1596712203,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-3-name",
-      "type": 1,
-      "rate_notify": false
+      "type": 1
     }
     """
 
diff --git a/tests/functional/features/api/core/notification.feature b/tests/functional/features/api/core/notification.feature
index 18b6048c..12a10c42 100644
--- a/tests/functional/features/api/core/notification.feature
+++ b/tests/functional/features/api/core/notification.feature
@@ -9,8 +9,18 @@ Feature: update notifications
   Scenario: GET without permissions
     When I am noperms
     When I do GET /api/v4/notification
+    Then the response code should be 403
 
-  Scenario: GET ok
+  Scenario: PUT unauthorized
+    When I do PUT /api/v4/notification
+    Then the response code should be 401
+
+  Scenario: PUT without permissions
+    When I am noperms
+    When I do PUT /api/v4/notification
+    Then the response code should be 403
+
+  Scenario: GET and PUT ok
     When I am admin
     When I do GET /api/v4/notification
     Then the response code should be 200
@@ -26,17 +36,6 @@ Feature: update notifications
       }
     }
     """
-
-  Scenario: PUT unauthorized
-      When I do PUT /api/v4/notification
-      Then the response code should be 401
-
-  Scenario: PUT without permissions
-    When I am noperms
-    When I do PUT /api/v4/notification
-
-  Scenario: PUT ok
-    When I am admin
     When I do PUT /api/v4/notification:
     """
     {
-- 
2.25.1


From c318fe27e70eaf9cab13642d74391f60f975086c Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 30 Apr 2021 12:11:31 +0700
Subject: [PATCH 22/66] add rating migration

---
 .../remediationnextstep/002_migrate_rating.js | 43 +++++++++++++++++++
 1 file changed, 43 insertions(+)
 create mode 100644 database/migrations/remediationnextstep/002_migrate_rating.js

diff --git a/database/migrations/remediationnextstep/002_migrate_rating.js b/database/migrations/remediationnextstep/002_migrate_rating.js
new file mode 100644
index 00000000..4dbd5e56
--- /dev/null
+++ b/database/migrations/remediationnextstep/002_migrate_rating.js
@@ -0,0 +1,43 @@
+(function () {
+    var pipeline = [
+        {
+            $lookup: {
+                from: 'instruction_rating',
+                localField: '_id',
+                foreignField: 'instruction',
+                as: 'rating'
+            }
+        },
+        {
+            $unwind: {
+                path: "$rating",
+                preserveNullAndEmptyArrays: true
+            }
+        },
+        {
+            $group: {
+                _id: "$_id",
+                rating: {
+                    "$avg": "$rating.rating"
+                }
+            }
+        },
+        {
+            $addFields: {
+                "rating": {
+                    "$cond": {
+                        "if":   "$rating",
+                        "then": "$rating",
+                        "else": 0,
+                    }
+                },
+            }
+        }
+    ];
+    var cursor = db.instruction.aggregate(pipeline);
+
+    while (cursor.hasNext()) {
+        var doc = cursor.next();
+        db.instruction.updateOne({_id: doc._id}, {"$set": doc.rating});
+    }
+})();
\ No newline at end of file
-- 
2.25.1


From 0769e46af4061c123e3ba6964862213e55b82540 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 30 Apr 2021 12:20:14 +0700
Subject: [PATCH 23/66] Fix rating migration

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 database/migrations/remediationnextstep/002_migrate_rating.js | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/database/migrations/remediationnextstep/002_migrate_rating.js b/database/migrations/remediationnextstep/002_migrate_rating.js
index 4dbd5e56..726c7127 100644
--- a/database/migrations/remediationnextstep/002_migrate_rating.js
+++ b/database/migrations/remediationnextstep/002_migrate_rating.js
@@ -26,7 +26,7 @@
             $addFields: {
                 "rating": {
                     "$cond": {
-                        "if":   "$rating",
+                        "if": "$rating",
                         "then": "$rating",
                         "else": 0,
                     }
@@ -38,6 +38,6 @@
 
     while (cursor.hasNext()) {
         var doc = cursor.next();
-        db.instruction.updateOne({_id: doc._id}, {"$set": doc.rating});
+        db.instruction.updateOne({_id: doc._id}, {"$set": {rating: doc.rating}});
     }
 })();
\ No newline at end of file
-- 
2.25.1


From da772285efab6bb7116f3f2e608e7cafc972650f Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 30 Apr 2021 12:54:37 +0700
Subject: [PATCH 24/66] set created field in ratings

---
 database/migrations/remediationnextstep/002_migrate_rating.js | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/database/migrations/remediationnextstep/002_migrate_rating.js b/database/migrations/remediationnextstep/002_migrate_rating.js
index 726c7127..46fe7f0d 100644
--- a/database/migrations/remediationnextstep/002_migrate_rating.js
+++ b/database/migrations/remediationnextstep/002_migrate_rating.js
@@ -40,4 +40,7 @@
         var doc = cursor.next();
         db.instruction.updateOne({_id: doc._id}, {"$set": {rating: doc.rating}});
     }
+
+    var date = Math.floor(Date.now() / 1000)
+    db.instruction_rating.updateMany({}, {"$set": {created: date}});
 })();
\ No newline at end of file
-- 
2.25.1


From acf53eb83fd6122bcfdd47dc9beef899516ef8ae Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 27 Apr 2021 11:27:14 +0700
Subject: [PATCH 25/66] Update enforcer adapter

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/security/enforcer.go             |  1 +
 lib/security/mongoadapter/adapter.go | 15 +++------------
 mocks/lib/security/security.go       | 19 +++++++++++++++++++
 3 files changed, 23 insertions(+), 12 deletions(-)

diff --git a/lib/security/enforcer.go b/lib/security/enforcer.go
index 39c3153f..1b8bb01d 100644
--- a/lib/security/enforcer.go
+++ b/lib/security/enforcer.go
@@ -21,6 +21,7 @@ type Enforcer interface {
 	LoadPolicy() error
 	GetRolesForUser(name string, domain ...string) ([]string, error)
 	GetPermissionsForUser(user string, domain ...string) [][]string
+	HasPermissionForUser(user string, permission ...string) bool
 }
 
 type enforcer struct {
diff --git a/lib/security/mongoadapter/adapter.go b/lib/security/mongoadapter/adapter.go
index 0c360c3a..8623a18b 100644
--- a/lib/security/mongoadapter/adapter.go
+++ b/lib/security/mongoadapter/adapter.go
@@ -181,20 +181,14 @@ func (a *adapter) loadRoles(
 					if permBitmasksByName, ok := permBitmasksByType[objConf.Type]; ok {
 						for permName, bitmask := range permBitmasksByName {
 							if permConfig.Bitmask&bitmask == bitmask {
-								model[sec][ptype].Policy = append(
-									model[sec][ptype].Policy,
-									[]string{roleName, objConf.Name, permName},
-								)
+								model.AddPolicy(sec, ptype, []string{roleName, objConf.Name, permName})
 							}
 						}
 					} else {
 						return nil, fmt.Errorf("unknown config type \"%s\"", objConf.Type)
 					}
 				} else if permConfig.Bitmask&libmodel.PermissionBitmaskCan == libmodel.PermissionBitmaskCan {
-					model[sec][ptype].Policy = append(
-						model[sec][ptype].Policy,
-						[]string{roleName, objConf.Name, libmodel.PermissionCan},
-					)
+					model.AddPolicy(sec, ptype, []string{roleName, objConf.Name, libmodel.PermissionCan})
 				}
 			}
 		}
@@ -245,10 +239,7 @@ func (a *adapter) loadSubjects(
 		subjectID := line.ID
 
 		if roleName, ok := roleNamesByID[line.Role]; ok {
-			model[sec][ptype].Policy = append(
-				model[sec][ptype].Policy,
-				[]string{subjectID, roleName},
-			)
+			model.AddPolicy(sec, ptype, []string{subjectID, roleName})
 		}
 	}
 
diff --git a/mocks/lib/security/security.go b/mocks/lib/security/security.go
index 6fe5bc59..657bfb59 100644
--- a/mocks/lib/security/security.go
+++ b/mocks/lib/security/security.go
@@ -93,6 +93,25 @@ func (mr *MockEnforcerMockRecorder) GetRolesForUser(arg0 interface{}, arg1 ...in
 	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRolesForUser", reflect.TypeOf((*MockEnforcer)(nil).GetRolesForUser), varargs...)
 }
 
+// HasPermissionForUser mocks base method
+func (m *MockEnforcer) HasPermissionForUser(arg0 string, arg1 ...string) bool {
+	m.ctrl.T.Helper()
+	varargs := []interface{}{arg0}
+	for _, a := range arg1 {
+		varargs = append(varargs, a)
+	}
+	ret := m.ctrl.Call(m, "HasPermissionForUser", varargs...)
+	ret0, _ := ret[0].(bool)
+	return ret0
+}
+
+// HasPermissionForUser indicates an expected call of HasPermissionForUser
+func (mr *MockEnforcerMockRecorder) HasPermissionForUser(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
+	mr.mock.ctrl.T.Helper()
+	varargs := append([]interface{}{arg0}, arg1...)
+	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasPermissionForUser", reflect.TypeOf((*MockEnforcer)(nil).HasPermissionForUser), varargs...)
+}
+
 // LoadPolicy mocks base method
 func (m *MockEnforcer) LoadPolicy() error {
 	m.ctrl.T.Helper()
-- 
2.25.1


From 18574787cd8f358fa96d989c80fd48e022045f48 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 27 Apr 2021 15:12:47 +0700
Subject: [PATCH 26/66] Feature #3046 : Add new events for auto instruction

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 cmd/engine-axe/dependencies.go                |  5 +-
 .../executor/instruction_executor.go          | 58 ++++++++++++-------
 lib/canopsis/types/alarm_change.go            | 23 +++++---
 lib/canopsis/types/event.go                   | 27 ++++++---
 lib/canopsis/types/model_alarm.go             | 24 +++++---
 .../autoinstructionexecution_start.feature    | 40 ++++++-------
 6 files changed, 111 insertions(+), 66 deletions(-)

diff --git a/cmd/engine-axe/dependencies.go b/cmd/engine-axe/dependencies.go
index 8972f49e..38afb7b5 100644
--- a/cmd/engine-axe/dependencies.go
+++ b/cmd/engine-axe/dependencies.go
@@ -269,7 +269,10 @@ func (m DependencyMaker) depOperationExecutor(
 	container.Set(types.EventTypeInstructionCompleted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionAborted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionFailed, executor.NewInstructionExecutor())
-	container.Set(types.EventTypeInstructionAlreadyRunning, executor.NewInstructionExecutor())
+	container.Set(types.EventTypeAutoInstructionStarted, executor.NewInstructionExecutor())
+	container.Set(types.EventTypeAutoInstructionCompleted, executor.NewInstructionExecutor())
+	container.Set(types.EventTypeAutoInstructionFailed, executor.NewInstructionExecutor())
+	container.Set(types.EventTypeAutoInstructionAlreadyRunning, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionJobStarted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionJobCompleted, executor.NewInstructionExecutor())
 	container.Set(types.EventTypeInstructionJobAborted, executor.NewInstructionExecutor())
diff --git a/lib/canopsis/operation/executor/instruction_executor.go b/lib/canopsis/operation/executor/instruction_executor.go
index 77af05ab..484beadf 100644
--- a/lib/canopsis/operation/executor/instruction_executor.go
+++ b/lib/canopsis/operation/executor/instruction_executor.go
@@ -14,30 +14,44 @@ type instructionExecutor struct {
 func NewInstructionExecutor() operation.Executor {
 	return &instructionExecutor{
 		alarmStepTypeMap: map[string]string{
-			types.EventTypeInstructionStarted:        types.AlarmStepInstructionStart,
-			types.EventTypeInstructionPaused:         types.AlarmStepInstructionPause,
-			types.EventTypeInstructionResumed:        types.AlarmStepInstructionResume,
-			types.EventTypeInstructionCompleted:      types.AlarmStepInstructionComplete,
-			types.EventTypeInstructionAborted:        types.AlarmStepInstructionAbort,
-			types.EventTypeInstructionFailed:         types.AlarmStepInstructionFail,
-			types.EventTypeInstructionAlreadyRunning: types.AlarmStepInstructionAlreadyRunning,
-			types.EventTypeInstructionJobStarted:     types.AlarmStepInstructionJobStart,
-			types.EventTypeInstructionJobCompleted:   types.AlarmStepInstructionJobComplete,
-			types.EventTypeInstructionJobAborted:     types.AlarmStepInstructionJobAbort,
-			types.EventTypeInstructionJobFailed:      types.AlarmStepInstructionJobFail,
+			// Manual instruction
+			types.EventTypeInstructionStarted:   types.AlarmStepInstructionStart,
+			types.EventTypeInstructionPaused:    types.AlarmStepInstructionPause,
+			types.EventTypeInstructionResumed:   types.AlarmStepInstructionResume,
+			types.EventTypeInstructionCompleted: types.AlarmStepInstructionComplete,
+			types.EventTypeInstructionFailed:    types.AlarmStepInstructionFail,
+			// Auto instruction
+			types.EventTypeAutoInstructionStarted:        types.AlarmStepAutoInstructionStart,
+			types.EventTypeAutoInstructionCompleted:      types.AlarmStepAutoInstructionComplete,
+			types.EventTypeAutoInstructionFailed:         types.AlarmStepAutoInstructionFail,
+			types.EventTypeAutoInstructionAlreadyRunning: types.AlarmStepAutoInstructionAlreadyRunning,
+			// Manual and auto instruction
+			types.EventTypeInstructionAborted: types.AlarmStepInstructionAbort,
+			// Job
+			types.EventTypeInstructionJobStarted:   types.AlarmStepInstructionJobStart,
+			types.EventTypeInstructionJobCompleted: types.AlarmStepInstructionJobComplete,
+			types.EventTypeInstructionJobAborted:   types.AlarmStepInstructionJobAbort,
+			types.EventTypeInstructionJobFailed:    types.AlarmStepInstructionJobFail,
 		},
 		alarmChangeTypeMap: map[string]types.AlarmChangeType{
-			types.EventTypeInstructionStarted:        types.AlarmChangeTypeInstructionStart,
-			types.EventTypeInstructionPaused:         types.AlarmChangeTypeInstructionPause,
-			types.EventTypeInstructionResumed:        types.AlarmChangeTypeInstructionResume,
-			types.EventTypeInstructionCompleted:      types.AlarmChangeTypeInstructionComplete,
-			types.EventTypeInstructionAborted:        types.AlarmChangeTypeInstructionAbort,
-			types.EventTypeInstructionFailed:         types.AlarmChangeTypeInstructionFail,
-			types.EventTypeInstructionAlreadyRunning: types.AlarmChangeTypeInstructionAlreadyRunning,
-			types.EventTypeInstructionJobStarted:     types.AlarmChangeTypeInstructionJobStart,
-			types.EventTypeInstructionJobCompleted:   types.AlarmChangeTypeInstructionJobComplete,
-			types.EventTypeInstructionJobAborted:     types.AlarmChangeTypeInstructionJobAbort,
-			types.EventTypeInstructionJobFailed:      types.AlarmChangeTypeInstructionJobFail,
+			// Manual instruction
+			types.EventTypeInstructionStarted:   types.AlarmChangeTypeInstructionStart,
+			types.EventTypeInstructionPaused:    types.AlarmChangeTypeInstructionPause,
+			types.EventTypeInstructionResumed:   types.AlarmChangeTypeInstructionResume,
+			types.EventTypeInstructionCompleted: types.AlarmChangeTypeInstructionComplete,
+			types.EventTypeInstructionFailed:    types.AlarmChangeTypeInstructionFail,
+			// Auto instruction
+			types.EventTypeAutoInstructionStarted:        types.AlarmChangeTypeAutoInstructionStart,
+			types.EventTypeAutoInstructionCompleted:      types.AlarmChangeTypeAutoInstructionComplete,
+			types.EventTypeAutoInstructionFailed:         types.AlarmChangeTypeAutoInstructionFail,
+			types.EventTypeAutoInstructionAlreadyRunning: types.AlarmChangeTypeAutoInstructionAlreadyRunning,
+			// Manual and auto instruction
+			types.EventTypeInstructionAborted: types.AlarmChangeTypeInstructionAbort,
+			// Job
+			types.EventTypeInstructionJobStarted:   types.AlarmChangeTypeInstructionJobStart,
+			types.EventTypeInstructionJobCompleted: types.AlarmChangeTypeInstructionJobComplete,
+			types.EventTypeInstructionJobAborted:   types.AlarmChangeTypeInstructionJobAbort,
+			types.EventTypeInstructionJobFailed:    types.AlarmChangeTypeInstructionJobFail,
 		},
 	}
 }
diff --git a/lib/canopsis/types/alarm_change.go b/lib/canopsis/types/alarm_change.go
index 303993dd..0d6633f5 100644
--- a/lib/canopsis/types/alarm_change.go
+++ b/lib/canopsis/types/alarm_change.go
@@ -37,19 +37,26 @@ const (
 	// AlarmChangeTypeDeclareTicketWebhook is triggered after declare ticket creation by webhook.
 	AlarmChangeTypeDeclareTicketWebhook AlarmChangeType = "declareticketwebhook"
 
-	// Following consts are used for instruction.
-	AlarmChangeTypeInstructionStart       AlarmChangeType = "instructionstart"
-	AlarmChangeTypeInstructionPause       AlarmChangeType = "instructionpause"
-	AlarmChangeTypeInstructionResume      AlarmChangeType = "instructionresume"
-	AlarmChangeTypeInstructionComplete    AlarmChangeType = "instructioncomplete"
-	AlarmChangeTypeInstructionAbort       AlarmChangeType = "instructionabort"
-	AlarmChangeTypeInstructionFail        AlarmChangeType = "instructionfail"
-	AlarmChangeTypeInstructionAlreadyRunning AlarmChangeType = "instructionalreadyrunning"
+	// Following change types are used for manual instruction execution.
+	AlarmChangeTypeInstructionStart    AlarmChangeType = "instructionstart"
+	AlarmChangeTypeInstructionPause    AlarmChangeType = "instructionpause"
+	AlarmChangeTypeInstructionResume   AlarmChangeType = "instructionresume"
+	AlarmChangeTypeInstructionComplete AlarmChangeType = "instructioncomplete"
+	AlarmChangeTypeInstructionFail     AlarmChangeType = "instructionfail"
+	// AlarmChangeTypeInstructionAbort is used for manual and auto instruction execution.
+	AlarmChangeTypeInstructionAbort AlarmChangeType = "instructionabort"
+	// Following change types are used for auto instruction execution.
+	AlarmChangeTypeAutoInstructionStart          AlarmChangeType = "autoinstructionstart"
+	AlarmChangeTypeAutoInstructionComplete       AlarmChangeType = "autoinstructioncomplete"
+	AlarmChangeTypeAutoInstructionFail           AlarmChangeType = "autoinstructionfail"
+	AlarmChangeTypeAutoInstructionAlreadyRunning AlarmChangeType = "autoinstructionalreadyrunning"
+	// Following change types are used for job execution.
 	AlarmChangeTypeInstructionJobStart    AlarmChangeType = "instructionjobstart"
 	AlarmChangeTypeInstructionJobComplete AlarmChangeType = "instructionjobcomplete"
 	AlarmChangeTypeInstructionJobAbort    AlarmChangeType = "instructionjobabort"
 	AlarmChangeTypeInstructionJobFail     AlarmChangeType = "instructionjobfail"
 
+	// Following change types are used for junit.
 	AlarmChangeTypeJunitTestSuiteUpdate   AlarmChangeType = "junittestsuiteupdate"
 	AlarmChangeTypeJunitTestCaseUpdate    AlarmChangeType = "junittestcaseupdate"
 )
diff --git a/lib/canopsis/types/event.go b/lib/canopsis/types/event.go
index 673db156..0175cae5 100644
--- a/lib/canopsis/types/event.go
+++ b/lib/canopsis/types/event.go
@@ -79,18 +79,29 @@ const (
 	EventManualMetaAlarmUpdate       = "manual_metaalarm_update"
 	EventTypeActivate                = "activate"
 	EventTypeRunDelayedScenario      = "run_delayed_scenario"
-	EventTypeInstructionStarted      = "instructionstarted"
-	EventTypeInstructionPaused       = "instructionpaused"
-	EventTypeInstructionResumed      = "instructionresumed"
-	EventTypeInstructionCompleted    = "instructioncompleted"
-	EventTypeInstructionAborted      = "instructionaborted"
-	EventTypeInstructionFailed       = "instructionfailed"
-	EventTypeInstructionAlreadyRunning = "instructionalreadyrunning"
-	EventTypeInstructionJobStart     = "instructionjobstart"
+
+	// Following event types are used to add manual instruction execution to alarm steps.
+	EventTypeInstructionStarted   = "instructionstarted"
+	EventTypeInstructionPaused    = "instructionpaused"
+	EventTypeInstructionResumed   = "instructionresumed"
+	EventTypeInstructionCompleted = "instructioncompleted"
+	EventTypeInstructionFailed    = "instructionfailed"
+	// EventTypeInstructionAborted is the same for manual and auto instructions.
+	EventTypeInstructionAborted = "instructionaborted"
+	// Following event types are used to add auto instruction execution to alarm steps.
+	EventTypeAutoInstructionStarted        = "autoinstructionstarted"
+	EventTypeAutoInstructionCompleted      = "autoinstructioncompleted"
+	EventTypeAutoInstructionFailed         = "autoinstructionfailed"
+	EventTypeAutoInstructionAlreadyRunning = "autoinstructionalreadyrunning"
+	// Following event types are used to add job execution to alarm steps. Events are
+	// the same for manual and auto instructions.
 	EventTypeInstructionJobStarted   = "instructionjobstarted"
 	EventTypeInstructionJobCompleted = "instructionjobcompleted"
 	EventTypeInstructionJobAborted   = "instructionjobaborted"
 	EventTypeInstructionJobFailed    = "instructionjobfailed"
+	// EventTypeInstructionJobStart is used to start job for manual instruction.
+	EventTypeInstructionJobStart = "instructionjobstart"
+
 	// EventTypeRecomputeEntityService is used to recompute service context graph and state.
 	EventTypeRecomputeEntityService = "recomputeentityservice"
 	// EventTypeUpdateEntityService is used to update service cache in engines.
diff --git a/lib/canopsis/types/model_alarm.go b/lib/canopsis/types/model_alarm.go
index bf1e37a0..6b2e1b8e 100644
--- a/lib/canopsis/types/model_alarm.go
+++ b/lib/canopsis/types/model_alarm.go
@@ -69,17 +69,27 @@ const (
 	AlarmStepPbhEnter               = "pbhenter"
 	AlarmStepPbhLeave               = "pbhleave"
 	AlarmStepMetaAlarmAttach        = "metaalarmattach"
-	AlarmStepInstructionStart       = "instructionstart"
-	AlarmStepInstructionPause       = "instructionpause"
-	AlarmStepInstructionResume      = "instructionresume"
-	AlarmStepInstructionComplete    = "instructioncomplete"
-	AlarmStepInstructionAbort       = "instructionabort"
-	AlarmStepInstructionFail        = "instructionfail"
-	AlarmStepInstructionAlreadyRunning = "instructionalreadyrunning"
+
+	// Following alarm steps are used for manual instruction execution.
+	AlarmStepInstructionStart    = "instructionstart"
+	AlarmStepInstructionPause    = "instructionpause"
+	AlarmStepInstructionResume   = "instructionresume"
+	AlarmStepInstructionComplete = "instructioncomplete"
+	AlarmStepInstructionFail     = "instructionfail"
+	// AlarmStepInstructionAbort are used for manual and auto instruction execution.
+	AlarmStepInstructionAbort = "instructionabort"
+	// Following alarm steps are used for manual instruction execution.
+	AlarmStepAutoInstructionStart          = "autoinstructionstart"
+	AlarmStepAutoInstructionComplete       = "autoinstructioncomplete"
+	AlarmStepAutoInstructionFail           = "autoinstructionfail"
+	AlarmStepAutoInstructionAlreadyRunning = "autoinstructionalreadyrunning"
+	// Following alarm steps are used for job execution.
 	AlarmStepInstructionJobStart    = "instructionjobstart"
 	AlarmStepInstructionJobComplete = "instructionjobcomplete"
 	AlarmStepInstructionJobAbort    = "instructionjobabort"
 	AlarmStepInstructionJobFail     = "instructionjobfail"
+
+	// Following alarm steps are used for junit.
 	AlarmStepJunitTestSuiteUpdate   = "junittestsuiteupdate"
 	AlarmStepJunitTestCaseUpdate    = "junittestcaseupdate"
 )
diff --git a/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
index 62907ae6..6174705f 100644
--- a/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
+++ b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
@@ -30,7 +30,7 @@ Feature: run an auto instruction
               {},
               {},
               {
-                "_t": "instructionstart",
+                "_t": "autoinstructionstart",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name."
               },
@@ -55,12 +55,12 @@ Feature: run an auto instruction
                 "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name. Job test-job-to-run-auto-instruction-2-name."
               },
               {
-                "_t": "instructioncomplete",
+                "_t": "autoinstructioncomplete",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-1-1-name."
               },
               {
-                "_t": "instructionstart",
+                "_t": "autoinstructionstart",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-1-2-name."
               },
@@ -75,7 +75,7 @@ Feature: run an auto instruction
                 "m": "Instruction test-instruction-to-run-auto-instruction-1-2-name. Job test-job-to-run-auto-instruction-1-name."
               },
               {
-                "_t": "instructioncomplete",
+                "_t": "autoinstructioncomplete",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-1-2-name."
               }
@@ -130,7 +130,7 @@ Feature: run an auto instruction
               {},
               {},
               {
-                "_t": "instructionstart",
+                "_t": "autoinstructionstart",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-2-1-name."
               },
@@ -145,7 +145,7 @@ Feature: run an auto instruction
                 "m": "Instruction test-instruction-to-run-auto-instruction-2-1-name. Job test-job-to-run-auto-instruction-1-name."
               },
               {
-                "_t": "instructioncomplete",
+                "_t": "autoinstructioncomplete",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-2-1-name."
               },
@@ -193,7 +193,7 @@ Feature: run an auto instruction
               {},
               {},
               {
-                "_t": "instructionstart",
+                "_t": "autoinstructionstart",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-3-1-name."
               },
@@ -208,12 +208,12 @@ Feature: run an auto instruction
                 "m": "Instruction test-instruction-to-run-auto-instruction-3-1-name. Job test-job-to-run-auto-instruction-3-name."
               },
               {
-                "_t": "instructionfail",
+                "_t": "autoinstructionfail",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-3-1-name."
               },
               {
-                "_t": "instructionstart",
+                "_t": "autoinstructionstart",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-3-2-name."
               },
@@ -228,7 +228,7 @@ Feature: run an auto instruction
                 "m": "Instruction test-instruction-to-run-auto-instruction-3-2-name. Job test-job-to-run-auto-instruction-1-name."
               },
               {
-                "_t": "instructioncomplete",
+                "_t": "autoinstructioncomplete",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-3-2-name."
               }
@@ -283,7 +283,7 @@ Feature: run an auto instruction
              {},
              {},
              {
-               "_t": "instructionstart",
+               "_t": "autoinstructionstart",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
              },
@@ -298,12 +298,12 @@ Feature: run an auto instruction
                "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name. Job test-job-to-run-auto-instruction-1-name."
              },
              {
-               "_t": "instructioncomplete",
+               "_t": "autoinstructioncomplete",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
              },
              {
-               "_t": "instructionstart",
+               "_t": "autoinstructionstart",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-2-name."
              },
@@ -318,7 +318,7 @@ Feature: run an auto instruction
                "m": "Instruction test-instruction-to-run-auto-instruction-4-2-name. Job test-job-to-run-auto-instruction-2-name."
              },
              {
-               "_t": "instructioncomplete",
+               "_t": "autoinstructioncomplete",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-2-name."
              }
@@ -341,7 +341,7 @@ Feature: run an auto instruction
              {},
              {},
              {
-               "_t": "instructionalreadyrunning",
+               "_t": "autoinstructionalreadyrunning",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
              },
@@ -351,12 +351,12 @@ Feature: run an auto instruction
                "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name. Job test-job-to-run-auto-instruction-1-name."
              },
              {
-               "_t": "instructioncomplete",
+               "_t": "autoinstructioncomplete",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
              },
              {
-               "_t": "instructionstart",
+               "_t": "autoinstructionstart",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-3-name."
              },
@@ -371,7 +371,7 @@ Feature: run an auto instruction
                "m": "Instruction test-instruction-to-run-auto-instruction-4-3-name. Job test-job-to-run-auto-instruction-2-name."
              },
              {
-               "_t": "instructioncomplete",
+               "_t": "autoinstructioncomplete",
                "a": "system",
                "m": "Instruction test-instruction-to-run-auto-instruction-4-3-name."
              }
@@ -411,7 +411,7 @@ Feature: run an auto instruction
               {},
               {},
               {
-                "_t": "instructionstart",
+                "_t": "autoinstructionstart",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-5-name."
               },
@@ -426,7 +426,7 @@ Feature: run an auto instruction
                 "m": "Instruction test-instruction-to-run-auto-instruction-5-name. Job test-job-to-run-auto-instruction-4-name."
               },
               {
-                "_t": "instructionfail",
+                "_t": "autoinstructionfail",
                 "a": "system",
                 "m": "Instruction test-instruction-to-run-auto-instruction-5-name."
               }
-- 
2.25.1


From 47dabb52b8d42dfb41c58db7d2e6f433f12a8b94 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 28 Apr 2021 13:18:14 +0700
Subject: [PATCH 27/66] Feature #3042 : Update alarm list API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 docs/docs.go                                  | 226 +++++++++++++++---
 docs/swagger.json                             | 226 +++++++++++++++---
 docs/swagger.yaml                             | 152 ++++++++++--
 fixtures/default_entities.json                |  17 ++
 fixtures/instruction.json                     | 220 +++++++++++++----
 fixtures/periodical_alarm.json                |  71 ++++++
 lib/api/alarm/api.go                          |   1 +
 lib/api/alarm/models.go                       |  49 ++--
 lib/api/alarm/store.go                        | 179 ++++++++++----
 .../features/api/cat/instruction_get.feature  |  39 +++
 .../features/api/core/alarm_get.feature       | 130 ++++++++--
 .../engines/remediation/alarm_get.feature     | 113 +++++++++
 12 files changed, 1189 insertions(+), 234 deletions(-)
 create mode 100644 tests/functional/features/engines/remediation/alarm_get.feature

diff --git a/docs/docs.go b/docs/docs.go
index 0f9a03a2..49ca182a 100644
--- a/docs/docs.go
+++ b/docs/docs.go
@@ -123,11 +123,47 @@ var doc = `{
                         "name": "correlation",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "name": "filter",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "boolean",
                         "name": "manual",
@@ -157,16 +193,6 @@ var doc = `{
                         "type": "integer",
                         "name": "tstop",
                         "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "with_instructions",
-                        "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "without_instructions",
-                        "in": "query"
                     }
                 ],
                 "responses": {
@@ -224,11 +250,47 @@ var doc = `{
                         "name": "correlation",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "name": "filter",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "boolean",
                         "name": "manual",
@@ -285,7 +347,7 @@ var doc = `{
                         "in": "query"
                     },
                     {
-                        "type": "string",
+                        "type": "boolean",
                         "name": "with_instructions",
                         "in": "query"
                     },
@@ -293,11 +355,6 @@ var doc = `{
                         "type": "boolean",
                         "name": "with_steps",
                         "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "without_instructions",
-                        "in": "query"
                     }
                 ],
                 "responses": {
@@ -458,11 +515,47 @@ var doc = `{
                         "name": "correlation",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "name": "filter",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "integer",
                         "name": "limit",
@@ -524,7 +617,7 @@ var doc = `{
                         "in": "query"
                     },
                     {
-                        "type": "string",
+                        "type": "boolean",
                         "name": "with_instructions",
                         "in": "query"
                     },
@@ -532,11 +625,6 @@ var doc = `{
                         "type": "boolean",
                         "name": "with_steps",
                         "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "without_instructions",
-                        "in": "query"
                     }
                 ],
                 "responses": {
@@ -7491,6 +7579,12 @@ var doc = `{
                         "additionalProperties": true
                     }
                 },
+                "is_all_auto_instructions_completed": {
+                    "type": "boolean"
+                },
+                "is_auto_instruction_running": {
+                    "type": "boolean"
+                },
                 "links": {
                     "type": "object",
                     "additionalProperties": true
@@ -7789,9 +7883,33 @@ var doc = `{
                 "correlation": {
                     "type": "boolean"
                 },
+                "exclude_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "exclude_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "filter": {
                     "type": "string"
                 },
+                "include_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "include_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "manual": {
                     "type": "boolean"
                 },
@@ -7826,13 +7944,10 @@ var doc = `{
                     "type": "boolean"
                 },
                 "with_instructions": {
-                    "type": "string"
+                    "type": "boolean"
                 },
                 "with_steps": {
                     "type": "boolean"
-                },
-                "without_instructions": {
-                    "type": "string"
                 }
             }
         },
@@ -7862,9 +7977,33 @@ var doc = `{
                 "correlation": {
                     "type": "boolean"
                 },
+                "exclude_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "exclude_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "filter": {
                     "type": "string"
                 },
+                "include_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "include_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "manual": {
                     "type": "boolean"
                 },
@@ -7882,12 +8021,6 @@ var doc = `{
                 },
                 "tstop": {
                     "type": "integer"
-                },
-                "with_instructions": {
-                    "type": "string"
-                },
-                "without_instructions": {
-                    "type": "string"
                 }
             }
         },
@@ -7933,9 +8066,33 @@ var doc = `{
                 "correlation": {
                     "type": "boolean"
                 },
+                "exclude_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "exclude_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "filter": {
                     "type": "string"
                 },
+                "include_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "include_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "limit": {
                     "type": "integer"
                 },
@@ -7973,13 +8130,10 @@ var doc = `{
                     "type": "boolean"
                 },
                 "with_instructions": {
-                    "type": "string"
+                    "type": "boolean"
                 },
                 "with_steps": {
                     "type": "boolean"
-                },
-                "without_instructions": {
-                    "type": "string"
                 }
             }
         },
diff --git a/docs/swagger.json b/docs/swagger.json
index 8b2e8c84..26d8a2c2 100644
--- a/docs/swagger.json
+++ b/docs/swagger.json
@@ -107,11 +107,47 @@
                         "name": "correlation",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "name": "filter",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "boolean",
                         "name": "manual",
@@ -141,16 +177,6 @@
                         "type": "integer",
                         "name": "tstop",
                         "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "with_instructions",
-                        "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "without_instructions",
-                        "in": "query"
                     }
                 ],
                 "responses": {
@@ -208,11 +234,47 @@
                         "name": "correlation",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "name": "filter",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "boolean",
                         "name": "manual",
@@ -269,7 +331,7 @@
                         "in": "query"
                     },
                     {
-                        "type": "string",
+                        "type": "boolean",
                         "name": "with_instructions",
                         "in": "query"
                     },
@@ -277,11 +339,6 @@
                         "type": "boolean",
                         "name": "with_steps",
                         "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "without_instructions",
-                        "in": "query"
                     }
                 ],
                 "responses": {
@@ -442,11 +499,47 @@
                         "name": "correlation",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "exclude_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "name": "filter",
                         "in": "query"
                     },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "integer"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instruction_types",
+                        "in": "query"
+                    },
+                    {
+                        "type": "array",
+                        "items": {
+                            "type": "string"
+                        },
+                        "collectionFormat": "multi",
+                        "name": "include_instructions",
+                        "in": "query"
+                    },
                     {
                         "type": "integer",
                         "name": "limit",
@@ -508,7 +601,7 @@
                         "in": "query"
                     },
                     {
-                        "type": "string",
+                        "type": "boolean",
                         "name": "with_instructions",
                         "in": "query"
                     },
@@ -516,11 +609,6 @@
                         "type": "boolean",
                         "name": "with_steps",
                         "in": "query"
-                    },
-                    {
-                        "type": "string",
-                        "name": "without_instructions",
-                        "in": "query"
                     }
                 ],
                 "responses": {
@@ -7475,6 +7563,12 @@
                         "additionalProperties": true
                     }
                 },
+                "is_all_auto_instructions_completed": {
+                    "type": "boolean"
+                },
+                "is_auto_instruction_running": {
+                    "type": "boolean"
+                },
                 "links": {
                     "type": "object",
                     "additionalProperties": true
@@ -7773,9 +7867,33 @@
                 "correlation": {
                     "type": "boolean"
                 },
+                "exclude_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "exclude_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "filter": {
                     "type": "string"
                 },
+                "include_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "include_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "manual": {
                     "type": "boolean"
                 },
@@ -7810,13 +7928,10 @@
                     "type": "boolean"
                 },
                 "with_instructions": {
-                    "type": "string"
+                    "type": "boolean"
                 },
                 "with_steps": {
                     "type": "boolean"
-                },
-                "without_instructions": {
-                    "type": "string"
                 }
             }
         },
@@ -7846,9 +7961,33 @@
                 "correlation": {
                     "type": "boolean"
                 },
+                "exclude_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "exclude_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "filter": {
                     "type": "string"
                 },
+                "include_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "include_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "manual": {
                     "type": "boolean"
                 },
@@ -7866,12 +8005,6 @@
                 },
                 "tstop": {
                     "type": "integer"
-                },
-                "with_instructions": {
-                    "type": "string"
-                },
-                "without_instructions": {
-                    "type": "string"
                 }
             }
         },
@@ -7917,9 +8050,33 @@
                 "correlation": {
                     "type": "boolean"
                 },
+                "exclude_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "exclude_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "filter": {
                     "type": "string"
                 },
+                "include_instruction_types": {
+                    "type": "array",
+                    "items": {
+                        "type": "integer"
+                    }
+                },
+                "include_instructions": {
+                    "type": "array",
+                    "items": {
+                        "type": "string"
+                    }
+                },
                 "limit": {
                     "type": "integer"
                 },
@@ -7957,13 +8114,10 @@
                     "type": "boolean"
                 },
                 "with_instructions": {
-                    "type": "string"
+                    "type": "boolean"
                 },
                 "with_steps": {
                     "type": "boolean"
-                },
-                "without_instructions": {
-                    "type": "string"
                 }
             }
         },
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
index 0ba7a985..cba30cb2 100644
--- a/docs/swagger.yaml
+++ b/docs/swagger.yaml
@@ -67,6 +67,10 @@ definitions:
           additionalProperties: true
           type: object
         type: object
+      is_all_auto_instructions_completed:
+        type: boolean
+      is_auto_instruction_running:
+        type: boolean
       links:
         additionalProperties: true
         type: object
@@ -268,8 +272,24 @@ definitions:
         type: string
       correlation:
         type: boolean
+      exclude_instruction_types:
+        items:
+          type: integer
+        type: array
+      exclude_instructions:
+        items:
+          type: string
+        type: array
       filter:
         type: string
+      include_instruction_types:
+        items:
+          type: integer
+        type: array
+      include_instructions:
+        items:
+          type: string
+        type: array
       manual:
         type: boolean
       opened:
@@ -293,11 +313,9 @@ definitions:
       with_consequences:
         type: boolean
       with_instructions:
-        type: string
+        type: boolean
       with_steps:
         type: boolean
-      without_instructions:
-        type: string
     type: object
   alarm.ExportResponse:
     properties:
@@ -316,8 +334,24 @@ definitions:
         type: string
       correlation:
         type: boolean
+      exclude_instruction_types:
+        items:
+          type: integer
+        type: array
+      exclude_instructions:
+        items:
+          type: string
+        type: array
       filter:
         type: string
+      include_instruction_types:
+        items:
+          type: integer
+        type: array
+      include_instructions:
+        items:
+          type: string
+        type: array
       manual:
         type: boolean
       opened:
@@ -330,10 +364,6 @@ definitions:
         type: integer
       tstop:
         type: integer
-      with_instructions:
-        type: string
-      without_instructions:
-        type: string
     type: object
   alarm.InstructionWithAlarms:
     properties:
@@ -363,8 +393,24 @@ definitions:
         type: string
       correlation:
         type: boolean
+      exclude_instruction_types:
+        items:
+          type: integer
+        type: array
+      exclude_instructions:
+        items:
+          type: string
+        type: array
       filter:
         type: string
+      include_instruction_types:
+        items:
+          type: integer
+        type: array
+      include_instructions:
+        items:
+          type: string
+        type: array
       limit:
         type: integer
       manual:
@@ -390,11 +436,9 @@ definitions:
       with_consequences:
         type: boolean
       with_instructions:
-        type: string
+        type: boolean
       with_steps:
         type: boolean
-      without_instructions:
-        type: string
     type: object
   alarm.MetaAlarmRule:
     properties:
@@ -3402,9 +3446,33 @@ paths:
       - in: query
         name: correlation
         type: boolean
+      - collectionFormat: multi
+        in: query
+        items:
+          type: integer
+        name: exclude_instruction_types
+        type: array
+      - collectionFormat: multi
+        in: query
+        items:
+          type: string
+        name: exclude_instructions
+        type: array
       - in: query
         name: filter
         type: string
+      - collectionFormat: multi
+        in: query
+        items:
+          type: integer
+        name: include_instruction_types
+        type: array
+      - collectionFormat: multi
+        in: query
+        items:
+          type: string
+        name: include_instructions
+        type: array
       - in: query
         name: manual
         type: boolean
@@ -3423,12 +3491,6 @@ paths:
       - in: query
         name: tstop
         type: integer
-      - in: query
-        name: with_instructions
-        type: string
-      - in: query
-        name: without_instructions
-        type: string
       produces:
       - application/json
       responses:
@@ -3463,9 +3525,33 @@ paths:
       - in: query
         name: correlation
         type: boolean
+      - collectionFormat: multi
+        in: query
+        items:
+          type: integer
+        name: exclude_instruction_types
+        type: array
+      - collectionFormat: multi
+        in: query
+        items:
+          type: string
+        name: exclude_instructions
+        type: array
       - in: query
         name: filter
         type: string
+      - collectionFormat: multi
+        in: query
+        items:
+          type: integer
+        name: include_instruction_types
+        type: array
+      - collectionFormat: multi
+        in: query
+        items:
+          type: string
+        name: include_instructions
+        type: array
       - in: query
         name: manual
         type: boolean
@@ -3501,13 +3587,10 @@ paths:
         type: boolean
       - in: query
         name: with_instructions
-        type: string
+        type: boolean
       - in: query
         name: with_steps
         type: boolean
-      - in: query
-        name: without_instructions
-        type: string
       produces:
       - application/json
       responses:
@@ -3606,9 +3689,33 @@ paths:
       - in: query
         name: correlation
         type: boolean
+      - collectionFormat: multi
+        in: query
+        items:
+          type: integer
+        name: exclude_instruction_types
+        type: array
+      - collectionFormat: multi
+        in: query
+        items:
+          type: string
+        name: exclude_instructions
+        type: array
       - in: query
         name: filter
         type: string
+      - collectionFormat: multi
+        in: query
+        items:
+          type: integer
+        name: include_instruction_types
+        type: array
+      - collectionFormat: multi
+        in: query
+        items:
+          type: string
+        name: include_instructions
+        type: array
       - in: query
         name: limit
         type: integer
@@ -3647,13 +3754,10 @@ paths:
         type: boolean
       - in: query
         name: with_instructions
-        type: string
+        type: boolean
       - in: query
         name: with_steps
         type: boolean
-      - in: query
-        name: without_instructions
-        type: string
       produces:
       - application/json
       responses:
diff --git a/fixtures/default_entities.json b/fixtures/default_entities.json
index 1c1d2ce2..1409095e 100644
--- a/fixtures/default_entities.json
+++ b/fixtures/default_entities.json
@@ -153,6 +153,23 @@
     "component": "test-alarm-with-instruction-component",
     "impact_level": 1
   },
+  {
+    "_id": "test-alarm-with-instruction-resource-4/test-alarm-with-instruction-component",
+    "depends": ["test-alarm-with-instruction-connector/test-alarm-with-instruction-connectorname"],
+    "enable_history": [1597030096],
+    "enabled": true,
+    "impact": ["test-alarm-with-instruction-component"],
+    "infos": {
+      "customer": {
+        "value": "test-alarm-with-instruction-customer"
+      }
+    },
+    "measurements": null,
+    "name": "test-alarm-with-instruction-resource-4",
+    "type": "resource",
+    "component": "test-alarm-with-instruction-component",
+    "impact_level": 1
+  },
   {
     "_id": "test-alarm-get-resource-4/test-alarm-get-component",
     "depends": ["test-alarm-get-connector/test-alarm-get-connectorname"],
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index ec61ebcd..ebb0a5f9 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -73,7 +73,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -104,7 +106,9 @@
     "priority": 0,
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -145,7 +149,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000001
   },
   {
@@ -186,7 +192,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000002
   },
   {
@@ -227,7 +235,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000001
   },
   {
@@ -268,7 +278,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000001
   },
   {
@@ -311,7 +323,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000000
   },
   {
@@ -338,7 +352,9 @@
     "priority": 1,
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000000
   },
   {
@@ -407,7 +423,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000003
   },
   {
@@ -478,7 +496,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000004
   },
   {
@@ -547,7 +567,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000008
   },
   {
@@ -616,7 +638,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -685,7 +709,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000011
   },
   {
@@ -726,7 +752,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000012
   },
   {
@@ -767,7 +795,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000013
   },
   {
@@ -808,7 +838,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000014
   },
   {
@@ -849,7 +881,37 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
+    "created": 1000000015
+  },
+  {
+    "_id": "test-instruction-to-auto-instruction-filter",
+    "type": 1,
+    "name": "test-instruction-to-auto-instruction-filter-name",
+    "alarm_patterns": [
+      {
+        "_id": "test-alarm-with-instruction-4"
+      }
+    ],
+    "description": "test-instruction-to-auto-instruction-filter-description",
+    "author": "test-instruction-to-auto-instruction-filter-author",
+    "enabled": true,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000015
   },
   {
@@ -890,7 +952,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000016
   },
   {
@@ -931,7 +995,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000017
   },
   {
@@ -972,7 +1038,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000018
   },
   {
@@ -1013,7 +1081,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000019
   },
   {
@@ -1054,7 +1124,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000019
   },
   {
@@ -1139,7 +1211,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000019
   },
   {
@@ -1182,7 +1256,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000019
   },
   {
@@ -1232,7 +1308,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000019
   },
   {
@@ -1259,7 +1337,9 @@
       "pbh-type-for-instruction-with-pbehavior-2"
     ],
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1282,7 +1362,9 @@
       "unit": "s"
     },
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1309,7 +1391,9 @@
       "pbh-type-for-instruction-with-pbehavior-2"
     ],
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1336,7 +1420,9 @@
       "test2"
     ],
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1367,7 +1453,9 @@
     "author": "test-instruction-to-run-auto-instruction-1-1-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1394,7 +1482,9 @@
     "author": "test-instruction-to-run-auto-instruction-1-2-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1421,7 +1511,9 @@
     "author": "test-instruction-to-run-auto-instruction-2-1-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1448,7 +1540,9 @@
     "author": "test-instruction-to-run-auto-instruction-2-2-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1475,7 +1569,9 @@
     "author": "test-instruction-to-run-auto-instruction-3-1-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1502,7 +1598,9 @@
     "author": "test-instruction-to-run-auto-instruction-3-2-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1532,7 +1630,9 @@
     "author": "test-instruction-to-run-auto-instruction-4-1-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1559,7 +1659,9 @@
     "author": "test-instruction-to-run-auto-instruction-4-2-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1586,7 +1688,9 @@
     "author": "test-instruction-to-run-auto-instruction-4-3-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1613,7 +1717,9 @@
     "author": "test-instruction-to-run-auto-instruction-5-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1693,7 +1799,9 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1724,7 +1832,9 @@
     "priority": 12,
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1803,7 +1913,9 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1834,7 +1946,9 @@
     "priority": 12,
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -1864,7 +1978,9 @@
     },
     "priority": 13,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -2012,7 +2128,9 @@
     },
     "priority": 13,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -2091,7 +2209,9 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -2169,7 +2289,9 @@
       "unit": "s"
     },
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   },
   {
@@ -2200,7 +2322,9 @@
     "author": "test-instruction-to-not-run-auto-instruction-manually-author",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/periodical_alarm.json b/fixtures/periodical_alarm.json
index 0a691f1c..34fa4520 100644
--- a/fixtures/periodical_alarm.json
+++ b/fixtures/periodical_alarm.json
@@ -2714,6 +2714,77 @@
       }
     }
   },
+  {
+    "_id": "test-alarm-with-instruction-4",
+    "d": "test-alarm-with-instruction-resource-4/test-alarm-with-instruction-component",
+    "t": 1596942720,
+    "v": {
+      "state": {
+        "_t": "stateinc",
+        "t": 1596942720,
+        "a": "test-alarm-with-instruction-connector.test-alarm-with-instruction-connectorname",
+        "m": "test-alarm-with-instruction alarm",
+        "val": 3
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1596942720,
+        "a": "test-alarm-with-instruction-connector.test-alarm-with-instruction-connectorname",
+        "m": "test-alarm-with-instruction alarm",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1596942720,
+          "a": "test-alarm-with-instruction-connector.test-alarm-with-instruction-connectorname",
+          "m": "test-alarm-with-instruction alarm",
+          "val": 3
+        },
+        {
+          "_t": "statusinc",
+          "t": 1596942720,
+          "a": "test-alarm-with-instruction-connector.test-alarm-with-instruction-connectorname",
+          "m": "test-alarm-with-instruction alarm",
+          "val": 1
+        },
+        {
+          "_t": "comment",
+          "t": 1597033041,
+          "a": "system",
+          "m": "comment test-alarm-with-instruction",
+          "role": "admin",
+          "val": 0,
+          "initiator": "user"
+        }
+      ],
+      "component": "test-alarm-with-instruction-component",
+      "connector": "test-alarm-with-instruction-connector",
+      "connector_name": "test-alarm-with-instruction-connectorname",
+      "creation_date": 1596942720,
+      "display_name": "RC-KC_tW",
+      "initial_output": "test-alarm-with-instruction alarm",
+      "output": "test-alarm-with-instruction alarm",
+      "initial_long_output": "",
+      "long_output": "test-alarm-with-instruction-correlation-search",
+      "long_output_history": [
+        ""
+      ],
+      "last_update_date": 1596942720,
+      "last_event_date": 1596942720,
+      "resource": "test-alarm-with-instruction-resource-4",
+      "tags": [],
+      "parents": [],
+      "children": [],
+      "total_state_changes": 1,
+      "extra": {
+      },
+      "infos": {
+      },
+      "infos_rule_version": {
+      }
+    }
+  },
   {
     "_id": "test-instruction-execution-get-1",
     "d": "test-instruction-execution-get-resource-1/test-instruction-execution-get-component",
diff --git a/lib/api/alarm/api.go b/lib/api/alarm/api.go
index 3a52be0a..15af37b0 100644
--- a/lib/api/alarm/api.go
+++ b/lib/api/alarm/api.go
@@ -1,6 +1,7 @@
 package alarm
 
 import (
+	"context"
 	"net/http"
 
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/auth"
diff --git a/lib/api/alarm/models.go b/lib/api/alarm/models.go
index cf330be6..49f4ad81 100644
--- a/lib/api/alarm/models.go
+++ b/lib/api/alarm/models.go
@@ -15,25 +15,28 @@ type ListRequestWithPagination struct {
 
 type ListRequest struct {
 	FilterRequest
-	WithSteps    bool   `form:"with_steps" json:"with_steps"`
-	WithChildren bool   `form:"with_consequences" json:"with_consequences"`
-	Sort         string `form:"sort_dir" json:"sort_dir" binding:"oneoforempty=asc desc"`
-	SortBy       string `form:"sort_key" json:"sort_key"`
+	WithSteps        bool   `form:"with_steps" json:"with_steps"`
+	WithChildren     bool   `form:"with_consequences" json:"with_consequences"`
+	WithInstructions bool   `form:"with_instructions" json:"with_instructions"`
+	Sort             string `form:"sort_dir" json:"sort_dir" binding:"oneoforempty=asc desc"`
+	SortBy           string `form:"sort_key" json:"sort_key"`
 }
 
 type FilterRequest struct {
-	Filter              string         `form:"filter" json:"filter"`
-	Search              string         `form:"search" json:"search"`
-	SearchBy            []string       `form:"active_columns[]" json:"active_columns[]"`
-	StartFrom           *types.CpsTime `form:"tstart" json:"tstart" swaggertype:"integer"`
-	StartTo             *types.CpsTime `form:"tstop" json:"tstop" swaggertype:"integer"`
-	OnlyOpened          bool           `form:"opened" json:"opened"`
-	OnlyResolved        bool           `form:"resolved" json:"resolved"`
-	OnlyParents         bool           `form:"correlation" json:"correlation"`
-	OnlyManual          bool           `form:"manual" json:"manual"`
-	WithInstructions    string         `form:"with_instructions" json:"with_instructions"`
-	WithoutInstructions string         `form:"without_instructions" json:"without_instructions"`
-	Category            string         `form:"category" json:"category"`
+	Filter                  string         `form:"filter" json:"filter"`
+	Search                  string         `form:"search" json:"search"`
+	SearchBy                []string       `form:"active_columns[]" json:"active_columns[]"`
+	StartFrom               *types.CpsTime `form:"tstart" json:"tstart" swaggertype:"integer"`
+	StartTo                 *types.CpsTime `form:"tstop" json:"tstop" swaggertype:"integer"`
+	OnlyOpened              bool           `form:"opened" json:"opened"`
+	OnlyResolved            bool           `form:"resolved" json:"resolved"`
+	OnlyParents             bool           `form:"correlation" json:"correlation"`
+	OnlyManual              bool           `form:"manual" json:"manual"`
+	Category                string         `form:"category" json:"category"`
+	IncludeInstructionTypes []int          `form:"include_instruction_types[]" json:"include_instruction_types"`
+	ExcludeInstructionTypes []int          `form:"exclude_instruction_types[]" json:"exclude_instruction_types"`
+	IncludeInstructions     []string       `form:"include_instructions[]" json:"include_instructions"`
+	ExcludeInstructions     []string       `form:"exclude_instructions[]" json:"exclude_instructions"`
 }
 
 type ExportRequest struct {
@@ -60,12 +63,14 @@ type Alarm struct {
 		Data  []string `bson:"data"`
 		Total int      `bson:"total"`
 	} `bson:"children_ids,omitempty" json:"-"`
-	Children             *Children               `bson:"children,omitempty" json:"consequences,omitempty"`
-	Causes               *Causes                 `bson:"causes,omitempty" json:"causes,omitempty"`
-	FilteredChildrenIDs  []string                `bson:"filtered_children_ids,omitempty" json:"filtered_children,omitempty"`
-	AssignedInstructions []InstructionWithAlarms `bson:"assigned_instructions,omitempty" json:"assigned_instructions,omitempty"`
-	Links                map[string]interface{}  `json:"links"`
-	ImpactState          int64                   `bson:"impact_state" json:"impact_state"`
+	Children                       *Children               `bson:"children,omitempty" json:"consequences,omitempty"`
+	Causes                         *Causes                 `bson:"causes,omitempty" json:"causes,omitempty"`
+	FilteredChildrenIDs            []string                `bson:"filtered_children_ids,omitempty" json:"filtered_children,omitempty"`
+	AssignedInstructions           []InstructionWithAlarms `bson:"assigned_instructions,omitempty" json:"assigned_instructions,omitempty"`
+	IsAutoInstructionRunning       *bool                   `bson:"is_auto_instruction_running,omitempty" json:"is_auto_instruction_running,omitempty"`
+	IsAllAutoInstructionsCompleted *bool                   `bson:"is_all_auto_instructions_completed,omitempty" json:"is_all_auto_instructions_completed,omitempty"`
+	Links                          map[string]interface{}  `json:"links"`
+	ImpactState                    int64                   `bson:"impact_state" json:"impact_state"`
 }
 
 type MetaAlarmRule struct {
diff --git a/lib/api/alarm/store.go b/lib/api/alarm/store.go
index 5bfa84ee..978c9398 100644
--- a/lib/api/alarm/store.go
+++ b/lib/api/alarm/store.go
@@ -23,27 +23,33 @@ import (
 	"go.mongodb.org/mongo-driver/mongo/options"
 )
 
-const InstructionStatusRunning = 0
-const InstructionStatusPaused = 1
+const (
+	InstructionStatusRunning    = 0
+	InstructionStatusPaused     = 1
+	InstructionStatusWaitResult = 5
+	InstructionTypeManual       = 0
+	InstructionTypeAuto         = 1
+)
 
 const InstructionsQueryAll = "all"
 
 const linkFetchTimeout = 30 * time.Second
 
 type Store interface {
-	Find(context.Context, string, ListRequestWithPagination) (*AggregationResult, error)
-	Count(context.Context, FilterRequest) (*Count, error)
+	Find(ctx context.Context, apiKey string, r ListRequestWithPagination) (*AggregationResult, error)
+	Count(ctx context.Context, r FilterRequest) (*Count, error)
 }
 
 type store struct {
-	dbClient              mongo.DbClient
-	dbCollection          mongo.DbCollection
-	fieldsAliases         map[string]string
-	fieldsAliasesByRegex  map[string]string
-	defaultSearchByFields []string
-	defaultSortBy         string
-	defaultSort           string
-	links                 LinksFetcher
+	dbCollection                     mongo.DbCollection
+	dbInstructionCollection          mongo.DbCollection
+	dbInstructionExecutionCollection mongo.DbCollection
+	fieldsAliases                    map[string]string
+	fieldsAliasesByRegex             map[string]string
+	defaultSearchByFields            []string
+	defaultSortBy                    string
+	defaultSort                      string
+	links                            LinksFetcher
 	// nested objects lookups depend on requested Filter:
 	// these aggregation stages inserted at beginning of pipeline when Filter has some expression
 	// or inserted at beginning of project stage otherwise
@@ -52,8 +58,9 @@ type store struct {
 
 func NewStore(dbClient mongo.DbClient, legacyURL fmt.Stringer) Store {
 	s := &store{
-		dbClient:     dbClient,
-		dbCollection: dbClient.Collection(alarm.AlarmCollectionName),
+		dbCollection:                     dbClient.Collection(mongo.AlarmMongoCollection),
+		dbInstructionCollection:          dbClient.Collection(mongo.InstructionMongoCollection),
+		dbInstructionExecutionCollection: dbClient.Collection(mongo.InstructionExecutionMongoCollection),
 		fieldsAliases: map[string]string{
 			"uid":            "_id",
 			"connector":      "v.connector",
@@ -158,9 +165,15 @@ func (s *store) Find(ctx context.Context, apiKey string, r ListRequestWithPagina
 		return nil, err
 	}
 
-	err = s.fillAssignedInstructions(ctx, &result)
-	if err != nil {
-		return nil, err
+	if r.WithInstructions {
+		err = s.fillAssignedInstructions(ctx, &result)
+		if err != nil {
+			return nil, err
+		}
+		err = s.fillAutoInstructionFlags(ctx, &result)
+		if err != nil {
+			return nil, err
+		}
 	}
 
 	err = s.fillLinks(ctx, apiKey, &result)
@@ -347,24 +360,26 @@ func (s *store) fillChildren(ctx context.Context, r ListRequest, result *Aggrega
 }
 
 func (s *store) getAssignedInstructionsMap(ctx context.Context, alarmIds []string) (map[string][]InstructionWithAlarms, error) {
-	instructionCursor, err := s.dbClient.Collection(mongo.InstructionMongoCollection).Aggregate(
+	instructionCursor, err := s.dbInstructionCollection.Aggregate(
 		ctx,
 		[]bson.M{
+			{"$match": bson.M{
+				"type": InstructionTypeManual,
+			}},
 			{"$lookup": bson.M{
-				"from": mongo.InstructionExecutionMongoCollection,
-				"let":  bson.M{"instruction_ids": "$_id"},
-				"pipeline": []bson.M{
-					{"$match": bson.M{
-						"$expr": bson.M{
-							"$and": []bson.M{
-								{"$eq": bson.A{"$instruction", "$$instruction_ids"}},
-								{"$in": bson.A{"$status", []int{InstructionStatusRunning, InstructionStatusPaused}}},
-								{"$in": bson.A{"$alarm", alarmIds}},
-							},
-						},
+				"from":         mongo.InstructionExecutionMongoCollection,
+				"localField":   "_id",
+				"foreignField": "instruction",
+				"as":           "instruction_executions",
+			}},
+			{"$addFields": bson.M{
+				"instruction_executions": bson.M{"$filter": bson.M{
+					"input": "$instruction_executions",
+					"cond": bson.M{"$and": []bson.M{
+						{"$in": bson.A{"$$this.status", []int{InstructionStatusRunning, InstructionStatusPaused}}},
+						{"$in": bson.A{"$$this.alarm", alarmIds}},
 					}},
-				},
-				"as": "instruction_executions",
+				}},
 			}},
 			{"$addFields": bson.M{
 				"alarms_with_executions": bson.M{
@@ -468,7 +483,7 @@ func (s *store) getAssignedInstructionsMap(ctx context.Context, alarmIds []strin
 		{"$replaceRoot": bson.M{"newRoot": "$ids"}},
 	}
 
-	assignedInstructionsCursor, err := s.dbClient.Collection(alarm.AlarmCollectionName).Aggregate(
+	assignedInstructionsCursor, err := s.dbCollection.Aggregate(
 		ctx,
 		pipeline,
 	)
@@ -529,6 +544,66 @@ func (s *store) fillAssignedInstructions(ctx context.Context, result *Aggregatio
 	return nil
 }
 
+func (s *store) fillAutoInstructionFlags(ctx context.Context, result *AggregationResult) error {
+	alarmIDs := make([]string, len(result.Data))
+	for i, item := range result.Data {
+		alarmIDs[i] = item.ID
+	}
+
+	cursor, err := s.dbInstructionExecutionCollection.Aggregate(ctx, []bson.M{
+		{"$match": bson.M{
+			"alarm": bson.M{"$in": alarmIDs},
+		}},
+		{"$lookup": bson.M{
+			"from":         mongo.InstructionMongoCollection,
+			"localField":   "instruction",
+			"foreignField": "_id",
+			"as":           "instruction",
+		}},
+		{"$unwind": "$instruction"},
+		{"$match": bson.M{
+			"instruction.type": InstructionTypeAuto,
+		}},
+		{"$group": bson.M{
+			"_id":      "$alarm",
+			"statuses": bson.M{"$addToSet": "$status"},
+		}},
+	})
+	if err != nil {
+		return err
+	}
+	executionStatuses := make([]struct {
+		ID       string `bson:"_id"`
+		Statuses []int  `bson:"statuses"`
+	}, 0)
+	err = cursor.All(ctx, &executionStatuses)
+	if err != nil {
+		return err
+	}
+	runningByAlarm := make(map[string]bool, len(executionStatuses))
+	completedByAlarm := make(map[string]bool, len(executionStatuses))
+	for _, item := range executionStatuses {
+		running := false
+		for _, status := range item.Statuses {
+			if status == InstructionStatusRunning || status == InstructionStatusWaitResult {
+				running = true
+				break
+			}
+		}
+		runningByAlarm[item.ID] = running
+		completedByAlarm[item.ID] = !running && len(item.Statuses) > 0
+	}
+
+	for i := range result.Data {
+		isAutoInstructionRunning := runningByAlarm[result.Data[i].ID]
+		isAllAutoInstructionsCompleted := completedByAlarm[result.Data[i].ID]
+		result.Data[i].IsAutoInstructionRunning = &isAutoInstructionRunning
+		result.Data[i].IsAllAutoInstructionsCompleted = &isAllAutoInstructionsCompleted
+	}
+
+	return nil
+}
+
 type LinksRequest struct {
 	Entities []AlarmEntity `json:"entities"`
 }
@@ -600,7 +675,7 @@ func (s *store) addFilter(ctx context.Context, r FilterRequest, pipeline *[]bson
 	s.addOnlyParentsFilter(r, &match)
 	s.addCategoryFilter(r, &match)
 
-	err = s.addOnlyInstructionsFilter(ctx, r, &match)
+	err = s.addInstructionsFilter(ctx, r, &match)
 	if err != nil {
 		return err
 	}
@@ -696,31 +771,37 @@ func (s *store) addOnlyParentsFilter(r FilterRequest, match *[]bson.M) {
 	}
 }
 
-func (s *store) addOnlyInstructionsFilter(ctx context.Context, r FilterRequest, match *[]bson.M) error {
-	var instructionFilters []bson.M
+func (s *store) addInstructionsFilter(ctx context.Context, r FilterRequest, match *[]bson.M) error {
+	var filters []bson.M
 	var err error
 
-	if r.WithoutInstructions != "" {
-		if r.WithoutInstructions == InstructionsQueryAll {
-			instructionFilters, err = s.getInstructionsFilters(ctx, bson.M{})
-		} else {
-			instructionFilters, err = s.getInstructionsFilters(ctx, bson.M{"name": bson.M{"$in": strings.Split(r.WithoutInstructions, ",")}})
+	if len(r.ExcludeInstructions) > 0 {
+		filters, err = s.getInstructionsFilters(ctx, bson.M{"_id": bson.M{"$in": r.ExcludeInstructions}})
+		if len(filters) > 0 {
+			*match = append(*match, bson.M{"$nor": filters})
 		}
+	}
 
-		if instructionFilters != nil {
-			*match = append(*match, bson.M{"$nor": instructionFilters})
+	if len(r.ExcludeInstructionTypes) > 0 {
+		filters, err = s.getInstructionsFilters(ctx, bson.M{"type": bson.M{"$in": r.ExcludeInstructionTypes}})
+		if len(filters) > 0 {
+			*match = append(*match, bson.M{"$nor": filters})
 		}
 	}
 
-	if r.WithInstructions != "" {
-		if r.WithInstructions == InstructionsQueryAll {
-			instructionFilters, err = s.getInstructionsFilters(ctx, bson.M{})
+	if len(r.IncludeInstructions) > 0 {
+		filters, err = s.getInstructionsFilters(ctx, bson.M{"_id": bson.M{"$in": r.IncludeInstructions}})
+		if len(filters) > 0 {
+			*match = append(*match, bson.M{"$or": filters})
 		} else {
-			instructionFilters, err = s.getInstructionsFilters(ctx, bson.M{"name": bson.M{"$in": strings.Split(r.WithInstructions, ",")}})
+			*match = append(*match, bson.M{"$nor": []bson.M{{}}})
 		}
+	}
 
-		if instructionFilters != nil {
-			*match = append(*match, bson.M{"$or": instructionFilters})
+	if len(r.IncludeInstructionTypes) > 0 {
+		filters, err = s.getInstructionsFilters(ctx, bson.M{"type": bson.M{"$in": r.IncludeInstructionTypes}})
+		if len(filters) > 0 {
+			*match = append(*match, bson.M{"$or": filters})
 		} else {
 			*match = append(*match, bson.M{"$nor": []bson.M{{}}})
 		}
@@ -730,7 +811,7 @@ func (s *store) addOnlyInstructionsFilter(ctx context.Context, r FilterRequest,
 }
 
 func (s *store) getInstructionsFilters(ctx context.Context, filter bson.M) ([]bson.M, error) {
-	instructionCursor, _ := s.dbClient.Collection(mongo.InstructionMongoCollection).Find(ctx, filter)
+	instructionCursor, _ := s.dbInstructionCollection.Find(ctx, filter)
 	defer instructionCursor.Close(ctx)
 
 	var instructionFilters []bson.M
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index c5ddd360..34fac644 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -263,6 +263,45 @@ Feature: get a instruction
     }
     """
 
+  Scenario: given filter by type request should return instructions
+    When I am admin
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-get&type=0
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-get-1"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-get&type=1
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-get-2"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+
   Scenario: GET a instruction but unauthorized
     When I do GET /api/v4/cat/instructions/test-instruction-to-get
     Then the response code should be 401
diff --git a/tests/functional/features/api/core/alarm_get.feature b/tests/functional/features/api/core/alarm_get.feature
index f7145e7b..922dfeaf 100644
--- a/tests/functional/features/api/core/alarm_get.feature
+++ b/tests/functional/features/api/core/alarm_get.feature
@@ -1071,7 +1071,7 @@ Feature: Get alarms
 
   Scenario: given get search request should return assigned instruction for the alarm
     When I am admin
-    When I do GET /api/v4/alarms?search=test-alarm-with-instruction-resource-1
+    When I do GET /api/v4/alarms?search=test-alarm-with-instruction-resource-1&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1085,7 +1085,9 @@ Feature: Get alarms
                 "name": "test-instruction-to-assign-name",
                 "execution": null
             }
-          ]
+          ],
+          "is_auto_instruction_running": false,
+          "is_all_auto_instructions_completed": false
         }
       ],
       "meta": {
@@ -1099,7 +1101,7 @@ Feature: Get alarms
 
   Scenario: given get search request should return assigned instruction, which have an execution for the alarm
     When I am admin
-    When I do GET /api/v4/alarms?search=test-alarm-with-instruction-resource-2
+    When I do GET /api/v4/alarms?search=test-alarm-with-instruction-resource-2&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1131,7 +1133,7 @@ Feature: Get alarms
   Scenario: given get search request should return assigned instruction, which have several executions for the alarm
   where some of them is not executed
     When I am admin
-    When I do GET /api/v4/alarms?search=test-alarm-with-instruction-resource-3
+    When I do GET /api/v4/alarms?search=test-alarm-with-instruction-resource-3&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1165,9 +1167,36 @@ Feature: Get alarms
     }
     """
 
-  Scenario: given get search request should return alarms with assigned instructions depending from with_instructions or without_instructions fields
+  Scenario: given get search request should return alarms with assigned instructions depending from exclude or include instructions fields
     When I am admin
-    When I do GET /api/v4/alarms?with_instructions=all&search=test-alarm-with-instruction
+    When I do GET /api/v4/alarms?include_instruction_types[]=0&include_instruction_types[]=1&search=test-alarm-with-instruction
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-alarm-with-instruction-1"
+        },
+        {
+          "_id": "test-alarm-with-instruction-2"
+        },
+        {
+          "_id": "test-alarm-with-instruction-3"
+        },
+        {
+          "_id": "test-alarm-with-instruction-4"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 4
+      }
+    }
+    """
+    When I do GET /api/v4/alarms?include_instruction_types[]=0&&search=test-alarm-with-instruction
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1191,7 +1220,25 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?without_instructions=all&search=test-alarm-with-instruction
+    When I do GET /api/v4/alarms?include_instruction_types[]=1&search=test-alarm-with-instruction
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-alarm-with-instruction-4"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/alarms?exclude_instruction_types[]=0&exclude_instruction_types[]=1&search=test-alarm-with-instruction
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1205,7 +1252,49 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?without_instructions=all&search=instruction-not-exists
+    When I do GET /api/v4/alarms?exclude_instruction_types[]=0&search=test-alarm-with-instruction
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-alarm-with-instruction-4"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/alarms?exclude_instruction_types[]=1&search=test-alarm-with-instruction
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-alarm-with-instruction-1"
+        },
+        {
+          "_id": "test-alarm-with-instruction-2"
+        },
+        {
+          "_id": "test-alarm-with-instruction-3"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 3
+      }
+    }
+    """
+    When I do GET /api/v4/alarms?exclude_instruction_types[]=0&exclude_instruction_types[]=1&search=instruction-not-exists
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1219,7 +1308,7 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?with_instructions=test-instruction-to-assign-name&search=test-alarm-with-instruction
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-to-assign&search=test-alarm-with-instruction
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1237,7 +1326,7 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?with_instructions=test-instruction-to-assign-name,test-instruction-to-assign-with-execution-name&search=test-alarm-with-instruction
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-to-assign&include_instructions[]=test-instruction-to-assign-with-execution&search=test-alarm-with-instruction
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1258,7 +1347,7 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?with_instructions=all&without_instructions=test-instruction-to-assign-name&search=test-alarm-with-instruction
+    When I do GET /api/v4/alarms?include_instruction_types[]=0&include_instruction_types[]=1&exclude_instructions[]=test-instruction-to-assign&search=test-alarm-with-instruction
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1269,17 +1358,20 @@ Feature: Get alarms
         },
         {
           "_id": "test-alarm-with-instruction-3"
+        },
+        {
+          "_id": "test-alarm-with-instruction-4"
         }
       ],
       "meta": {
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 2
+        "total_count": 3
       }
     }
     """
-    When I do GET /api/v4/alarms?with_instructions=all&without_instructions=test-instruction-to-assign-name,test-instruction-to-assign-with-execution-name&search=test-alarm-with-instruction
+    When I do GET /api/v4/alarms?include_instruction_types[]=0&include_instruction_types[]=1&exclude_instructions[]=test-instruction-to-assign&exclude_instructions[]=test-instruction-to-assign-with-execution&exclude_instructions[]=test-instruction-to-auto-instruction-filter&search=test-alarm-with-instruction
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1297,7 +1389,7 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?with_instructions=test-instruction-with-entity-pattern-1-name
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-with-entity-pattern-1
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1324,7 +1416,7 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?with_instructions=test-instruction-with-entity-pattern-2-name
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-with-entity-pattern-2
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1351,7 +1443,7 @@ Feature: Get alarms
       }
     }
     """
-    When I do GET /api/v4/alarms?with_instructions=test-instruction-with-patterns-combined-name
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-with-patterns-combined
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1379,7 +1471,7 @@ Feature: Get alarms
     }
     """
 
-    When I do GET /api/v4/alarms?with_instructions=test-alarm-with-pbh-with-some-active-name
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-with-pbh-with-some-active&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1433,7 +1525,7 @@ Feature: Get alarms
     }
     """
 
-    When I do GET /api/v4/alarms?with_instructions=test-alarm-with-pbh-all-active-name
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-with-pbh-all-active&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1506,7 +1598,7 @@ Feature: Get alarms
     }
     """
 
-    When I do GET /api/v4/alarms?with_instructions=test-alarm-with-pbh-with-some-disabled-name
+    When I do GET /api/v4/alarms?include_instructions[]=test-instruction-with-pbh-with-some-disabled&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
     """
diff --git a/tests/functional/features/engines/remediation/alarm_get.feature b/tests/functional/features/engines/remediation/alarm_get.feature
new file mode 100644
index 00000000..c38228d0
--- /dev/null
+++ b/tests/functional/features/engines/remediation/alarm_get.feature
@@ -0,0 +1,113 @@
+Feature: update an instruction statistics
+  I need to be able to update an instruction statistics
+  
+  Scenario: given auto instruction execution should return flags in alarm API
+    When I am admin
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "type": 1,
+      "name": "test-instruction-to-alarm-get-auto-instruction-flags-1-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-alarm-get-auto-instruction-flags-1"
+        }
+      ],
+      "description": "test-instruction-to-alarm-get-auto-instruction-flags-1-1-description",
+      "author": "test-instruction-to-alarm-get-auto-instruction-flags-1-1-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 1,
+        "unit": "s"
+      },
+      "jobs": [
+        {
+          "job": "test-job-to-run-auto-instruction-5"
+        }
+      ],
+      "priority": 30
+    }
+    """
+    Then the response code should be 201
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "type": 1,
+      "name": "test-instruction-to-alarm-get-auto-instruction-flags-1-2-name",
+      "entity_patterns": [
+        {
+          "name": "test-resource-to-alarm-get-auto-instruction-flags-1"
+        }
+      ],
+      "description": "test-instruction-to-alarm-get-auto-instruction-flags-1-2-description",
+      "author": "test-instruction-to-alarm-get-auto-instruction-flags-1-2-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 1,
+        "unit": "s"
+      },
+      "jobs": [
+        {
+          "job": "test-job-to-run-auto-instruction-5"
+        }
+      ],
+      "priority": 31
+    }
+    """
+    Then the response code should be 201
+    When I wait the next periodical process
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-alarm-get-auto-instruction-flags-1",
+      "connector_name": "test-connector-name-to-alarm-get-auto-instruction-flags-1",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-alarm-get-auto-instruction-flags-1",
+      "resource": "test-resource-to-alarm-get-auto-instruction-flags-1",
+      "state": 1,
+      "output": "test-output-to-alarm-get-auto-instruction-flags-1"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-alarm-get-auto-instruction-flags-1&with_instructions=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "is_auto_instruction_running": true,
+          "is_all_auto_instructions_completed": false
+        }
+      ]
+    }
+    """
+    When I wait 4s
+    When I do GET /api/v4/alarms?search=test-resource-to-alarm-get-auto-instruction-flags-1&with_instructions=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "is_auto_instruction_running": true,
+          "is_all_auto_instructions_completed": false
+        }
+      ]
+    }
+    """
+    When I wait 4s
+    When I do GET /api/v4/alarms?search=test-resource-to-alarm-get-auto-instruction-flags-1&with_instructions=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "is_auto_instruction_running": false,
+          "is_all_auto_instructions_completed": true
+        }
+      ]
+    }
+    """
-- 
2.25.1


From 31e7d2e2914b2a9e770fd961af66a2a362439a70 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Thu, 8 Apr 2021 22:45:09 +0700
Subject: [PATCH 28/66] add approval request without validation on
 create/update

---
 lib/mongo/mongo.go                            |   1 +
 .../api/cat/instruction_create.feature        |  50 +++++
 .../api/cat/instruction_update.feature        | 190 ++++++++++++++++++
 3 files changed, 241 insertions(+)

diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index d8b174ea..c2cee2cd 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -54,6 +54,7 @@ const (
 	BroadcastMessageMongoCollection     = "broadcast_message"
 	AssociativeTableCollection          = "default_associativetable"
 	NotificationCollection              = "notification"
+	InstructionApprovalMongoCollection  = "instruction_approval"
 )
 
 type SingleResultHelper interface {
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 3b9dc428..5136f373 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -531,6 +531,56 @@ Feature: create a instruction
     """
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-4-id
     Then the response code should be 200
+    
+  Scenario: given create request with approval request should return ok
+    When I am admin
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-5-id",
+      "type": 0,
+      "name": "test-instruction-to-create-5-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-5-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-5-description",
+      "author": "test-instruction-to-create-5-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-5-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-5-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-5-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-5-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "value": "root",
+        "type": 0,
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-5-id",
+      "status": 1
+    }
+    """
 
   Scenario: given create request with custom id that already exist should return error
     When I am admin
diff --git a/tests/functional/features/api/cat/instruction_update.feature b/tests/functional/features/api/cat/instruction_update.feature
index 5a15b70f..2a18078b 100644
--- a/tests/functional/features/api/cat/instruction_update.feature
+++ b/tests/functional/features/api/cat/instruction_update.feature
@@ -290,6 +290,196 @@ Feature: Instruction update
     }
     """
 
+  Scenario: PUT a valid instruction with approval request
+    When I am admin
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
+    """
+    {
+      "name": "test-instruction-to-update-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-description-changed",
+      "author": "test-instruction-to-update-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            },
+            {
+              "name": "test-instruction-to-update-step-1-operation-2-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-step-1-operation-2-description",
+              "jobs": [
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "test-instruction-to-update-step-1-endpoint"
+        },
+        {
+          "name": "test-instruction-to-update-step-2-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-step-2-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-step-2-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-2",
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-update-step-2-endpoint"
+        }
+      ],
+      "approval": {
+        "value": "root",
+        "type": 0,
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-update",
+      "type": 0,
+      "status": 1,
+      "name": "test-instruction-to-update-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-description-changed",
+      "author": "test-instruction-to-update-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            },
+            {
+              "name": "test-instruction-to-update-step-1-operation-2-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-step-1-operation-2-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "test-instruction-to-update-step-1-endpoint"
+        },
+        {
+          "name": "test-instruction-to-update-step-2-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-step-2-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-step-2-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "auth_token": "test-auth-token"
+                  },
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-update-step-2-endpoint"
+        }
+      ]
+    }
+    """
+
   Scenario: PUT an invalid instruction, where name already exists
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-- 
2.25.1


From b7e1e3655d2017272c995ea545e32fb9e3d28fd7 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 23 Apr 2021 22:02:07 +0700
Subject: [PATCH 29/66] develop instruction approval logic

---
 fixtures/default_rights.json                  |   79 +
 fixtures/instruction.json                     |  237 ++
 fixtures/instruction_execution.json           |   17 +
 lib/api/alarm/store.go                        |    5 +-
 lib/api/auth/constants.go                     |    3 +-
 lib/api/logger/action_logger.go               |   34 +-
 lib/validator/validator.go                    |   18 +
 .../api/cat/instruction_create.feature        |   50 -
 .../instruction_create_with_approval.feature  | 2388 +++++++++++++++++
 .../api/cat/instruction_update.feature        |  189 --
 .../instruction_update_with_approval.feature  | 1929 +++++++++++++
 .../cat/instructionexecution_cancel.feature   |   23 +-
 12 files changed, 4718 insertions(+), 254 deletions(-)
 create mode 100644 tests/functional/features/api/cat/instruction_create_with_approval.feature
 create mode 100644 tests/functional/features/api/cat/instruction_update_with_approval.feature

diff --git a/fixtures/default_rights.json b/fixtures/default_rights.json
index a4e0e8a9..df40645e 100644
--- a/fixtures/default_rights.json
+++ b/fixtures/default_rights.json
@@ -204,6 +204,11 @@
     "crecord_type": "action",
     "crecord_name": "api_notification"
   },
+  {
+    "_id": "api_instruction_approve",
+    "crecord_type": "action",
+    "crecord_name": "api_instruction_approve"
+  },
   {
     "_id": "admin",
     "crecord_type": "role",
@@ -213,6 +218,10 @@
         "checksum": 1,
         "crecord_type": "right"
       },
+      "api_instruction_approve": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
       "api_acl": {
         "checksum": 1,
         "crecord_type": "right"
@@ -425,6 +434,40 @@
     "crecord_name": "noperms",
     "rights": {}
   },
+  {
+    "_id": "approver",
+    "crecord_type": "role",
+    "crecord_name": "approver",
+    "rights": {
+      "api_instruction_approve": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
+      "api_instruction": {
+        "checksum": 15,
+        "crecord_type": "right"
+      },
+      "api_execution": {
+        "checksum": 1,
+        "crecord_type": "right"
+      }
+    }
+  },
+  {
+    "_id": "approver2",
+    "crecord_type": "role",
+    "crecord_name": "approver2",
+    "rights": {
+      "api_instruction_approve": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
+      "api_instruction": {
+        "checksum": 15,
+        "crecord_type": "right"
+      }
+    }
+  },
   {
     "_id": "manager",
     "crecord_type": "role",
@@ -434,6 +477,10 @@
         "checksum": 1,
         "crecord_type": "right"
       },
+      "api_instruction_approve": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
       "api_alarm_read": {
         "checksum": 1,
         "crecord_type": "right"
@@ -520,6 +567,20 @@
     },
     "enable": true
   },
+  {
+    "_id": "manageruser",
+    "crecord_type": "user",
+    "crecord_name": "manageruser",
+    "role": "manager",
+    "mail": "manager@canopsis.net",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
+    "authkey": "2be1d0ee-5e9e-4b1f-9d80-e857e50f4191",
+    "contact": {
+      "name": "John Doe",
+      "address": "30 Rue du Triez 59290 Wasquehal France"
+    },
+    "enable": true
+  },
   {
     "_id": "nopermsuser",
     "crecord_type": "user",
@@ -529,6 +590,24 @@
     "authkey": "b31c48c7-3ccc-4ad3-bc1e-0e12bdd64caa",
     "enable": true
   },
+  {
+    "_id": "approveruser",
+    "crecord_type": "user",
+    "crecord_name": "approveruser",
+    "role": "approver",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
+    "authkey": "b31c48c7-3ccc-4ad3-bc1e-0e12bdd64caa",
+    "enable": true
+  },
+  {
+    "_id": "approveruser2",
+    "crecord_type": "user",
+    "crecord_name": "approveruser2",
+    "role": "approver2",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
+    "authkey": "b31c48c7-3ccc-4ad3-bc1e-0e12bdd64caa",
+    "enable": true
+  },
   {
     "_id": "test-user-to-test-paused-executions",
     "crecord_type": "user",
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index ebb0a5f9..58da9a62 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -197,6 +197,203 @@
     ],
     "created": 1000000002
   },
+  {
+    "_id": "test-instruction-to-update-with-approval",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-description",
+    "author": "test-instruction-to-update-with-approval-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-step-1",
+        "name": "test-instruction-to-update-with-approval-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-2",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-2-description",
+    "author": "test-instruction-to-update-with-approval-2-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-2-step-1",
+        "name": "test-instruction-to-update-with-approval-2-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-2-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-3",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-3-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-3-description",
+    "author": "test-instruction-to-update-with-approval-3-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-3-step-1",
+        "name": "test-instruction-to-update-with-approval-3-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-3-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-should-cancel-execution",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-should-cancel-execution-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-should-cancel-execution-description",
+    "author": "test-instruction-to-update-with-approval-should-cancel-execution-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1",
+        "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-should-cancel-execution-updated",
+    "original_id": "test-instruction-to-update-with-approval-should-cancel-execution",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-should-cancel-execution-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-should-cancel-execution-description",
+    "author": "test-instruction-to-update-with-approval-should-cancel-execution-author",
+    "enabled": true,
+    "status": 2,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1",
+        "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "new endpoint"
+      }
+    ],
+    "approval": {
+      "requested_by": "root",
+      "user": "approveruser",
+      "comment": "test"
+    },
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
   {
     "_id": "test-instruction-to-check-unique-id",
     "type": 0,
@@ -757,6 +954,46 @@
     ],
     "created": 1000000012
   },
+  {
+    "_id": "test-instruction-should-not-be-assigned",
+    "status": 1,
+    "type": 0,
+    "name": "test-instruction-to-assign-name",
+    "alarm_patterns": [
+      {
+        "_id": "test-alarm-with-instruction-1"
+      }
+    ],
+    "description": "test-instruction-to-assign-description",
+    "author": "test-instruction-to-assign-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "month_executions": 5,
+    "steps": [
+      {
+        "_id": "test-instruction-to-assign-step-1",
+        "name": "test-instruction-to-assign-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-assign-step-1-operation-1",
+            "name": "test-instruction-to-assign-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-assign-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-assign-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "test_author",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000012
+  },
   {
     "_id": "test-instruction-to-assign-with-execution",
     "type": 0,
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index ac556148..1fe7d201 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -37,6 +37,23 @@
       }
     ]
   },
+  {
+    "_id": "test-instruction-to-update-with-approval-should-cancel-execution-running-1",
+    "instruction": "test-instruction-to-update-with-approval-should-cancel-execution",
+    "status": 0,
+    "step_history": [
+      {
+        "step": "test-instruction-to-update-with-approval-should-cancel-execution-running-1-step-1",
+        "operation_history": [
+          {
+            "operation": "test-instruction-to-update-with-approval-should-cancel-execution-running-1-step-1-operation-1",
+            "started_at": 1597905434,
+            "job_history": []
+          }
+        ]
+      }
+    ]
+  },
   {
     "_id": "test-instruction-delete-execution-running",
     "instruction_modified_on": 1596712203,
diff --git a/lib/api/alarm/store.go b/lib/api/alarm/store.go
index 978c9398..a0eed53d 100644
--- a/lib/api/alarm/store.go
+++ b/lib/api/alarm/store.go
@@ -811,7 +811,10 @@ func (s *store) addInstructionsFilter(ctx context.Context, r FilterRequest, matc
 }
 
 func (s *store) getInstructionsFilters(ctx context.Context, filter bson.M) ([]bson.M, error) {
-	instructionCursor, _ := s.dbInstructionCollection.Find(ctx, filter)
+	//get only approved
+	filter["status"] = bson.M{"$in": bson.A{0, nil}}
+
+	instructionCursor, _ := s.dbInstructionCollection(mongo.InstructionMongoCollection).Find(ctx, filter)
 	defer instructionCursor.Close(ctx)
 
 	var instructionFilters []bson.M
diff --git a/lib/api/auth/constants.go b/lib/api/auth/constants.go
index cef4afd6..4eb09457 100644
--- a/lib/api/auth/constants.go
+++ b/lib/api/auth/constants.go
@@ -2,7 +2,8 @@ package auth
 
 const (
 	// UserKey is the context name for user credential.
-	UserKey = "user_id"
+	UserKey     = "user_id"
+	RoleKey     = "role"
 	// ApiKey is the context name for user api key.
 	ApiKey = "api_key"
 	// RoleKey is the context name for user's role
diff --git a/lib/api/logger/action_logger.go b/lib/api/logger/action_logger.go
index a287ebf4..2162368f 100644
--- a/lib/api/logger/action_logger.go
+++ b/lib/api/logger/action_logger.go
@@ -13,13 +13,17 @@ import (
 )
 
 const (
-	ActionCreate = "create"
-	ActionUpdate = "update"
-	ActionDelete = "delete"
-	ActionExport = "export"
-	ActionImport = "import"
+	ActionCreate   = "create"
+	ActionUpdate   = "update"
+	ActionDelete   = "delete"
+	ActionApproval = "approval"
+	ActionExport   = "export"
+	ActionImport   = "import"
 )
 
+const ApprovalDecisionApprove = "approve"
+const ApprovalDecisionDismiss = "dismiss"
+
 const (
 	ValueTypeUser               = "user"
 	ValueTypeRole               = "role"
@@ -59,11 +63,15 @@ type logger struct {
 }
 
 type LogEntry struct {
-	Action    string    `bson:"action"`
-	ValueType string    `bson:"value_type"`
-	ValueID   string    `bson:"value_id"`
-	Author    string    `bson:"author"`
-	Time      time.Time `bson:"time"`
+	Action         string    `bson:"action"`
+	ValueType      string    `bson:"value_type"`
+	ValueID        string    `bson:"value_id"`
+	Author         string    `bson:"author"`
+	Time           time.Time `bson:"time"`
+	ValidationTime time.Time `bson:"validation_time,omitempty"`
+	ApproverUser   string    `bson:"approver_user,omitempty"`
+	ApproverRole   string    `bson:"approver_role,omitempty"`
+	Decision       string    `bson:"decision,omitempty"`
 }
 
 func NewActionLogger(dbClient mongo.DbClient, zLog zerolog.Logger) ActionLogger {
@@ -78,9 +86,11 @@ func (l *logger) Action(c *gin.Context, logEntry LogEntry) error {
 	ctx, cancel := context.WithCancel(context.Background())
 	defer cancel()
 
-	userID := c.MustGet(auth.UserKey)
+	if logEntry.Author == "" {
+		userID := c.MustGet(auth.UserKey)
+		logEntry.Author = userID.(string)
+	}
 
-	logEntry.Author = userID.(string)
 	logEntry.Time = time.Now()
 
 	l.zLog.Info().
diff --git a/lib/validator/validator.go b/lib/validator/validator.go
index 95f38507..39323efc 100644
--- a/lib/validator/validator.go
+++ b/lib/validator/validator.go
@@ -36,6 +36,12 @@ func RegisterTranslations(v *validator.Validate) {
 		t, _ := ut.T("required_with", fe.StructField(), fe.Param())
 		return t
 	})
+	_ = v.RegisterTranslation("required_not_both", trans, func(ut ut.Translator) error {
+		return ut.Add("required_not_both", "Can't be present both {0} and {1}", true)
+	}, func(ut ut.Translator, fe validator.FieldError) string {
+		t, _ := ut.T("required_not_both", fe.StructField(), fe.Param())
+		return t
+	})
 	_ = v.RegisterTranslation("required_or", trans, func(ut ut.Translator) error {
 		return ut.Add("required_or", "{0} or {1} is required.", true)
 	}, func(ut ut.Translator, fe validator.FieldError) string {
@@ -96,6 +102,18 @@ func RegisterTranslations(v *validator.Validate) {
 		t, _ := ut.T("not_exist", fe.StructField())
 		return t
 	})
+	_ = v.RegisterTranslation("not_approver", trans, func(ut ut.Translator) error {
+		return ut.Add("not_approver", "{0} doesn't have approve rights.", true)
+	}, func(ut ut.Translator, fe validator.FieldError) string {
+		t, _ := ut.T("not_approver", fe.StructField())
+		return t
+	})
+	_ = v.RegisterTranslation("", trans, func(ut ut.Translator) error {
+		return ut.Add("not_approver", "{0} doesn't have approve rights.", true)
+	}, func(ut ut.Translator, fe validator.FieldError) string {
+		t, _ := ut.T("not_approver", fe.StructField())
+		return t
+	})
 	_ = v.RegisterTranslation("unique", trans, func(ut ut.Translator) error {
 		return ut.Add("unique", "{0} already exists.", true)
 	}, func(ut ut.Translator, fe validator.FieldError) string {
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 5136f373..3b9dc428 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -531,56 +531,6 @@ Feature: create a instruction
     """
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-4-id
     Then the response code should be 200
-    
-  Scenario: given create request with approval request should return ok
-    When I am admin
-    When I do POST /api/v4/cat/instructions:
-    """
-    {
-      "_id": "test-instruction-to-create-5-id",
-      "type": 0,
-      "name": "test-instruction-to-create-5-name",
-      "entity_patterns": [
-        {
-          "name": "test-instruction-to-create-5-pattern"
-        }
-      ],
-      "description": "test-instruction-to-create-5-description",
-      "author": "test-instruction-to-create-5-author",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-create-5-step-1",
-          "operations": [
-            {
-              "name": "test-instruction-to-create-5-step-1-operation-1",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-create-5-step-1-operation-1-description",
-              "jobs": [
-                "test-job-to-instruction-edit-1",
-                "test-job-to-instruction-edit-2"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-5-step-1-endpoint"
-        }
-      ],
-      "approval": {
-        "value": "root",
-        "type": 0,
-        "comment": "test comment"
-      }
-    }
-    """
-    Then the response code should be 201
-    Then the response body should contain:
-    """
-    {
-      "_id": "test-instruction-to-create-5-id",
-      "status": 1
-    }
-    """
 
   Scenario: given create request with custom id that already exist should return error
     When I am admin
diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
new file mode 100644
index 00000000..3df13b80
--- /dev/null
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -0,0 +1,2388 @@
+Feature: instruction approval creation
+  I need to be able to create an instruction with approval
+
+  Scenario: given create request with approval request with user should return ok
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: given create request with approval request with not existed username should return ok
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-2-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-2-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-2-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-2-description",
+      "author": "test-instruction-to-create-with-approval-2-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-2-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-2-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-2-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-2-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "rootnotexist",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.user": "User doesn't exist."
+      }
+    }
+    """
+  
+  Scenario: given create request with approval request with a username without approve right should return error
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-3-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-3-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-3-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-3-description",
+      "author": "test-instruction-to-create-with-approval-3-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-3-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-3-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-3-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-3-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "nopermsuser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.user": "User doesn't have approve rights."
+      }
+    }
+    """  
+
+  Scenario: given create request with approval request with role should return ok
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-4-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-4-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-4-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-4-description",
+      "author": "test-instruction-to-create-with-approval-4-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-4-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "approver",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-4-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver",
+        "requested_by": "root"
+      }
+    }
+    """
+    
+  Scenario: given create request with approval request with not existed role should return error
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-5-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-5-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-5-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-5-description",
+      "author": "test-instruction-to-create-with-approval-5-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-5-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-5-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-5-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-5-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "adminnotexist",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.role": "Role doesn't exist."
+      }
+    }
+    """
+
+  Scenario: given create request with approval request with a role without approve right should return error
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-6-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-6-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-6-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-6-description",
+      "author": "test-instruction-to-create-with-approval-6-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-6-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-6-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-6-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-6-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "noperms",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.role": "Role doesn't have approve rights."
+      }
+    }
+    """
+
+  Scenario: given create request with approval request with role and username should return error
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-7-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-7-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-7-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-7-description",
+      "author": "test-instruction-to-create-with-approval-7-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-7-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-7-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-7-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-7-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "root",
+        "role": "admin",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.role": "Can't be present both Role and User"
+      }
+    }
+    """
+
+  Scenario: given create request with valid approval request with existed name should return error
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-8-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-8-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-8-description",
+      "author": "test-instruction-to-create-with-approval-8-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-8-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-8-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-8-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-8-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "approver",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "name": "Name already exists."
+      }
+    }
+    """
+
+  Scenario: New instructions should be in the list with approval
+    When I am admin
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-create-with-approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-create-with-approval-1-id",
+          "type": 0,
+          "status": 1,
+          "alarm_patterns": null,
+          "entity_patterns": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-pattern"
+            }
+          ],
+          "name": "test-instruction-to-create-with-approval-1-name",
+          "description": "test-instruction-to-create-with-approval-1-description",
+          "author": "test-instruction-to-create-with-approval-1-author",
+          "enabled": true,
+          "month_executions": 0,
+          "steps": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1",
+              "operations": [
+                {
+                  "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+                  "time_to_complete": {
+                      "seconds": 1,
+                      "unit": "s"
+                  },
+                  "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+                  "jobs": [
+                    {
+                      "_id": "test-job-to-instruction-edit-1",
+                      "name": "test-job-to-instruction-edit-1-name",
+                      "author": "test-job-to-instruction-edit-1-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-1-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    },
+                    {
+                      "_id": "test-job-to-instruction-edit-2",
+                      "name": "test-job-to-instruction-edit-2-name",
+                      "author": "test-job-to-instruction-edit-2-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-2-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    }
+                  ]
+                }
+              ],
+              "stop_on_fail": true,
+              "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+            }
+          ],
+          "approval": {
+            "comment": "test comment",
+            "user": "approveruser",
+            "requested_by": "root"
+          }
+        },
+        {
+          "_id": "test-instruction-to-create-with-approval-4-id",
+          "type": 0,
+          "status": 1,
+          "alarm_patterns": null,
+          "entity_patterns": [
+            {
+              "name": "test-instruction-to-create-with-approval-4-pattern"
+            }
+          ],
+          "name": "test-instruction-to-create-with-approval-4-name",
+          "description": "test-instruction-to-create-with-approval-4-description",
+          "author": "test-instruction-to-create-with-approval-4-author",
+          "enabled": true,
+          "month_executions": 0,
+          "steps": [
+            {
+              "name": "test-instruction-to-create-with-approval-4-step-1",
+              "operations": [
+                {
+                  "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
+                  "time_to_complete": {
+                      "seconds": 1,
+                      "unit": "s"
+                  },
+                  "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
+                  "jobs": [
+                    {
+                      "_id": "test-job-to-instruction-edit-1",
+                      "name": "test-job-to-instruction-edit-1-name",
+                      "author": "test-job-to-instruction-edit-1-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-1-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    },
+                    {
+                      "_id": "test-job-to-instruction-edit-2",
+                      "name": "test-job-to-instruction-edit-2-name",
+                      "author": "test-job-to-instruction-edit-2-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-2-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    }
+                  ]
+                }
+              ],
+              "stop_on_fail": true,
+              "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
+            }
+          ],
+          "approval": {
+            "comment": "test comment",
+            "role": "approver",
+            "requested_by": "root"
+          }
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: the approver should be able to get approval data by username
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "original": {
+        "_id": "test-instruction-to-create-with-approval-1-id",
+        "type": 0,
+        "status": 1,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test-instruction-to-create-with-approval-1-pattern"
+          }
+        ],
+        "name": "test-instruction-to-create-with-approval-1-name",
+        "description": "test-instruction-to-create-with-approval-1-description",
+        "author": "test-instruction-to-create-with-approval-1-author",
+        "enabled": true,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-create-with-approval-1-step-1",
+            "operations": [
+              {
+                "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+                "time_to_complete": {
+                    "seconds": 1,
+                    "unit": "s"
+                },
+                "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  },
+                  {
+                    "_id": "test-job-to-instruction-edit-2",
+                    "name": "test-job-to-instruction-edit-2-name",
+                    "author": "test-job-to-instruction-edit-2-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-2-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+          }
+        ]
+      },
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: the approver should be able to get approval data by role
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-4-id/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "original": {
+        "_id": "test-instruction-to-create-with-approval-4-id",
+        "type": 0,
+        "status": 1,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test-instruction-to-create-with-approval-4-pattern"
+          }
+        ],
+        "name": "test-instruction-to-create-with-approval-4-name",
+        "description": "test-instruction-to-create-with-approval-4-description",
+        "author": "test-instruction-to-create-with-approval-4-author",
+        "enabled": true,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-create-with-approval-4-step-1",
+            "operations": [
+              {
+                "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
+                "time_to_complete": {
+                    "seconds": 1,
+                    "unit": "s"
+                },
+                "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  },
+                  {
+                    "_id": "test-job-to-instruction-edit-2",
+                    "name": "test-job-to-instruction-edit-2-name",
+                    "author": "test-job-to-instruction-edit-2-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-2-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
+          }
+        ]
+      },
+      "approval": {
+        "comment": "test comment",
+        "role": "approver",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: the user, which is not set in approval should receive 403
+    When I am authenticated with username "manageruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id/approval
+    Then the response code should be 403
+    Then the response body should contain:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+
+  Scenario: the user with a role, which is not set in approval should receive 403
+    When I am authenticated with username "manageruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-4-id/approval
+    Then the response code should be 403
+    Then the response body should contain:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+
+  Scenario: if no approval return 404
+    When I am authenticated with username "root" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-get-1/approval
+    Then the response code should be 404
+
+  Scenario: should be possible for any user to get waiting for approval created instruction
+    When I am authenticated with username "root" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I am authenticated with username "manageruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: The users that didn't request the approval can update only name/description/enabled
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name-changed",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description-changed",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": false,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name-changed",
+      "description": "test-instruction-to-create-with-approval-1-description-changed",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": false,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+        }
+      ]
+    }
+    """
+
+  Scenario: The user that requested the approval can update any field
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 5,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: The users that didn't request the approval can't change approver
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser2"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 5,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: The user that requested the approval can change approver username
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser2"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 5,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser2",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: The user that requested the approval can change approval from username to role
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 5,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: The user that requested the approval can change approval from role to username
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser2"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 5,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser2",
+        "requested_by": "root"
+      }
+    }
+    """
+    
+  Scenario:  The user that didn't request the approval can't cancel approval
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 5,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser2",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: The user that request the approval can cancel approval
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ]
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-1-id",
+      "type": 0,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-1-name",
+      "description": "test-instruction-to-create-with-approval-1-description",
+      "author": "test-instruction-to-create-with-approval-1-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 5,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ]
+    }
+    """
+
+  Scenario: Only the user from approval should be able to approve by username
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-5-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-5-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-5-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-5-description",
+      "author": "test-instruction-to-create-with-approval-5-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-5-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-5-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-5-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-5-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-5-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-5-id",
+      "type": 0,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-5-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-5-name",
+      "description": "test-instruction-to-create-with-approval-5-description",
+      "author": "test-instruction-to-create-with-approval-5-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-5-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-5-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-5-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-5-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    
+  Scenario: Only the user from approval should be able to approve by role
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-6-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-6-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-6-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-6-description",
+      "author": "test-instruction-to-create-with-approval-6-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-6-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-6-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-6-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-6-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "approver2",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-6-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-6-id",
+      "type": 0,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-6-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-6-name",
+      "description": "test-instruction-to-create-with-approval-6-description",
+      "author": "test-instruction-to-create-with-approval-6-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-6-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-6-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-6-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-6-step-1-endpoint"
+        }
+      ]
+    }
+    """
+    
+  Scenario: Only the user from approval should be able to dismiss by username
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-7-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-7-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-7-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-7-description",
+      "author": "test-instruction-to-create-with-approval-7-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-7-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-7-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-7-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-7-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-7-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-7-id/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-7-id/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-7-id/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-7-id
+    Then the response code should be 404
+    
+  Scenario: Only the user from approval should be able to dismiss by role
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-8-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-8-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-8-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-8-description",
+      "author": "test-instruction-to-create-with-approval-8-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-8-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-8-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-8-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-8-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "approver2",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-8-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id
+    Then the response code should be 404
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instruction_update.feature b/tests/functional/features/api/cat/instruction_update.feature
index 2a18078b..89fc6b04 100644
--- a/tests/functional/features/api/cat/instruction_update.feature
+++ b/tests/functional/features/api/cat/instruction_update.feature
@@ -290,195 +290,6 @@ Feature: Instruction update
     }
     """
 
-  Scenario: PUT a valid instruction with approval request
-    When I am admin
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-    """
-    {
-      "name": "test-instruction-to-update-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-to-update-description-changed",
-      "author": "test-instruction-to-update-author",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-update-step-1-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-1-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-1-description",
-              "jobs": [
-                "test-job-to-instruction-edit-1",
-                "test-job-to-instruction-edit-2"
-              ]
-            },
-            {
-              "name": "test-instruction-to-update-step-1-operation-2-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-2-description",
-              "jobs": [
-                "test-job-to-instruction-edit-2"
-              ]
-            }
-          ],
-          "stop_on_fail": false,
-          "endpoint": "test-instruction-to-update-step-1-endpoint"
-        },
-        {
-          "name": "test-instruction-to-update-step-2-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-2-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-2-operation-1-description",
-              "jobs": [
-                "test-job-to-instruction-edit-2",
-                "test-job-to-instruction-edit-1"
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-2-endpoint"
-        }
-      ],
-      "approval": {
-        "value": "root",
-        "type": 0,
-        "comment": "test comment"
-      }
-    }
-    """
-    Then the response code should be 200
-    Then the response body should contain:
-    """
-    {
-      "_id": "test-instruction-to-update",
-      "type": 0,
-      "status": 1,
-      "name": "test-instruction-to-update-name",
-      "entity_patterns": [
-        {
-          "name": "test filter"
-        }
-      ],
-      "description": "test-instruction-to-update-description-changed",
-      "author": "test-instruction-to-update-author",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-update-step-1-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-1-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-1-description",
-              "jobs": [
-                {
-                  "_id": "test-job-to-instruction-edit-1",
-                  "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-1-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                },
-                {
-                  "_id": "test-job-to-instruction-edit-2",
-                  "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-2-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                }
-              ]
-            },
-            {
-              "name": "test-instruction-to-update-step-1-operation-2-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-1-operation-2-description",
-              "jobs": [
-                {
-                  "_id": "test-job-to-instruction-edit-2",
-                  "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-2-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                }
-              ]
-            }
-          ],
-          "stop_on_fail": false,
-          "endpoint": "test-instruction-to-update-step-1-endpoint"
-        },
-        {
-          "name": "test-instruction-to-update-step-2-name",
-          "operations": [
-            {
-              "name": "test-instruction-to-update-step-2-operation-1-name",
-              "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-step-2-operation-1-description",
-              "jobs": [
-                {
-                  "_id": "test-job-to-instruction-edit-2",
-                  "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-2-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                },
-                {
-                  "_id": "test-job-to-instruction-edit-1",
-                  "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "auth_token": "test-auth-token"
-                  },
-                  "author": "test-job-to-instruction-edit-1-author",
-                  "job_id": "test-job-to-instruction-edit-1-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                }
-              ]
-            }
-          ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-step-2-endpoint"
-        }
-      ]
-    }
-    """
 
   Scenario: PUT an invalid instruction, where name already exists
     When I am admin
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
new file mode 100644
index 00000000..6c34d6f8
--- /dev/null
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -0,0 +1,1929 @@
+Feature: instruction approval update
+  I need to be able to update an instruction with approval
+
+  Scenario: PUT a valid instruction with approval with username request should return ok
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description",
+      "author": "test-instruction-to-update-with-approval-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-name",
+        "description": "test-instruction-to-update-with-approval-description",
+        "author": "test-instruction-to-update-with-approval-author",
+        "enabled": true,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-description",
+        "author": "test-instruction-to-update-with-approval-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "new endpoint"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "user": "approveruser",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+    
+  Scenario: PUT a valid instruction with approval with role request should return ok
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-2-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-2-description",
+      "author": "test-instruction-to-update-with-approval-2-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-2-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 2"
+        }
+      ],
+      "approval": {
+        "role": "approver2",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval-2",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-2-name",
+        "description": "test-instruction-to-update-with-approval-2-description",
+        "author": "test-instruction-to-update-with-approval-2-author",
+        "enabled": true,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-2-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-2-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-2-description",
+        "author": "test-instruction-to-update-with-approval-2-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-2-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "new endpoint 2"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "role": "approver2",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+
+  Scenario: PUT a valid instruction with approval request with a not found user should return error
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 3"
+        }
+      ],
+      "approval": {
+        "user": "approvernotexist",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.user": "User doesn't exist."
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
+    Then the response code should be 404
+
+  Scenario: PUT a valid instruction with approval request with a username without approve right should return error
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 3"
+        }
+      ],
+      "approval": {
+        "user": "nopermsuser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.user": "User doesn't have approve rights."
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
+    Then the response code should be 404
+
+  Scenario: PUT a valid instruction with approval request with a not found role should return error
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 3"
+        }
+      ],
+      "approval": {
+        "role": "rolenotexist",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.role": "Role doesn't exist."
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
+    Then the response code should be 404
+
+  Scenario: PUT a valid instruction with approval request with a role without approve right should return error
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 3"
+        }
+      ],
+      "approval": {
+        "role": "noperms",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.role": "Role doesn't have approve rights."
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
+    Then the response code should be 404
+
+  Scenario: PUT a valid instruction with approval request with a role without approve right should return error
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 3"
+        }
+      ],
+      "approval": {
+        "user": "root",
+        "role": "admin",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should contain:
+    """
+    {
+      "errors": {
+        "approval.role": "Can't be present both Role and User"
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
+    Then the response code should be 404
+
+  Scenario: Instruction with updated versions should have original version in the list with status = 1 and attached approval
+    When I am admin
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-update-with-approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-update-with-approval",
+          "type": 0,
+          "status": 1,
+          "alarm_patterns": null,
+          "entity_patterns": [
+            {
+              "name": "test filter"
+            }
+          ],
+          "name": "test-instruction-to-update-with-approval-name",
+          "description": "test-instruction-to-update-with-approval-description",
+          "author": "test-instruction-to-update-with-approval-author",
+          "enabled": true,
+          "month_executions": 0,
+          "steps": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-name",
+              "operations": [
+                {
+                  "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                  "time_to_complete": {
+                    "seconds": 1,
+                    "unit": "s"
+                  },
+                  "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+                }
+              ],
+              "stop_on_fail": true,
+              "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+            }
+          ],
+          "approval": {
+            "comment": "test comment",
+            "user": "approveruser",
+            "requested_by": "manageruser"
+          },
+          "running": false,
+          "deletable": true
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-2",
+          "type": 0,
+          "status": 1,
+          "alarm_patterns": null,
+          "entity_patterns": [
+            {
+              "name": "test filter"
+            }
+          ],
+          "name": "test-instruction-to-update-with-approval-2-name",
+          "description": "test-instruction-to-update-with-approval-2-description",
+          "author": "test-instruction-to-update-with-approval-2-author",
+          "enabled": true,
+          "month_executions": 0,
+          "steps": [
+            {
+              "name": "test-instruction-to-update-with-approval-2-step-1-name",
+              "operations": [
+                {
+                  "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+                  "time_to_complete": {
+                    "seconds": 1,
+                    "unit": "s"
+                  },
+                  "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description"
+                }
+              ],
+              "stop_on_fail": true,
+              "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
+            }
+          ],
+          "approval": {
+            "comment": "test comment",
+            "role": "approver2",
+            "requested_by": "manageruser"
+          },
+          "running": false,
+          "deletable": true
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-3",
+          "alarm_patterns": null,
+          "author": "test-instruction-to-update-with-approval-3-author",
+          "deletable": true,
+          "description": "test-instruction-to-update-with-approval-3-description",
+          "enabled": true,
+          "entity_patterns": [
+            {
+              "name": "test filter"
+            }
+          ],
+          "last_executed_on": 1596712203,
+          "last_modified": 1596712203,
+          "month_executions": 0,
+          "name": "test-instruction-to-update-with-approval-3-name",
+          "running": false,
+          "status": 0,
+          "steps": [
+            {
+              "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint",
+              "name": "test-instruction-to-update-with-approval-3-step-1-name",
+              "operations": [
+                {
+                  "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+                  "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+                  "time_to_complete": {
+                    "seconds": 1,
+                    "unit": "s"
+                  }
+                }
+              ],
+              "stop_on_fail": true
+            }
+          ],
+          "type": 0
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 3
+      }
+    }
+    """
+
+  Scenario: Requester should receive updated version on GET request
+    When I am authenticated with username "manageruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-update-with-approval",
+      "type": 0,
+      "status": 2,
+      "name": "test-instruction-to-update-with-approval-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description",
+      "author": "test-instruction-to-update-with-approval-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "manageruser"
+      }
+    }
+    """
+
+  Scenario: Other users should receive original version on GET request
+    When I am authenticated with username "root" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-update-with-approval",
+      "type": 0,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "name": "test-instruction-to-update-with-approval-name",
+      "description": "test-instruction-to-update-with-approval-description",
+      "author": "test-instruction-to-update-with-approval-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {
+                "seconds": 1,
+                "unit": "s"
+              },
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+        }
+      ],
+      "running": false,
+      "deletable": true
+    }
+    """
+
+  Scenario: The users that didn't request the approval can update only name/description/enabled
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-name-changed",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description-changed",
+      "author": "test-instruction-to-update-with-approval-author",
+      "enabled": false,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "should be ignored"
+        }
+      ]
+    }
+    """
+    Then the response code should be 200
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-name-changed",
+        "description": "test-instruction-to-update-with-approval-description-changed",
+        "author": "test-instruction-to-update-with-approval-author",
+        "enabled": false,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-description",
+        "author": "test-instruction-to-update-with-approval-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "new endpoint"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "user": "approveruser",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+
+  Scenario: The requester can update any updated fields
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description",
+      "author": "test-instruction-to-update-with-approval-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "shouldn't be ignored in updated"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-name-changed",
+        "description": "test-instruction-to-update-with-approval-description-changed",
+        "author": "test-instruction-to-update-with-approval-author",
+        "enabled": false,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-description",
+        "author": "test-instruction-to-update-with-approval-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "shouldn't be ignored in updated"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "user": "approveruser",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+
+  Scenario: The users that didn't request the approval couldn't change or remove the approval
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-name-changed",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description-changed",
+      "author": "test-instruction-to-update-with-approval-author",
+      "enabled": false,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "should be ignored"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "role": "approver",
+        "requested_by": "manageruser"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-name-changed",
+        "description": "test-instruction-to-update-with-approval-description-changed",
+        "author": "test-instruction-to-update-with-approval-author",
+        "enabled": false,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-description",
+        "author": "test-instruction-to-update-with-approval-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "shouldn't be ignored in updated"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "user": "approveruser",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-name-changed",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description-changed",
+      "author": "test-instruction-to-update-with-approval-author",
+      "enabled": false,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "should be ignored"
+        }
+      ]
+    }
+    """
+    Then the response code should be 200
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-name-changed",
+        "description": "test-instruction-to-update-with-approval-description-changed",
+        "author": "test-instruction-to-update-with-approval-author",
+        "enabled": false,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-description",
+        "author": "test-instruction-to-update-with-approval-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "shouldn't be ignored in updated"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "user": "approveruser",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+
+  Scenario: The requester can update or remove the approval, after removal instruction should be updated
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description",
+      "author": "test-instruction-to-update-with-approval-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "shouldn't be ignored in updated"
+        }
+      ],
+      "approval": {
+        "role": "approver2",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 403
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-name-changed",
+        "description": "test-instruction-to-update-with-approval-description-changed",
+        "author": "test-instruction-to-update-with-approval-author",
+        "enabled": false,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-description",
+        "author": "test-instruction-to-update-with-approval-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  },
+                  {
+                    "_id": "test-job-to-instruction-edit-2",
+                    "name": "test-job-to-instruction-edit-2-name",
+                    "author": "test-job-to-instruction-edit-2-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "author": "test-author",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-2-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "shouldn't be ignored in updated"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "role": "approver2",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description",
+      "author": "test-instruction-to-update-with-approval-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "shouldn't be ignored in updated"
+        }
+      ]
+    }
+    """
+    Then the response code should be 200
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    Then the response code should be 404
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-update-with-approval",
+      "type": 0,
+      "status": 0,
+      "name": "test-instruction-to-update-with-approval-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-description",
+      "author": "test-instruction-to-update-with-approval-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "shouldn't be ignored in updated"
+        }
+      ]
+    }
+    """
+
+  Scenario: Only the user from approval should be able to approve
+    When I am authenticated with username "root" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-update-with-approval-2",
+      "type": 0,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "name": "test-instruction-to-update-with-approval-2-name",
+      "description": "test-instruction-to-update-with-approval-2-description",
+      "author": "test-instruction-to-update-with-approval-2-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-2-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+              "time_to_complete": {
+                "seconds": 1,
+                "unit": "s"
+              },
+              "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description"
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
+        }
+      ],
+      "running": false,
+      "deletable": true
+    }
+    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval
+    Then the response code should be 404
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "type": 0,
+      "status": 0,
+      "name": "test-instruction-to-update-with-approval-2-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-2-description",
+      "author": "test-instruction-to-update-with-approval-2-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-2-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 2"
+        }
+      ]
+    }
+    """
+    
+  Scenario: Only the user from approval should be able to dismiss
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint 3"
+        }
+      ],
+      "approval": {
+        "user": "approveruser2",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser2",
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-update-with-approval-3",
+        "type": 0,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "name": "test-instruction-to-update-with-approval-3-name",
+        "description": "test-instruction-to-update-with-approval-3-description",
+        "author": "test-instruction-to-update-with-approval-3-author",
+        "enabled": true,
+        "month_executions": 0,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-3-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+                "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+                },
+                "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description"
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint"
+          }
+        ],
+        "running": false,
+        "deletable": true
+      },
+      "updated": {
+        "type": 0,
+        "status": 2,
+        "name": "test-instruction-to-update-with-approval-3-name",
+        "entity_patterns": [
+          {
+            "name": "test filter"
+          }
+        ],
+        "description": "test-instruction-to-update-with-approval-3-description",
+        "author": "test-instruction-to-update-with-approval-3-author-changed",
+        "enabled": true,
+        "steps": [
+          {
+            "name": "test-instruction-to-update-with-approval-3-step-1-name",
+            "operations": [
+              {
+                "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+                "time_to_complete": {"seconds": 1, "unit":"s"},
+                "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
+                "jobs": [
+                  {
+                    "_id": "test-job-to-instruction-edit-1",
+                    "name": "test-job-to-instruction-edit-1-name",
+                    "author": "test-job-to-instruction-edit-1-author",
+                    "config": {
+                      "_id": "test-job-config-to-edit-instruction",
+                      "name": "test-job-config-to-edit-instruction-name",
+                      "type": "rundeck",
+                      "host": "http://example.com",
+                      "auth_token": "test-auth-token"
+                    },
+                    "job_id": "test-job-to-instruction-edit-1-external-id",
+                    "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                  }
+                ]
+              }
+            ],
+            "stop_on_fail": true,
+            "endpoint": "new endpoint 3"
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "user": "approveruser2",
+          "requested_by": "manageruser"
+        }
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-update-with-approval-3",
+      "type": 0,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {
+                "seconds": 1,
+                "unit": "s"
+              },
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description"
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint"
+        }
+      ],
+      "running": false,
+      "deletable": true
+    }
+    """
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 403
+    Then the response body should be:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser2" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval:
+    """
+    {
+      "approve": false
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
+    Then the response code should be 404
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-update-with-approval-3",
+      "type": 0,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "name": "test-instruction-to-update-with-approval-3-name",
+      "description": "test-instruction-to-update-with-approval-3-description",
+      "author": "test-instruction-to-update-with-approval-3-author",
+      "enabled": true,
+      "month_executions": 0,
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-3-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
+              "time_to_complete": {
+                "seconds": 1,
+                "unit": "s"
+              },
+              "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description"
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint"
+        }
+      ],
+      "running": false,
+      "deletable": true
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionexecution_cancel.feature b/tests/functional/features/api/cat/instructionexecution_cancel.feature
index b5f932a3..d0063685 100644
--- a/tests/functional/features/api/cat/instructionexecution_cancel.feature
+++ b/tests/functional/features/api/cat/instructionexecution_cancel.feature
@@ -165,4 +165,25 @@ Feature: cancel a instruction execution
   Scenario: given get request and auth user without permissions should not allow access
     When I am noperms
     When I do PUT /api/v4/cat/executions/notexist/cancel
-    Then the response code should be 403
\ No newline at end of file
+    Then the response code should be 403
+
+  Scenario: given instruction approval should cancel running executions
+    When I am admin
+    When I do GET /api/v4/cat/executions/test-instruction-to-update-with-approval-should-cancel-execution-running-1
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "status": 0
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-should-cancel-execution/approval:
+    """
+    {
+      "approve": true
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/executions/test-instruction-to-update-with-approval-should-cancel-execution-running-1
+    Then the response code should be 410
\ No newline at end of file
-- 
2.25.1


From 30c0a86b5948744835624996bb57585f3e5034b9 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 23 Apr 2021 22:13:01 +0700
Subject: [PATCH 30/66] change one fixture name

---
 fixtures/instruction.json                     | 40 +++++++++----------
 fixtures/instruction_execution.json           |  8 ++--
 .../cat/instructionexecution_cancel.feature   |  6 +--
 3 files changed, 27 insertions(+), 27 deletions(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 58da9a62..0cc4b311 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -312,36 +312,36 @@
     "created": 1000000002
   },
   {
-    "_id": "test-instruction-to-update-with-approval-should-cancel-execution",
+    "_id": "test-instruction-to-update-w-approval-should-cancel-execution",
     "type": 0,
-    "name": "test-instruction-to-update-with-approval-should-cancel-execution-name",
+    "name": "test-instruction-to-update-w-approval-should-cancel-execution-name",
     "entity_patterns": [
       {
         "name": "test filter"
       }
     ],
-    "description": "test-instruction-to-update-with-approval-should-cancel-execution-description",
-    "author": "test-instruction-to-update-with-approval-should-cancel-execution-author",
+    "description": "test-instruction-to-update-w-approval-should-cancel-execution-description",
+    "author": "test-instruction-to-update-w-approval-should-cancel-execution-author",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
       {
-        "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1",
-        "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-name",
+        "_id": "test-instruction-to-update-w-approval-should-cancel-execution-step-1",
+        "name": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1",
-            "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-name",
+            "_id": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-operation-1",
+            "name": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-description",
+            "description": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-operation-1-description",
             "jobs": []
           }
         ],
         "stop_on_fail": true,
-        "endpoint": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-endpoint"
+        "endpoint": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-endpoint"
       }
     ],
     "last_executed_by": "root",
@@ -350,33 +350,33 @@
     "created": 1000000002
   },
   {
-    "_id": "test-instruction-to-update-with-approval-should-cancel-execution-updated",
-    "original_id": "test-instruction-to-update-with-approval-should-cancel-execution",
+    "_id": "test-instruction-to-update-w-approval-should-cancel-execution-updated",
+    "original_id": "test-instruction-to-update-w-approval-should-cancel-execution",
     "type": 0,
-    "name": "test-instruction-to-update-with-approval-should-cancel-execution-name",
+    "name": "test-instruction-to-update-w-approval-should-cancel-execution-name",
     "entity_patterns": [
       {
         "name": "test filter"
       }
     ],
-    "description": "test-instruction-to-update-with-approval-should-cancel-execution-description",
-    "author": "test-instruction-to-update-with-approval-should-cancel-execution-author",
+    "description": "test-instruction-to-update-w-approval-should-cancel-execution-description",
+    "author": "test-instruction-to-update-w-approval-should-cancel-execution-author",
     "enabled": true,
     "status": 2,
     "avg_complete_time": 10,
     "steps": [
       {
-        "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1",
-        "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-name",
+        "_id": "test-instruction-to-update-w-approval-should-cancel-execution-step-1",
+        "name": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-name",
         "operations": [
           {
-            "_id": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1",
-            "name": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-name",
+            "_id": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-operation-1",
+            "name": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-operation-1-name",
             "time_to_complete": {
               "seconds": 1,
               "unit": "s"
             },
-            "description": "test-instruction-to-update-with-approval-should-cancel-execution-step-1-operation-1-description",
+            "description": "test-instruction-to-update-w-approval-should-cancel-execution-step-1-operation-1-description",
             "jobs": []
           }
         ],
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 1fe7d201..7623da84 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -38,15 +38,15 @@
     ]
   },
   {
-    "_id": "test-instruction-to-update-with-approval-should-cancel-execution-running-1",
-    "instruction": "test-instruction-to-update-with-approval-should-cancel-execution",
+    "_id": "test-instruction-to-update-w-approval-should-cancel-execution-running-1",
+    "instruction": "test-instruction-to-update-w-approval-should-cancel-execution",
     "status": 0,
     "step_history": [
       {
-        "step": "test-instruction-to-update-with-approval-should-cancel-execution-running-1-step-1",
+        "step": "test-instruction-to-update-w-approval-should-cancel-execution-running-1-step-1",
         "operation_history": [
           {
-            "operation": "test-instruction-to-update-with-approval-should-cancel-execution-running-1-step-1-operation-1",
+            "operation": "test-instruction-to-update-w-approval-should-cancel-execution-running-1-step-1-operation-1",
             "started_at": 1597905434,
             "job_history": []
           }
diff --git a/tests/functional/features/api/cat/instructionexecution_cancel.feature b/tests/functional/features/api/cat/instructionexecution_cancel.feature
index d0063685..2905c780 100644
--- a/tests/functional/features/api/cat/instructionexecution_cancel.feature
+++ b/tests/functional/features/api/cat/instructionexecution_cancel.feature
@@ -169,7 +169,7 @@ Feature: cancel a instruction execution
 
   Scenario: given instruction approval should cancel running executions
     When I am admin
-    When I do GET /api/v4/cat/executions/test-instruction-to-update-with-approval-should-cancel-execution-running-1
+    When I do GET /api/v4/cat/executions/test-instruction-to-update-w-approval-should-cancel-execution-running-1
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -178,12 +178,12 @@ Feature: cancel a instruction execution
     }
     """
     When I am authenticated with username "approveruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-should-cancel-execution/approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-w-approval-should-cancel-execution/approval:
     """
     {
       "approve": true
     }
     """
     Then the response code should be 200
-    When I do GET /api/v4/cat/executions/test-instruction-to-update-with-approval-should-cancel-execution-running-1
+    When I do GET /api/v4/cat/executions/test-instruction-to-update-w-approval-should-cancel-execution-running-1
     Then the response code should be 410
\ No newline at end of file
-- 
2.25.1


From af51c52c4ad160e617c54c8ba21249091a878ff1 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 23 Apr 2021 23:49:36 +0700
Subject: [PATCH 31/66] fix tests after merge

---
 .../instruction_create_with_approval.feature  |  97 ++++++++++---
 .../instruction_update_with_approval.feature  | 129 ++++++++++--------
 2 files changed, 150 insertions(+), 76 deletions(-)

diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
index 3df13b80..465067ce 100644
--- a/tests/functional/features/api/cat/instruction_create_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -17,6 +17,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -71,6 +75,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-2-description",
       "author": "test-instruction-to-create-with-approval-2-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-2-step-1",
@@ -121,6 +129,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-3-description",
       "author": "test-instruction-to-create-with-approval-3-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-3-step-1",
@@ -171,6 +183,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-4-description",
       "author": "test-instruction-to-create-with-approval-4-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-4-step-1",
@@ -225,6 +241,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-5-description",
       "author": "test-instruction-to-create-with-approval-5-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-5-step-1",
@@ -275,6 +295,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-6-description",
       "author": "test-instruction-to-create-with-approval-6-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-6-step-1",
@@ -325,6 +349,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-7-description",
       "author": "test-instruction-to-create-with-approval-7-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-7-step-1",
@@ -376,6 +404,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-8-description",
       "author": "test-instruction-to-create-with-approval-8-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-8-step-1",
@@ -432,7 +464,6 @@ Feature: instruction approval creation
           "description": "test-instruction-to-create-with-approval-1-description",
           "author": "test-instruction-to-create-with-approval-1-author",
           "enabled": true,
-          "month_executions": 0,
           "steps": [
             {
               "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -502,7 +533,6 @@ Feature: instruction approval creation
           "description": "test-instruction-to-create-with-approval-4-description",
           "author": "test-instruction-to-create-with-approval-4-author",
           "enabled": true,
-          "month_executions": 0,
           "steps": [
             {
               "name": "test-instruction-to-create-with-approval-4-step-1",
@@ -589,7 +619,6 @@ Feature: instruction approval creation
         "description": "test-instruction-to-create-with-approval-1-description",
         "author": "test-instruction-to-create-with-approval-1-author",
         "enabled": true,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -669,7 +698,6 @@ Feature: instruction approval creation
         "description": "test-instruction-to-create-with-approval-4-description",
         "author": "test-instruction-to-create-with-approval-4-author",
         "enabled": true,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-create-with-approval-4-step-1",
@@ -775,7 +803,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -851,7 +878,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -927,7 +953,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1001,6 +1026,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description-changed",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": false,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1042,7 +1071,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description-changed",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": false,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1111,6 +1139,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1152,7 +1184,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1226,6 +1257,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1267,7 +1302,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1341,6 +1375,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1382,7 +1420,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1456,6 +1493,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1497,7 +1538,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1571,6 +1611,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1612,7 +1656,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1686,6 +1729,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1723,7 +1770,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1797,6 +1843,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1834,7 +1884,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-1-description",
       "author": "test-instruction-to-create-with-approval-1-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-1-step-1",
@@ -1903,6 +1952,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-5-description",
       "author": "test-instruction-to-create-with-approval-5-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-5-step-1",
@@ -1993,7 +2046,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-5-description",
       "author": "test-instruction-to-create-with-approval-5-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-5-step-1",
@@ -2062,6 +2114,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-6-description",
       "author": "test-instruction-to-create-with-approval-6-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-6-step-1",
@@ -2152,7 +2208,6 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-6-description",
       "author": "test-instruction-to-create-with-approval-6-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-6-step-1",
@@ -2221,6 +2276,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-7-description",
       "author": "test-instruction-to-create-with-approval-7-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-7-step-1",
@@ -2312,6 +2371,10 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-8-description",
       "author": "test-instruction-to-create-with-approval-8-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-create-with-approval-8-step-1",
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
index 6c34d6f8..0fda624f 100644
--- a/tests/functional/features/api/cat/instruction_update_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -15,6 +15,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description",
       "author": "test-instruction-to-update-with-approval-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -72,7 +76,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description",
         "author": "test-instruction-to-update-with-approval-author",
         "enabled": true,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -89,9 +92,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -158,6 +159,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-2-description",
       "author": "test-instruction-to-update-with-approval-2-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-2-step-1-name",
@@ -215,7 +220,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-2-description",
         "author": "test-instruction-to-update-with-approval-2-author",
         "enabled": true,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-2-step-1-name",
@@ -232,9 +236,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -301,6 +303,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -350,6 +356,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -399,6 +409,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -448,6 +462,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -497,6 +515,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -555,7 +577,6 @@ Feature: instruction approval update
           "description": "test-instruction-to-update-with-approval-description",
           "author": "test-instruction-to-update-with-approval-author",
           "enabled": true,
-          "month_executions": 0,
           "steps": [
             {
               "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -577,9 +598,7 @@ Feature: instruction approval update
             "comment": "test comment",
             "user": "approveruser",
             "requested_by": "manageruser"
-          },
-          "running": false,
-          "deletable": true
+          }
         },
         {
           "_id": "test-instruction-to-update-with-approval-2",
@@ -595,7 +614,6 @@ Feature: instruction approval update
           "description": "test-instruction-to-update-with-approval-2-description",
           "author": "test-instruction-to-update-with-approval-2-author",
           "enabled": true,
-          "month_executions": 0,
           "steps": [
             {
               "name": "test-instruction-to-update-with-approval-2-step-1-name",
@@ -617,15 +635,12 @@ Feature: instruction approval update
             "comment": "test comment",
             "role": "approver2",
             "requested_by": "manageruser"
-          },
-          "running": false,
-          "deletable": true
+          }
         },
         {
           "_id": "test-instruction-to-update-with-approval-3",
           "alarm_patterns": null,
           "author": "test-instruction-to-update-with-approval-3-author",
-          "deletable": true,
           "description": "test-instruction-to-update-with-approval-3-description",
           "enabled": true,
           "entity_patterns": [
@@ -635,9 +650,7 @@ Feature: instruction approval update
           ],
           "last_executed_on": 1596712203,
           "last_modified": 1596712203,
-          "month_executions": 0,
           "name": "test-instruction-to-update-with-approval-3-name",
-          "running": false,
           "status": 0,
           "steps": [
             {
@@ -745,7 +758,6 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description",
       "author": "test-instruction-to-update-with-approval-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -762,9 +774,7 @@ Feature: instruction approval update
           "stop_on_fail": true,
           "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
         }
-      ],
-      "running": false,
-      "deletable": true
+      ]
     }
     """
 
@@ -782,6 +792,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description-changed",
       "author": "test-instruction-to-update-with-approval-author",
       "enabled": false,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -828,7 +842,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description-changed",
         "author": "test-instruction-to-update-with-approval-author",
         "enabled": false,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -845,9 +858,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -914,6 +925,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description",
       "author": "test-instruction-to-update-with-approval-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -963,7 +978,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description-changed",
         "author": "test-instruction-to-update-with-approval-author",
         "enabled": false,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -980,9 +994,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -1050,6 +1062,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description-changed",
       "author": "test-instruction-to-update-with-approval-author",
       "enabled": false,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -1101,7 +1117,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description-changed",
         "author": "test-instruction-to-update-with-approval-author",
         "enabled": false,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -1118,9 +1133,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -1186,6 +1199,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description-changed",
       "author": "test-instruction-to-update-with-approval-author",
       "enabled": false,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -1231,7 +1248,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description-changed",
         "author": "test-instruction-to-update-with-approval-author",
         "enabled": false,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -1248,9 +1264,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -1318,6 +1332,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description",
       "author": "test-instruction-to-update-with-approval-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -1371,7 +1389,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description-changed",
         "author": "test-instruction-to-update-with-approval-author",
         "enabled": false,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -1388,9 +1405,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -1471,6 +1486,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-description",
       "author": "test-instruction-to-update-with-approval-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-step-1-name",
@@ -1581,7 +1600,6 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-2-description",
       "author": "test-instruction-to-update-with-approval-2-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-2-step-1-name",
@@ -1598,9 +1616,7 @@ Feature: instruction approval update
           "stop_on_fail": true,
           "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
         }
-      ],
-      "running": false,
-      "deletable": true
+      ]
     }
     """
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval:
@@ -1703,6 +1719,10 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -1752,7 +1772,6 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-3-description",
         "author": "test-instruction-to-update-with-approval-3-author",
         "enabled": true,
-        "month_executions": 0,
         "steps": [
           {
             "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -1769,9 +1788,7 @@ Feature: instruction approval update
             "stop_on_fail": true,
             "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint"
           }
-        ],
-        "running": false,
-        "deletable": true
+        ]
       },
       "updated": {
         "type": 0,
@@ -1841,7 +1858,6 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -1858,9 +1874,7 @@ Feature: instruction approval update
           "stop_on_fail": true,
           "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint"
         }
-      ],
-      "running": false,
-      "deletable": true
+      ]
     }
     """
     When I am authenticated with username "manageruser" and password "test"
@@ -1905,7 +1919,6 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": "test-instruction-to-update-with-approval-3-author",
       "enabled": true,
-      "month_executions": 0,
       "steps": [
         {
           "name": "test-instruction-to-update-with-approval-3-step-1-name",
@@ -1922,8 +1935,6 @@ Feature: instruction approval update
           "stop_on_fail": true,
           "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint"
         }
-      ],
-      "running": false,
-      "deletable": true
+      ]
     }
     """
\ No newline at end of file
-- 
2.25.1


From fb0cbaf6d0c664efabd183eac7d0ab93dbd30cde Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 23 Apr 2021 23:52:16 +0700
Subject: [PATCH 32/66] fix collection names

---
 lib/mongo/mongo.go | 1 -
 1 file changed, 1 deletion(-)

diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index c2cee2cd..d8b174ea 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -54,7 +54,6 @@ const (
 	BroadcastMessageMongoCollection     = "broadcast_message"
 	AssociativeTableCollection          = "default_associativetable"
 	NotificationCollection              = "notification"
-	InstructionApprovalMongoCollection  = "instruction_approval"
 )
 
 type SingleResultHelper interface {
-- 
2.25.1


From d7c552f6ca24ec07503202a7749bfde81b594b85 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Wed, 28 Apr 2021 17:00:51 +0700
Subject: [PATCH 33/66] fixes

---
 lib/api/alarm/store.go     | 3 +++
 lib/api/auth/constants.go  | 4 ++--
 lib/validator/validator.go | 2 +-
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/lib/api/alarm/store.go b/lib/api/alarm/store.go
index a0eed53d..bd3efbd5 100644
--- a/lib/api/alarm/store.go
+++ b/lib/api/alarm/store.go
@@ -31,6 +31,8 @@ const (
 	InstructionTypeAuto         = 1
 )
 
+const InstructionApproved = 0
+
 const InstructionsQueryAll = "all"
 
 const linkFetchTimeout = 30 * time.Second
@@ -366,6 +368,7 @@ func (s *store) getAssignedInstructionsMap(ctx context.Context, alarmIds []strin
 			{"$match": bson.M{
 				"type": InstructionTypeManual,
 			}},
+			{"$match": bson.M{"status": bson.M{"$in": bson.A{InstructionApproved, nil}}}}, //get only approved
 			{"$lookup": bson.M{
 				"from":         mongo.InstructionExecutionMongoCollection,
 				"localField":   "_id",
diff --git a/lib/api/auth/constants.go b/lib/api/auth/constants.go
index 4eb09457..60ee73a2 100644
--- a/lib/api/auth/constants.go
+++ b/lib/api/auth/constants.go
@@ -2,8 +2,8 @@ package auth
 
 const (
 	// UserKey is the context name for user credential.
-	UserKey     = "user_id"
-	RoleKey     = "role"
+	UserKey = "user_id"
+	RoleKey = "role"
 	// ApiKey is the context name for user api key.
 	ApiKey = "api_key"
 	// RoleKey is the context name for user's role
diff --git a/lib/validator/validator.go b/lib/validator/validator.go
index 39323efc..177077ba 100644
--- a/lib/validator/validator.go
+++ b/lib/validator/validator.go
@@ -37,7 +37,7 @@ func RegisterTranslations(v *validator.Validate) {
 		return t
 	})
 	_ = v.RegisterTranslation("required_not_both", trans, func(ut ut.Translator) error {
-		return ut.Add("required_not_both", "Can't be present both {0} and {1}", true)
+		return ut.Add("required_not_both", "Can't be present both {0} and {1}.", true)
 	}, func(ut ut.Translator, fe validator.FieldError) string {
 		t, _ := ut.T("required_not_both", fe.StructField(), fe.Param())
 		return t
-- 
2.25.1


From dfe18a62abd77a408ffcd094e1b6cf934adb41b9 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Wed, 28 Apr 2021 20:19:03 +0700
Subject: [PATCH 34/66] fixes and tests

---
 fixtures/instruction.json                     |  228 ++
 lib/validator/validator.go                    |    8 +-
 .../instruction_create_with_approval.feature  | 1865 ++++++++++++-----
 .../instruction_update_with_approval.feature  |  766 ++++---
 4 files changed, 1977 insertions(+), 890 deletions(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 0cc4b311..d0b73457 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -311,6 +311,234 @@
     "last_modified": 1596712203,
     "created": 1000000002
   },
+  {
+    "_id": "test-instruction-to-update-with-approval-4",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-4-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-4-description",
+    "author": "test-instruction-to-update-with-approval-4-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-4-step-1",
+        "name": "test-instruction-to-update-with-approval-4-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-4-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-4-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-4-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-4-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-5",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-5-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-5-description",
+    "author": "test-instruction-to-update-with-approval-5-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-5-step-1",
+        "name": "test-instruction-to-update-with-approval-5-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-5-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-5-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-5-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-5-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-6",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-6-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-6-description",
+    "author": "test-instruction-to-update-with-approval-6-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-6-step-1",
+        "name": "test-instruction-to-update-with-approval-6-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-6-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-6-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-6-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-6-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-7",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-7-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-7-description",
+    "author": "test-instruction-to-update-with-approval-7-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-7-step-1",
+        "name": "test-instruction-to-update-with-approval-7-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-7-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-7-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-8",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-8-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-8-description",
+    "author": "test-instruction-to-update-with-approval-8-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-8-step-1",
+        "name": "test-instruction-to-update-with-approval-8-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-8-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-8-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-8-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-8-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
+  {
+    "_id": "test-instruction-to-update-with-approval-9",
+    "type": 0,
+    "name": "test-instruction-to-update-with-approval-9-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-update-with-approval-9-description",
+    "author": "test-instruction-to-update-with-approval-9-author",
+    "enabled": true,
+    "avg_complete_time": 10,
+    "steps": [
+      {
+        "_id": "test-instruction-to-update-with-approval-9-step-1",
+        "name": "test-instruction-to-update-with-approval-9-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-update-with-approval-9-step-1-operation-1",
+            "name": "test-instruction-to-update-with-approval-9-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-update-with-approval-9-step-1-operation-1-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-update-with-approval-9-step-1-endpoint"
+      }
+    ],
+    "last_executed_by": "root",
+    "last_executed_on": 1596712203,
+    "last_modified": 1596712203,
+    "created": 1000000002
+  },
   {
     "_id": "test-instruction-to-update-w-approval-should-cancel-execution",
     "type": 0,
diff --git a/lib/validator/validator.go b/lib/validator/validator.go
index 177077ba..2c418c09 100644
--- a/lib/validator/validator.go
+++ b/lib/validator/validator.go
@@ -103,13 +103,7 @@ func RegisterTranslations(v *validator.Validate) {
 		return t
 	})
 	_ = v.RegisterTranslation("not_approver", trans, func(ut ut.Translator) error {
-		return ut.Add("not_approver", "{0} doesn't have approve rights.", true)
-	}, func(ut ut.Translator, fe validator.FieldError) string {
-		t, _ := ut.T("not_approver", fe.StructField())
-		return t
-	})
-	_ = v.RegisterTranslation("", trans, func(ut ut.Translator) error {
-		return ut.Add("not_approver", "{0} doesn't have approve rights.", true)
+		return ut.Add("not_approver", "{0} doesn't have approve rights or doesn't exist.", true)
 	}, func(ut ut.Translator, fe validator.FieldError) string {
 		t, _ := ut.T("not_approver", fe.StructField())
 		return t
diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
index 465067ce..e0bc6057 100644
--- a/tests/functional/features/api/cat/instruction_create_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -1,7 +1,7 @@
 Feature: instruction approval creation
   I need to be able to create an instruction with approval
 
-  Scenario: given create request with approval request with user should return ok
+  Scenario: given create request with approval request with user or role should return ok
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
     """
@@ -58,22 +58,19 @@ Feature: instruction approval creation
       }
     }
     """
-
-  Scenario: given create request with approval request with not existed username should return ok
-    When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-2-id",
+      "_id": "test-instruction-to-create-with-approval-4-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-2-name",
+      "name": "test-instruction-to-create-with-approval-4-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-2-pattern"
+          "name": "test-instruction-to-create-with-approval-4-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-2-description",
-      "author": "test-instruction-to-create-with-approval-2-author",
+      "description": "test-instruction-to-create-with-approval-4-description",
+      "author": "test-instruction-to-create-with-approval-4-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -81,12 +78,12 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-2-step-1",
+          "name": "test-instruction-to-create-with-approval-4-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-2-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-2-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -94,40 +91,197 @@ Feature: instruction approval creation
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-with-approval-2-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
         }
       ],
       "approval": {
-        "user": "rootnotexist",
+        "role": "approver",
         "comment": "test comment"
       }
     }
     """
-    Then the response code should be 400
+    Then the response code should be 201
     Then the response body should contain:
     """
     {
-      "errors": {
-        "approval.user": "User doesn't exist."
+      "_id": "test-instruction-to-create-with-approval-4-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver",
+        "requested_by": "root"
       }
     }
     """
-  
-  Scenario: given create request with approval request with a username without approve right should return error
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-create-with-approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-create-with-approval-1-id",
+          "type": 0,
+          "status": 1,
+          "alarm_patterns": null,
+          "entity_patterns": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-pattern"
+            }
+          ],
+          "name": "test-instruction-to-create-with-approval-1-name",
+          "description": "test-instruction-to-create-with-approval-1-description",
+          "author": "test-instruction-to-create-with-approval-1-author",
+          "enabled": true,
+          "steps": [
+            {
+              "name": "test-instruction-to-create-with-approval-1-step-1",
+              "operations": [
+                {
+                  "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+                  "time_to_complete": {
+                      "seconds": 1,
+                      "unit": "s"
+                  },
+                  "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+                  "jobs": [
+                    {
+                      "_id": "test-job-to-instruction-edit-1",
+                      "name": "test-job-to-instruction-edit-1-name",
+                      "author": "test-job-to-instruction-edit-1-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-1-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    },
+                    {
+                      "_id": "test-job-to-instruction-edit-2",
+                      "name": "test-job-to-instruction-edit-2-name",
+                      "author": "test-job-to-instruction-edit-2-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-2-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    }
+                  ]
+                }
+              ],
+              "stop_on_fail": true,
+              "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+            }
+          ],
+          "approval": {
+            "comment": "test comment",
+            "user": "approveruser",
+            "requested_by": "root"
+          }
+        },
+        {
+          "_id": "test-instruction-to-create-with-approval-4-id",
+          "type": 0,
+          "status": 1,
+          "alarm_patterns": null,
+          "entity_patterns": [
+            {
+              "name": "test-instruction-to-create-with-approval-4-pattern"
+            }
+          ],
+          "name": "test-instruction-to-create-with-approval-4-name",
+          "description": "test-instruction-to-create-with-approval-4-description",
+          "author": "test-instruction-to-create-with-approval-4-author",
+          "enabled": true,
+          "steps": [
+            {
+              "name": "test-instruction-to-create-with-approval-4-step-1",
+              "operations": [
+                {
+                  "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
+                  "time_to_complete": {
+                      "seconds": 1,
+                      "unit": "s"
+                  },
+                  "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
+                  "jobs": [
+                    {
+                      "_id": "test-job-to-instruction-edit-1",
+                      "name": "test-job-to-instruction-edit-1-name",
+                      "author": "test-job-to-instruction-edit-1-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-1-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    },
+                    {
+                      "_id": "test-job-to-instruction-edit-2",
+                      "name": "test-job-to-instruction-edit-2-name",
+                      "author": "test-job-to-instruction-edit-2-author",
+                      "config": {
+                        "_id": "test-job-config-to-edit-instruction",
+                        "name": "test-job-config-to-edit-instruction-name",
+                        "type": "rundeck",
+                        "host": "http://example.com",
+                        "author": "test-author",
+                        "auth_token": "test-auth-token"
+                      },
+                      "job_id": "test-job-to-instruction-edit-2-external-id",
+                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                    }
+                  ]
+                }
+              ],
+              "stop_on_fail": true,
+              "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
+            }
+          ],
+          "approval": {
+            "comment": "test comment",
+            "role": "approver",
+            "requested_by": "root"
+          }
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: given create request with approval request with not existed username should return ok
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-3-id",
+      "_id": "test-instruction-to-create-with-approval-2-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-3-name",
+      "name": "test-instruction-to-create-with-approval-2-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-3-pattern"
+          "name": "test-instruction-to-create-with-approval-2-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-3-description",
-      "author": "test-instruction-to-create-with-approval-3-author",
+      "description": "test-instruction-to-create-with-approval-2-description",
+      "author": "test-instruction-to-create-with-approval-2-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -135,12 +289,12 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-3-step-1",
+          "name": "test-instruction-to-create-with-approval-2-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-3-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-2-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-3-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-2-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -148,11 +302,11 @@ Feature: instruction approval creation
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-with-approval-3-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-with-approval-2-step-1-endpoint"
         }
       ],
       "approval": {
-        "user": "nopermsuser",
+        "user": "rootnotexist",
         "comment": "test comment"
       }
     }
@@ -162,26 +316,26 @@ Feature: instruction approval creation
     """
     {
       "errors": {
-        "approval.user": "User doesn't have approve rights."
+        "approval.user": "User doesn't have approve rights or doesn't exist."
       }
     }
-    """  
+    """
 
-  Scenario: given create request with approval request with role should return ok
+  Scenario: given create request with approval request with a username without approve right should return error
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-4-id",
+      "_id": "test-instruction-to-create-with-approval-3-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-4-name",
+      "name": "test-instruction-to-create-with-approval-3-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-4-pattern"
+          "name": "test-instruction-to-create-with-approval-3-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-4-description",
-      "author": "test-instruction-to-create-with-approval-4-author",
+      "description": "test-instruction-to-create-with-approval-3-description",
+      "author": "test-instruction-to-create-with-approval-3-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -189,12 +343,12 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-4-step-1",
+          "name": "test-instruction-to-create-with-approval-3-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-3-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-3-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -202,25 +356,21 @@ Feature: instruction approval creation
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-with-approval-3-step-1-endpoint"
         }
       ],
       "approval": {
-        "role": "approver",
+        "user": "nopermsuser",
         "comment": "test comment"
       }
     }
     """
-    Then the response code should be 201
+    Then the response code should be 400
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-4-id",
-      "status": 1,
-      "approval": {
-        "comment": "test comment",
-        "role": "approver",
-        "requested_by": "root"
+      "errors": {
+        "approval.user": "User doesn't have approve rights or doesn't exist."
       }
     }
     """
@@ -274,7 +424,7 @@ Feature: instruction approval creation
     """
     {
       "errors": {
-        "approval.role": "Role doesn't exist."
+        "approval.role": "Role doesn't have approve rights or doesn't exist."
       }
     }
     """
@@ -328,7 +478,7 @@ Feature: instruction approval creation
     """
     {
       "errors": {
-        "approval.role": "Role doesn't have approve rights."
+        "approval.role": "Role doesn't have approve rights or doesn't exist."
       }
     }
     """
@@ -383,7 +533,7 @@ Feature: instruction approval creation
     """
     {
       "errors": {
-        "approval.role": "Can't be present both Role and User"
+        "approval.role": "Can't be present both Role and User."
       }
     }
     """
@@ -442,194 +592,94 @@ Feature: instruction approval creation
     }
     """
 
-  Scenario: New instructions should be in the list with approval
-    When I am admin
-    When I do GET /api/v4/cat/instructions?search=test-instruction-to-create-with-approval
-    Then the response code should be 200
-    Then the response body should contain:
+  Scenario: the approver should be able to get approval data by username
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
     """
     {
-      "data": [
+      "_id": "test-instruction-to-create-with-approval-9-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-9-name",
+      "entity_patterns": [
         {
-          "_id": "test-instruction-to-create-with-approval-1-id",
-          "type": 0,
-          "status": 1,
-          "alarm_patterns": null,
-          "entity_patterns": [
-            {
-              "name": "test-instruction-to-create-with-approval-1-pattern"
-            }
-          ],
-          "name": "test-instruction-to-create-with-approval-1-name",
-          "description": "test-instruction-to-create-with-approval-1-description",
-          "author": "test-instruction-to-create-with-approval-1-author",
-          "enabled": true,
-          "steps": [
-            {
-              "name": "test-instruction-to-create-with-approval-1-step-1",
-              "operations": [
-                {
-                  "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-                  "time_to_complete": {
-                      "seconds": 1,
-                      "unit": "s"
-                  },
-                  "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
-                  "jobs": [
-                    {
-                      "_id": "test-job-to-instruction-edit-1",
-                      "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-job-to-instruction-edit-1-author",
-                      "config": {
-                        "_id": "test-job-config-to-edit-instruction",
-                        "name": "test-job-config-to-edit-instruction-name",
-                        "type": "rundeck",
-                        "host": "http://example.com",
-                        "author": "test-author",
-                        "auth_token": "test-auth-token"
-                      },
-                      "job_id": "test-job-to-instruction-edit-1-external-id",
-                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                    },
-                    {
-                      "_id": "test-job-to-instruction-edit-2",
-                      "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-job-to-instruction-edit-2-author",
-                      "config": {
-                        "_id": "test-job-config-to-edit-instruction",
-                        "name": "test-job-config-to-edit-instruction-name",
-                        "type": "rundeck",
-                        "host": "http://example.com",
-                        "author": "test-author",
-                        "auth_token": "test-auth-token"
-                      },
-                      "job_id": "test-job-to-instruction-edit-2-external-id",
-                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                    }
-                  ]
-                }
-              ],
-              "stop_on_fail": true,
-              "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
-            }
-          ],
-          "approval": {
-            "comment": "test comment",
-            "user": "approveruser",
-            "requested_by": "root"
-          }
-        },
+          "name": "test-instruction-to-create-with-approval-9-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-9-description",
+      "author": "test-instruction-to-create-with-approval-9-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
         {
-          "_id": "test-instruction-to-create-with-approval-4-id",
-          "type": 0,
-          "status": 1,
-          "alarm_patterns": null,
-          "entity_patterns": [
-            {
-              "name": "test-instruction-to-create-with-approval-4-pattern"
-            }
-          ],
-          "name": "test-instruction-to-create-with-approval-4-name",
-          "description": "test-instruction-to-create-with-approval-4-description",
-          "author": "test-instruction-to-create-with-approval-4-author",
-          "enabled": true,
-          "steps": [
+          "name": "test-instruction-to-create-with-approval-9-step-1",
+          "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-4-step-1",
-              "operations": [
-                {
-                  "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
-                  "time_to_complete": {
-                      "seconds": 1,
-                      "unit": "s"
-                  },
-                  "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
-                  "jobs": [
-                    {
-                      "_id": "test-job-to-instruction-edit-1",
-                      "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-job-to-instruction-edit-1-author",
-                      "config": {
-                        "_id": "test-job-config-to-edit-instruction",
-                        "name": "test-job-config-to-edit-instruction-name",
-                        "type": "rundeck",
-                        "host": "http://example.com",
-                        "author": "test-author",
-                        "auth_token": "test-auth-token"
-                      },
-                      "job_id": "test-job-to-instruction-edit-1-external-id",
-                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                    },
-                    {
-                      "_id": "test-job-to-instruction-edit-2",
-                      "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-job-to-instruction-edit-2-author",
-                      "config": {
-                        "_id": "test-job-config-to-edit-instruction",
-                        "name": "test-job-config-to-edit-instruction-name",
-                        "type": "rundeck",
-                        "host": "http://example.com",
-                        "author": "test-author",
-                        "auth_token": "test-auth-token"
-                      },
-                      "job_id": "test-job-to-instruction-edit-2-external-id",
-                      "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                    }
-                  ]
-                }
-              ],
-              "stop_on_fail": true,
-              "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
+              "name": "test-instruction-to-create-with-approval-9-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-9-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
             }
           ],
-          "approval": {
-            "comment": "test comment",
-            "role": "approver",
-            "requested_by": "root"
-          }
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-9-step-1-endpoint"
         }
       ],
-      "meta": {
-        "page": 1,
-        "page_count": 1,
-        "per_page": 10,
-        "total_count": 2
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-9-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
       }
     }
     """
-
-  Scenario: the approver should be able to get approval data by username
     When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-9-id/approval
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "original": {
-        "_id": "test-instruction-to-create-with-approval-1-id",
+        "_id": "test-instruction-to-create-with-approval-9-id",
         "type": 0,
         "status": 1,
         "alarm_patterns": null,
         "entity_patterns": [
           {
-            "name": "test-instruction-to-create-with-approval-1-pattern"
+            "name": "test-instruction-to-create-with-approval-9-pattern"
           }
         ],
-        "name": "test-instruction-to-create-with-approval-1-name",
-        "description": "test-instruction-to-create-with-approval-1-description",
-        "author": "test-instruction-to-create-with-approval-1-author",
+        "name": "test-instruction-to-create-with-approval-9-name",
+        "description": "test-instruction-to-create-with-approval-9-description",
+        "author": "test-instruction-to-create-with-approval-9-author",
         "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-create-with-approval-1-step-1",
+            "name": "test-instruction-to-create-with-approval-9-step-1",
             "operations": [
               {
-                "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+                "name": "test-instruction-to-create-with-approval-9-step-1-operation-1",
                 "time_to_complete": {
                     "seconds": 1,
                     "unit": "s"
                 },
-                "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+                "description": "test-instruction-to-create-with-approval-9-step-1-operation-1-description",
                 "jobs": [
                   {
                     "_id": "test-job-to-instruction-edit-1",
@@ -665,7 +715,7 @@ Feature: instruction approval creation
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+            "endpoint": "test-instruction-to-create-with-approval-9-step-1-endpoint"
           }
         ]
       },
@@ -678,37 +728,93 @@ Feature: instruction approval creation
     """
 
   Scenario: the approver should be able to get approval data by role
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-10-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-10-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-10-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-10-description",
+      "author": "test-instruction-to-create-with-approval-10-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-10-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-10-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-10-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-10-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "approver",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-10-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver",
+        "requested_by": "root"
+      }
+    }
+    """
     When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-4-id/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-10-id/approval
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "original": {
-        "_id": "test-instruction-to-create-with-approval-4-id",
+        "_id": "test-instruction-to-create-with-approval-10-id",
         "type": 0,
         "status": 1,
         "alarm_patterns": null,
         "entity_patterns": [
           {
-            "name": "test-instruction-to-create-with-approval-4-pattern"
+            "name": "test-instruction-to-create-with-approval-10-pattern"
           }
         ],
-        "name": "test-instruction-to-create-with-approval-4-name",
-        "description": "test-instruction-to-create-with-approval-4-description",
-        "author": "test-instruction-to-create-with-approval-4-author",
+        "name": "test-instruction-to-create-with-approval-10-name",
+        "description": "test-instruction-to-create-with-approval-10-description",
+        "author": "test-instruction-to-create-with-approval-10-author",
         "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-create-with-approval-4-step-1",
+            "name": "test-instruction-to-create-with-approval-10-step-1",
             "operations": [
               {
-                "name": "test-instruction-to-create-with-approval-4-step-1-operation-1",
+                "name": "test-instruction-to-create-with-approval-10-step-1-operation-1",
                 "time_to_complete": {
                     "seconds": 1,
                     "unit": "s"
                 },
-                "description": "test-instruction-to-create-with-approval-4-step-1-operation-1-description",
+                "description": "test-instruction-to-create-with-approval-10-step-1-operation-1-description",
                 "jobs": [
                   {
                     "_id": "test-job-to-instruction-edit-1",
@@ -744,7 +850,7 @@ Feature: instruction approval creation
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "test-instruction-to-create-with-approval-4-step-1-endpoint"
+            "endpoint": "test-instruction-to-create-with-approval-10-step-1-endpoint"
           }
         ]
       },
@@ -757,65 +863,233 @@ Feature: instruction approval creation
     """
 
   Scenario: the user, which is not set in approval should receive 403
-    When I am authenticated with username "manageruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id/approval
-    Then the response code should be 403
-    Then the response body should contain:
-    """
-    {
-      "error": "user is not assigned to approval"
-    }
-    """
-
-  Scenario: the user with a role, which is not set in approval should receive 403
-    When I am authenticated with username "manageruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-4-id/approval
-    Then the response code should be 403
-    Then the response body should contain:
-    """
-    {
-      "error": "role is not assigned to approval"
-    }
-    """
-
-  Scenario: if no approval return 404
-    When I am authenticated with username "root" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-get-1/approval
-    Then the response code should be 404
-
-  Scenario: should be possible for any user to get waiting for approval created instruction
     When I am authenticated with username "root" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id
-    Then the response code should be 200
-    Then the response body should contain:
+    When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-11-id",
       "type": 0,
-      "status": 1,
-      "alarm_patterns": null,
+      "name": "test-instruction-to-create-with-approval-11-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-11-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-11-description",
+      "author": "test-instruction-to-create-with-approval-11-author",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-11-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-              "time_to_complete": {
-                  "seconds": 1,
-                  "unit": "s"
-              },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "name": "test-instruction-to-create-with-approval-11-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-11-step-1-operation-1-description",
               "jobs": [
-                {
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-11-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-11-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """  
+    When I am authenticated with username "manageruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-11-id/approval
+    Then the response code should be 403
+    Then the response body should contain:
+    """
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+
+  Scenario: the user with a role, which is not set in approval should receive 403
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-12-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-12-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-12-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-12-description",
+      "author": "test-instruction-to-create-with-approval-12-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-12-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-12-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-12-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-12-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "role": "approver",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-12-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver",
+        "requested_by": "root"
+      }
+    }
+    """  
+    When I am authenticated with username "manageruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-12-id/approval
+    Then the response code should be 403
+    Then the response body should contain:
+    """
+    {
+      "error": "role is not assigned to approval"
+    }
+    """
+
+  Scenario: if no approval return 404
+    When I am authenticated with username "root" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-get-1/approval
+    Then the response code should be 404
+
+  Scenario: should be possible for any user to get waiting for approval created instruction
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-13-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-13-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-13-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-13-description",
+      "author": "test-instruction-to-create-with-approval-13-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-13-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-13-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-13-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-13-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-13-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """  
+    When I am authenticated with username "root" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-13-id
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-13-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-13-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-13-name",
+      "description": "test-instruction-to-create-with-approval-13-description",
+      "author": "test-instruction-to-create-with-approval-13-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-13-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-13-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-13-step-1-operation-1-description",
+              "jobs": [
+                {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
                   "author": "test-job-to-instruction-edit-1-author",
@@ -849,7 +1123,7 @@ Feature: instruction approval creation
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-with-approval-13-step-1-endpoint"
         }
       ],
       "approval": {
@@ -860,35 +1134,35 @@ Feature: instruction approval creation
     }
     """
     When I am authenticated with username "manageruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-13-id
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-13-id",
       "type": 0,
       "status": 1,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-13-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "name": "test-instruction-to-create-with-approval-13-name",
+      "description": "test-instruction-to-create-with-approval-13-description",
+      "author": "test-instruction-to-create-with-approval-13-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-13-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-13-step-1-operation-1",
               "time_to_complete": {
                   "seconds": 1,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-13-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -924,46 +1198,388 @@ Feature: instruction approval creation
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-with-approval-13-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-13-id
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-13-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-13-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-13-name",
+      "description": "test-instruction-to-create-with-approval-13-description",
+      "author": "test-instruction-to-create-with-approval-13-author",
+      "enabled": true,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-13-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-13-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-13-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-13-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+
+  Scenario: The users that didn't request the approval can update only name/description/enabled
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-14-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-14-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-14-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-14-description",
+      "author": "test-instruction-to-create-with-approval-14-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-14-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-14-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-14-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-14-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-14-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-14-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-14-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-14-name-changed",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-14-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-14-description-changed",
+      "author": "test-instruction-to-create-with-approval-14-author",
+      "enabled": false,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-14-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-14-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-14-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser"
+      }
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-14-id",
+      "type": 0,
+      "status": 1,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-14-pattern"
+        }
+      ],
+      "name": "test-instruction-to-create-with-approval-14-name-changed",
+      "description": "test-instruction-to-create-with-approval-14-description-changed",
+      "author": "test-instruction-to-create-with-approval-14-author",
+      "enabled": false,
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-14-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-14-step-1-operation-1",
+              "time_to_complete": {
+                  "seconds": 1,
+                  "unit": "s"
+              },
+              "description": "test-instruction-to-create-with-approval-14-step-1-operation-1-description",
+              "jobs": [
+                {
+                  "_id": "test-job-to-instruction-edit-1",
+                  "name": "test-job-to-instruction-edit-1-name",
+                  "author": "test-job-to-instruction-edit-1-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-1-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                },
+                {
+                  "_id": "test-job-to-instruction-edit-2",
+                  "name": "test-job-to-instruction-edit-2-name",
+                  "author": "test-job-to-instruction-edit-2-author",
+                  "config": {
+                    "_id": "test-job-config-to-edit-instruction",
+                    "name": "test-job-config-to-edit-instruction-name",
+                    "type": "rundeck",
+                    "host": "http://example.com",
+                    "author": "test-author",
+                    "auth_token": "test-auth-token"
+                  },
+                  "job_id": "test-job-to-instruction-edit-2-external-id",
+                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+                }
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-14-step-1-endpoint"
+        }
+      ]
+    }
+    """
+
+  Scenario: The user that requested the approval can update any field
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-15-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-15-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-15-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-15-description",
+      "author": "test-instruction-to-create-with-approval-15-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-15-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-15-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-15-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-15-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-15-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """  
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-15-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-15-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-15-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-15-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-15-description",
+      "author": "test-instruction-to-create-with-approval-15-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-15-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-15-step-1-operation-1",
+              "time_to_complete": {"seconds": 5, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-15-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
         }
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
-        "requested_by": "root"
+        "user": "approveruser"
       }
     }
     """
-    When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-15-id",
       "type": 0,
       "status": 1,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-15-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "name": "test-instruction-to-create-with-approval-15-name",
+      "description": "test-instruction-to-create-with-approval-15-description",
+      "author": "test-instruction-to-create-with-approval-15-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-15-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-15-step-1-operation-1",
               "time_to_complete": {
-                  "seconds": 1,
+                  "seconds": 5,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-15-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -998,8 +1614,8 @@ Feature: instruction approval creation
               ]
             }
           ],
-          "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+          "stop_on_fail": false,
+          "endpoint": "new endpoint"
         }
       ],
       "approval": {
@@ -1010,47 +1626,103 @@ Feature: instruction approval creation
     }
     """
 
-  Scenario: The users that didn't request the approval can update only name/description/enabled
+  Scenario: The users that didn't request the approval can't change approver
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-17-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-17-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-17-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-17-description",
+      "author": "test-instruction-to-create-with-approval-17-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-17-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-17-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-17-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-17-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-17-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """
     When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-17-id:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-17-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name-changed",
+      "name": "test-instruction-to-create-with-approval-17-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-17-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description-changed",
-      "author": "test-instruction-to-create-with-approval-1-author",
-      "enabled": false,
+      "description": "test-instruction-to-create-with-approval-17-description",
+      "author": "test-instruction-to-create-with-approval-17-author",
+      "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
         "unit": "m"
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-17-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-              "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "name": "test-instruction-to-create-with-approval-17-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-17-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
               ]
             }
           ],
-          "stop_on_fail": false,
-          "endpoint": "new endpoint"
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-17-step-1-endpoint"
         }
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser"
+        "user": "approveruser2"
       }
     }
     """
@@ -1058,30 +1730,30 @@ Feature: instruction approval creation
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-17-id",
       "type": 0,
       "status": 1,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-17-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name-changed",
-      "description": "test-instruction-to-create-with-approval-1-description-changed",
-      "author": "test-instruction-to-create-with-approval-1-author",
-      "enabled": false,
+      "name": "test-instruction-to-create-with-approval-17-name",
+      "description": "test-instruction-to-create-with-approval-17-description",
+      "author": "test-instruction-to-create-with-approval-17-author",
+      "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-17-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-17-step-1-operation-1",
               "time_to_complete": {
                   "seconds": 1,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-17-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -1117,27 +1789,32 @@ Feature: instruction approval creation
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-create-with-approval-1-step-1-endpoint"
+          "endpoint": "test-instruction-to-create-with-approval-17-step-1-endpoint"
         }
-      ]
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
     }
     """
 
-  Scenario: The user that requested the approval can update any field
+  Scenario: The user that requested the approval can change approver username
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-18-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name",
+      "name": "test-instruction-to-create-with-approval-18-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-18-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-18-description",
+      "author": "test-instruction-to-create-with-approval-18-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1145,117 +1822,55 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-18-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-              "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "name": "test-instruction-to-create-with-approval-18-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-18-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
               ]
             }
           ],
-          "stop_on_fail": false,
-          "endpoint": "new endpoint"
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-18-step-1-endpoint"
         }
       ],
       "approval": {
-        "comment": "test comment",
-        "user": "approveruser"
+        "user": "approveruser",
+        "comment": "test comment"
       }
     }
     """
-    Then the response code should be 200
+    Then the response code should be 201
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
-      "type": 0,
+      "_id": "test-instruction-to-create-with-approval-18-id",
       "status": 1,
-      "alarm_patterns": null,
-      "entity_patterns": [
-        {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
-        }
-      ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
-          "operations": [
-            {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-              "time_to_complete": {
-                  "seconds": 5,
-                  "unit": "s"
-              },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
-              "jobs": [
-                {
-                  "_id": "test-job-to-instruction-edit-1",
-                  "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "author": "test-author",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-1-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                },
-                {
-                  "_id": "test-job-to-instruction-edit-2",
-                  "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "author": "test-author",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-2-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                }
-              ]
-            }
-          ],
-          "stop_on_fail": false,
-          "endpoint": "new endpoint"
-        }
-      ],
       "approval": {
         "comment": "test comment",
         "user": "approveruser",
         "requested_by": "root"
       }
     }
-    """
-
-  Scenario: The users that didn't request the approval can't change approver
-    When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    """  
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-18-id:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-18-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name",
+      "name": "test-instruction-to-create-with-approval-18-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-18-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-18-description",
+      "author": "test-instruction-to-create-with-approval-18-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1263,12 +1878,12 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-18-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-18-step-1-operation-1",
               "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-18-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -1289,30 +1904,30 @@ Feature: instruction approval creation
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-18-id",
       "type": 0,
       "status": 1,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-18-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "name": "test-instruction-to-create-with-approval-18-name",
+      "description": "test-instruction-to-create-with-approval-18-description",
+      "author": "test-instruction-to-create-with-approval-18-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-18-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-18-step-1-operation-1",
               "time_to_complete": {
                   "seconds": 5,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-18-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -1353,27 +1968,83 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": "approveruser2",
         "requested_by": "root"
       }
     }
     """
 
-  Scenario: The user that requested the approval can change approver username
+  Scenario: The user that requested the approval can change approval from username to role
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-19-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name",
+      "name": "test-instruction-to-create-with-approval-19-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-19-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-19-description",
+      "author": "test-instruction-to-create-with-approval-19-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-19-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-19-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-19-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-19-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-19-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser",
+        "requested_by": "root"
+      }
+    }
+    """  
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-19-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-19-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-19-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-19-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-19-description",
+      "author": "test-instruction-to-create-with-approval-19-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1381,12 +2052,12 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-19-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-19-step-1-operation-1",
               "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-19-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -1399,7 +2070,7 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser2"
+        "role": "approver2"
       }
     }
     """
@@ -1407,30 +2078,30 @@ Feature: instruction approval creation
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-19-id",
       "type": 0,
       "status": 1,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-19-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "name": "test-instruction-to-create-with-approval-19-name",
+      "description": "test-instruction-to-create-with-approval-19-description",
+      "author": "test-instruction-to-create-with-approval-19-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-19-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-19-step-1-operation-1",
               "time_to_complete": {
                   "seconds": 5,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-19-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -1471,27 +2142,27 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser2",
+        "role": "approver2",
         "requested_by": "root"
       }
     }
     """
 
-  Scenario: The user that requested the approval can change approval from username to role
+  Scenario: The user that requested the approval can change approval from role to username
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-20-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name",
+      "name": "test-instruction-to-create-with-approval-20-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-20-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-20-description",
+      "author": "test-instruction-to-create-with-approval-20-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1499,20 +2170,20 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-20-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-              "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "name": "test-instruction-to-create-with-approval-20-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-20-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
               ]
             }
           ],
-          "stop_on_fail": false,
-          "endpoint": "new endpoint"
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-20-step-1-endpoint"
         }
       ],
       "approval": {
@@ -1521,95 +2192,33 @@ Feature: instruction approval creation
       }
     }
     """
-    Then the response code should be 200
+    Then the response code should be 201
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
-      "type": 0,
+      "_id": "test-instruction-to-create-with-approval-20-id",
       "status": 1,
-      "alarm_patterns": null,
-      "entity_patterns": [
-        {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
-        }
-      ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
-      "enabled": true,
-      "steps": [
-        {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
-          "operations": [
-            {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-              "time_to_complete": {
-                  "seconds": 5,
-                  "unit": "s"
-              },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
-              "jobs": [
-                {
-                  "_id": "test-job-to-instruction-edit-1",
-                  "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "author": "test-author",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-1-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                },
-                {
-                  "_id": "test-job-to-instruction-edit-2",
-                  "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
-                  "config": {
-                    "_id": "test-job-config-to-edit-instruction",
-                    "name": "test-job-config-to-edit-instruction-name",
-                    "type": "rundeck",
-                    "host": "http://example.com",
-                    "author": "test-author",
-                    "auth_token": "test-auth-token"
-                  },
-                  "job_id": "test-job-to-instruction-edit-2-external-id",
-                  "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
-                }
-              ]
-            }
-          ],
-          "stop_on_fail": false,
-          "endpoint": "new endpoint"
-        }
-      ],
       "approval": {
         "comment": "test comment",
         "role": "approver2",
         "requested_by": "root"
       }
     }
-    """
-
-  Scenario: The user that requested the approval can change approval from role to username
+    """    
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-20-id:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-20-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name",
+      "name": "test-instruction-to-create-with-approval-20-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-20-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-20-description",
+      "author": "test-instruction-to-create-with-approval-20-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1617,12 +2226,12 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-20-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-20-step-1-operation-1",
               "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-20-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -1643,30 +2252,30 @@ Feature: instruction approval creation
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-20-id",
       "type": 0,
       "status": 1,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-20-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "name": "test-instruction-to-create-with-approval-20-name",
+      "description": "test-instruction-to-create-with-approval-20-description",
+      "author": "test-instruction-to-create-with-approval-20-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-20-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-20-step-1-operation-1",
               "time_to_complete": {
                   "seconds": 5,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-20-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -1714,20 +2323,76 @@ Feature: instruction approval creation
     """
     
   Scenario:  The user that didn't request the approval can't cancel approval
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-21-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-21-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-21-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-21-description",
+      "author": "test-instruction-to-create-with-approval-21-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-21-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-21-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-21-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-21-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-21-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2",
+        "requested_by": "root"
+      }
+    }
+    """  
     When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-21-id:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-21-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name",
+      "name": "test-instruction-to-create-with-approval-21-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-21-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-21-description",
+      "author": "test-instruction-to-create-with-approval-21-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1735,52 +2400,56 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-21-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
-              "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "name": "test-instruction-to-create-with-approval-21-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-21-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
               ]
             }
           ],
-          "stop_on_fail": false,
-          "endpoint": "new endpoint"
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-21-step-1-endpoint"
         }
-      ]
+      ],
+      "approval": {
+        "comment": "test comment",
+        "user": "approveruser"
+      }
     }
     """
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-21-id",
       "type": 0,
       "status": 1,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-21-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "name": "test-instruction-to-create-with-approval-21-name",
+      "description": "test-instruction-to-create-with-approval-21-description",
+      "author": "test-instruction-to-create-with-approval-21-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-21-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-21-step-1-operation-1",
               "time_to_complete": {
-                  "seconds": 5,
+                  "seconds": 1,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-21-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -1815,13 +2484,13 @@ Feature: instruction approval creation
               ]
             }
           ],
-          "stop_on_fail": false,
-          "endpoint": "new endpoint"
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-21-step-1-endpoint"
         }
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser2",
+        "role": "approver2",
         "requested_by": "root"
       }
     }
@@ -1829,19 +2498,19 @@ Feature: instruction approval creation
 
   Scenario: The user that request the approval can cancel approval
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-1-id:
+    When I do POST /api/v4/cat/instructions:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-22-id",
       "type": 0,
-      "name": "test-instruction-to-create-with-approval-1-name",
+      "name": "test-instruction-to-create-with-approval-22-name",
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-22-pattern"
         }
       ],
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "description": "test-instruction-to-create-with-approval-22-description",
+      "author": "test-instruction-to-create-with-approval-22-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1849,12 +2518,68 @@ Feature: instruction approval creation
       },
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-22-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-22-step-1-operation-1",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-create-with-approval-22-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1",
+                "test-job-to-instruction-edit-2"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "test-instruction-to-create-with-approval-22-step-1-endpoint"
+        }
+      ],
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-22-id",
+      "status": 1,
+      "approval": {
+        "comment": "test comment",
+        "role": "approver2",
+        "requested_by": "root"
+      }
+    }
+    """   
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-22-id:
+    """
+    {
+      "_id": "test-instruction-to-create-with-approval-22-id",
+      "type": 0,
+      "name": "test-instruction-to-create-with-approval-22-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-22-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-22-description",
+      "author": "test-instruction-to-create-with-approval-22-author",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-create-with-approval-22-step-1",
+          "operations": [
+            {
+              "name": "test-instruction-to-create-with-approval-22-step-1-operation-1",
               "time_to_complete": {"seconds": 5, "unit":"s"},
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-22-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -1871,30 +2596,30 @@ Feature: instruction approval creation
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-create-with-approval-1-id",
+      "_id": "test-instruction-to-create-with-approval-22-id",
       "type": 0,
       "status": 0,
       "alarm_patterns": null,
       "entity_patterns": [
         {
-          "name": "test-instruction-to-create-with-approval-1-pattern"
+          "name": "test-instruction-to-create-with-approval-22-pattern"
         }
       ],
-      "name": "test-instruction-to-create-with-approval-1-name",
-      "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "name": "test-instruction-to-create-with-approval-22-name",
+      "description": "test-instruction-to-create-with-approval-22-description",
+      "author": "test-instruction-to-create-with-approval-22-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-create-with-approval-1-step-1",
+          "name": "test-instruction-to-create-with-approval-22-step-1",
           "operations": [
             {
-              "name": "test-instruction-to-create-with-approval-1-step-1-operation-1",
+              "name": "test-instruction-to-create-with-approval-22-step-1-operation-1",
               "time_to_complete": {
                   "seconds": 5,
                   "unit": "s"
               },
-              "description": "test-instruction-to-create-with-approval-1-step-1-operation-1-description",
+              "description": "test-instruction-to-create-with-approval-22-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
index 0fda624f..4aba81d9 100644
--- a/tests/functional/features/api/cat/instruction_update_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -144,8 +144,6 @@ Feature: instruction approval update
       }
     }
     """
-    
-  Scenario: PUT a valid instruction with approval with role request should return ok
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2:
     """
@@ -288,6 +286,68 @@ Feature: instruction approval update
       }
     }
     """
+    When I am admin
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-update-with-approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-update-with-approval",
+          "status": 1,
+          "approval": {
+            "comment": "test comment",
+            "user": "approveruser",
+            "requested_by": "manageruser"
+          }
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-2",
+          "status": 1,
+          "approval": {
+            "comment": "test comment",
+            "role": "approver2",
+            "requested_by": "manageruser"
+          }
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-3",
+          "status": 0
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-4",
+          "status": 0
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-5",
+          "status": 0
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-6",
+          "status": 0
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-7",
+          "status": 0
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-8",
+          "status": 0
+        },
+        {
+          "_id": "test-instruction-to-update-with-approval-9",
+          "status": 0
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 9
+      }
+    }
+    """
 
   Scenario: PUT a valid instruction with approval request with a not found user should return error
     When I am authenticated with username "manageruser" and password "test"
@@ -335,7 +395,7 @@ Feature: instruction approval update
     """
     {
       "errors": {
-        "approval.user": "User doesn't exist."
+        "approval.user": "User doesn't have approve rights or doesn't exist."
       }
     }
     """
@@ -388,7 +448,7 @@ Feature: instruction approval update
     """
     {
       "errors": {
-        "approval.user": "User doesn't have approve rights."
+        "approval.user": "User doesn't have approve rights or doesn't exist."
       }
     }
     """
@@ -441,7 +501,7 @@ Feature: instruction approval update
     """
     {
       "errors": {
-        "approval.role": "Role doesn't exist."
+        "approval.role": "Role doesn't have approve rights or doesn't exist."
       }
     }
     """
@@ -494,7 +554,7 @@ Feature: instruction approval update
     """
     {
       "errors": {
-        "approval.role": "Role doesn't have approve rights."
+        "approval.role": "Role doesn't have approve rights or doesn't exist."
       }
     }
     """
@@ -548,166 +608,81 @@ Feature: instruction approval update
     """
     {
       "errors": {
-        "approval.role": "Can't be present both Role and User"
+        "approval.role": "Can't be present both Role and User."
       }
     }
     """
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
     Then the response code should be 404
 
-  Scenario: Instruction with updated versions should have original version in the list with status = 1 and attached approval
-    When I am admin
-    When I do GET /api/v4/cat/instructions?search=test-instruction-to-update-with-approval
-    Then the response code should be 200
-    Then the response body should contain:
+  Scenario: Requester should receive updated version on GET request, other users should receive original version on GET request
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-4:
     """
     {
-      "data": [
-        {
-          "_id": "test-instruction-to-update-with-approval",
-          "type": 0,
-          "status": 1,
-          "alarm_patterns": null,
-          "entity_patterns": [
-            {
-              "name": "test filter"
-            }
-          ],
-          "name": "test-instruction-to-update-with-approval-name",
-          "description": "test-instruction-to-update-with-approval-description",
-          "author": "test-instruction-to-update-with-approval-author",
-          "enabled": true,
-          "steps": [
-            {
-              "name": "test-instruction-to-update-with-approval-step-1-name",
-              "operations": [
-                {
-                  "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
-                  "time_to_complete": {
-                    "seconds": 1,
-                    "unit": "s"
-                  },
-                  "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
-                }
-              ],
-              "stop_on_fail": true,
-              "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
-            }
-          ],
-          "approval": {
-            "comment": "test comment",
-            "user": "approveruser",
-            "requested_by": "manageruser"
-          }
-        },
+      "name": "test-instruction-to-update-with-approval-4-name",
+      "entity_patterns": [
         {
-          "_id": "test-instruction-to-update-with-approval-2",
-          "type": 0,
-          "status": 1,
-          "alarm_patterns": null,
-          "entity_patterns": [
-            {
-              "name": "test filter"
-            }
-          ],
-          "name": "test-instruction-to-update-with-approval-2-name",
-          "description": "test-instruction-to-update-with-approval-2-description",
-          "author": "test-instruction-to-update-with-approval-2-author",
-          "enabled": true,
-          "steps": [
-            {
-              "name": "test-instruction-to-update-with-approval-2-step-1-name",
-              "operations": [
-                {
-                  "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
-                  "time_to_complete": {
-                    "seconds": 1,
-                    "unit": "s"
-                  },
-                  "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description"
-                }
-              ],
-              "stop_on_fail": true,
-              "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
-            }
-          ],
-          "approval": {
-            "comment": "test comment",
-            "role": "approver2",
-            "requested_by": "manageruser"
-          }
-        },
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-4-description",
+      "author": "test-instruction-to-update-with-approval-4-author-changed",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
         {
-          "_id": "test-instruction-to-update-with-approval-3",
-          "alarm_patterns": null,
-          "author": "test-instruction-to-update-with-approval-3-author",
-          "description": "test-instruction-to-update-with-approval-3-description",
-          "enabled": true,
-          "entity_patterns": [
-            {
-              "name": "test filter"
-            }
-          ],
-          "last_executed_on": 1596712203,
-          "last_modified": 1596712203,
-          "name": "test-instruction-to-update-with-approval-3-name",
-          "status": 0,
-          "steps": [
+          "name": "test-instruction-to-update-with-approval-4-step-1-name",
+          "operations": [
             {
-              "endpoint": "test-instruction-to-update-with-approval-3-step-1-endpoint",
-              "name": "test-instruction-to-update-with-approval-3-step-1-name",
-              "operations": [
-                {
-                  "description": "test-instruction-to-update-with-approval-3-step-1-operation-1-description",
-                  "name": "test-instruction-to-update-with-approval-3-step-1-operation-1-name",
-                  "time_to_complete": {
-                    "seconds": 1,
-                    "unit": "s"
-                  }
-                }
-              ],
-              "stop_on_fail": true
+              "name": "test-instruction-to-update-with-approval-4-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-4-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
             }
           ],
-          "type": 0
+          "stop_on_fail": true,
+          "endpoint": "new endpoint"
         }
       ],
-      "meta": {
-        "page": 1,
-        "page_count": 1,
-        "per_page": 10,
-        "total_count": 3
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
       }
     }
     """
-
-  Scenario: Requester should receive updated version on GET request
+    Then the response code should be 200
     When I am authenticated with username "manageruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-4
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-update-with-approval",
+      "_id": "test-instruction-to-update-with-approval-4",
       "type": 0,
       "status": 2,
-      "name": "test-instruction-to-update-with-approval-name",
+      "name": "test-instruction-to-update-with-approval-4-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-instruction-to-update-with-approval-author-changed",
+      "description": "test-instruction-to-update-with-approval-4-description",
+      "author": "test-instruction-to-update-with-approval-4-author-changed",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-4-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-4-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-4-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -737,15 +712,13 @@ Feature: instruction approval update
       }
     }
     """
-
-  Scenario: Other users should receive original version on GET request
     When I am authenticated with username "root" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-4
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-update-with-approval",
+      "_id": "test-instruction-to-update-with-approval-4",
       "type": 0,
       "status": 0,
       "alarm_patterns": null,
@@ -754,43 +727,84 @@ Feature: instruction approval update
           "name": "test filter"
         }
       ],
-      "name": "test-instruction-to-update-with-approval-name",
-      "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-instruction-to-update-with-approval-author",
+      "name": "test-instruction-to-update-with-approval-4-name",
+      "description": "test-instruction-to-update-with-approval-4-description",
+      "author": "test-instruction-to-update-with-approval-4-author",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-4-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-4-step-1-operation-1-name",
               "time_to_complete": {
                 "seconds": 1,
                 "unit": "s"
               },
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+              "description": "test-instruction-to-update-with-approval-4-step-1-operation-1-description"
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+          "endpoint": "test-instruction-to-update-with-approval-4-step-1-endpoint"
         }
       ]
     }
     """
 
   Scenario: The users that didn't request the approval can update only name/description/enabled
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-5:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-5-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-5-description",
+      "author": "test-instruction-to-update-with-approval-5-author-changed",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-5-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-5-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-5-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200  
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-5:
     """
     {
-      "name": "test-instruction-to-update-with-approval-name-changed",
+      "name": "test-instruction-to-update-with-approval-5-name-changed",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description-changed",
-      "author": "test-instruction-to-update-with-approval-author",
+      "description": "test-instruction-to-update-with-approval-5-description-changed",
+      "author": "test-instruction-to-update-with-approval-5-author",
       "enabled": false,
       "timeout_after_execution": {
         "seconds": 10,
@@ -798,12 +812,12 @@ Feature: instruction approval update
       },
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-5-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-5-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-5-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -818,7 +832,7 @@ Feature: instruction approval update
     """
     Then the response code should be 200
     When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-5/approval
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -829,7 +843,7 @@ Feature: instruction approval update
         "requested_by": "manageruser"
       },
       "original": {
-        "_id": "test-instruction-to-update-with-approval",
+        "_id": "test-instruction-to-update-with-approval-5",
         "type": 0,
         "status": 0,
         "alarm_patterns": null,
@@ -838,48 +852,48 @@ Feature: instruction approval update
             "name": "test filter"
           }
         ],
-        "name": "test-instruction-to-update-with-approval-name-changed",
-        "description": "test-instruction-to-update-with-approval-description-changed",
-        "author": "test-instruction-to-update-with-approval-author",
+        "name": "test-instruction-to-update-with-approval-5-name-changed",
+        "description": "test-instruction-to-update-with-approval-5-description-changed",
+        "author": "test-instruction-to-update-with-approval-5-author",
         "enabled": false,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-5-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-5-step-1-operation-1-name",
                 "time_to_complete": {
                   "seconds": 1,
                   "unit": "s"
                 },
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+                "description": "test-instruction-to-update-with-approval-5-step-1-operation-1-description"
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+            "endpoint": "test-instruction-to-update-with-approval-5-step-1-endpoint"
           }
         ]
       },
       "updated": {
         "type": 0,
         "status": 2,
-        "name": "test-instruction-to-update-with-approval-name",
+        "name": "test-instruction-to-update-with-approval-5-name",
         "entity_patterns": [
           {
             "name": "test filter"
           }
         ],
-        "description": "test-instruction-to-update-with-approval-description",
-        "author": "test-instruction-to-update-with-approval-author-changed",
+        "description": "test-instruction-to-update-with-approval-5-description",
+        "author": "test-instruction-to-update-with-approval-5-author-changed",
         "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-5-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-5-step-1-operation-1-name",
                 "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "description": "test-instruction-to-update-with-approval-5-step-1-operation-1-description",
                 "jobs": [
                   {
                     "_id": "test-job-to-instruction-edit-1",
@@ -913,17 +927,17 @@ Feature: instruction approval update
 
   Scenario: The requester can update any updated fields
     When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-6:
     """
     {
-      "name": "test-instruction-to-update-with-approval-name",
+      "name": "test-instruction-to-update-with-approval-6-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-instruction-to-update-with-approval-author-changed",
+      "description": "test-instruction-to-update-with-approval-6-description",
+      "author": "test-instruction-to-update-with-approval-6-author-changed",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -931,12 +945,52 @@ Feature: instruction approval update
       },
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-6-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-6-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-6-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-6:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-6-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-6-description",
+      "author": "test-instruction-to-update-with-approval-6-author-changed",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-6-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-6-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-6-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1"
               ]
@@ -954,7 +1008,7 @@ Feature: instruction approval update
     """
     Then the response code should be 200
     When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-6/approval
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -965,7 +1019,7 @@ Feature: instruction approval update
         "requested_by": "manageruser"
       },
       "original": {
-        "_id": "test-instruction-to-update-with-approval",
+        "_id": "test-instruction-to-update-with-approval-6",
         "type": 0,
         "status": 0,
         "alarm_patterns": null,
@@ -974,48 +1028,48 @@ Feature: instruction approval update
             "name": "test filter"
           }
         ],
-        "name": "test-instruction-to-update-with-approval-name-changed",
-        "description": "test-instruction-to-update-with-approval-description-changed",
-        "author": "test-instruction-to-update-with-approval-author",
-        "enabled": false,
+        "name": "test-instruction-to-update-with-approval-6-name",
+        "description": "test-instruction-to-update-with-approval-6-description",
+        "author": "test-instruction-to-update-with-approval-6-author",
+        "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-6-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-6-step-1-operation-1-name",
                 "time_to_complete": {
                   "seconds": 1,
                   "unit": "s"
                 },
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+                "description": "test-instruction-to-update-with-approval-6-step-1-operation-1-description"
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+            "endpoint": "test-instruction-to-update-with-approval-6-step-1-endpoint"
           }
         ]
       },
       "updated": {
         "type": 0,
         "status": 2,
-        "name": "test-instruction-to-update-with-approval-name",
+        "name": "test-instruction-to-update-with-approval-6-name",
         "entity_patterns": [
           {
             "name": "test filter"
           }
         ],
-        "description": "test-instruction-to-update-with-approval-description",
-        "author": "test-instruction-to-update-with-approval-author-changed",
+        "description": "test-instruction-to-update-with-approval-6-description",
+        "author": "test-instruction-to-update-with-approval-6-author-changed",
         "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-6-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-6-step-1-operation-1-name",
                 "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "description": "test-instruction-to-update-with-approval-6-step-1-operation-1-description",
                 "jobs": [
                   {
                     "_id": "test-job-to-instruction-edit-1",
@@ -1049,31 +1103,72 @@ Feature: instruction approval update
     """
 
   Scenario: The users that didn't request the approval couldn't change or remove the approval
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-7:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-7-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-7-description",
+      "author": "test-instruction-to-update-with-approval-7-author-changed",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-7-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200  
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-7:
     """
     {
-      "name": "test-instruction-to-update-with-approval-name-changed",
+      "name": "test-instruction-to-update-with-approval-7-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description-changed",
-      "author": "test-instruction-to-update-with-approval-author",
-      "enabled": false,
+      "description": "test-instruction-to-update-with-approval-7-description",
+      "author": "test-instruction-to-update-with-approval-7-author-changed",
+      "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
         "unit": "m"
       },
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-7-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -1081,7 +1176,7 @@ Feature: instruction approval update
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "should be ignored"
+          "endpoint": "new endpoint"
         }
       ],
       "approval": {
@@ -1093,7 +1188,7 @@ Feature: instruction approval update
     """
     Then the response code should be 200
     When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-7/approval
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1104,7 +1199,7 @@ Feature: instruction approval update
         "requested_by": "manageruser"
       },
       "original": {
-        "_id": "test-instruction-to-update-with-approval",
+        "_id": "test-instruction-to-update-with-approval-7",
         "type": 0,
         "status": 0,
         "alarm_patterns": null,
@@ -1113,48 +1208,48 @@ Feature: instruction approval update
             "name": "test filter"
           }
         ],
-        "name": "test-instruction-to-update-with-approval-name-changed",
-        "description": "test-instruction-to-update-with-approval-description-changed",
-        "author": "test-instruction-to-update-with-approval-author",
-        "enabled": false,
+        "name": "test-instruction-to-update-with-approval-7-name",
+        "description": "test-instruction-to-update-with-approval-7-description",
+        "author": "test-instruction-to-update-with-approval-7-author",
+        "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-7-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
                 "time_to_complete": {
                   "seconds": 1,
                   "unit": "s"
                 },
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+                "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description"
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+            "endpoint": "test-instruction-to-update-with-approval-7-step-1-endpoint"
           }
         ]
       },
       "updated": {
         "type": 0,
         "status": 2,
-        "name": "test-instruction-to-update-with-approval-name",
+        "name": "test-instruction-to-update-with-approval-7-name",
         "entity_patterns": [
           {
             "name": "test filter"
           }
         ],
-        "description": "test-instruction-to-update-with-approval-description",
-        "author": "test-instruction-to-update-with-approval-author-changed",
+        "description": "test-instruction-to-update-with-approval-7-description",
+        "author": "test-instruction-to-update-with-approval-7-author-changed",
         "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-7-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
                 "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description",
                 "jobs": [
                   {
                     "_id": "test-job-to-instruction-edit-1",
@@ -1175,7 +1270,7 @@ Feature: instruction approval update
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "shouldn't be ignored in updated"
+            "endpoint": "new endpoint"
           }
         ],
         "approval": {
@@ -1187,44 +1282,44 @@ Feature: instruction approval update
     }
     """
     When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-7:
     """
     {
-      "name": "test-instruction-to-update-with-approval-name-changed",
+      "name": "test-instruction-to-update-with-approval-7-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description-changed",
-      "author": "test-instruction-to-update-with-approval-author",
-      "enabled": false,
+      "description": "test-instruction-to-update-with-approval-7-description",
+      "author": "test-instruction-to-update-with-approval-7-author",
+      "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
         "unit": "m"
       },
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-7-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1"
               ]
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "should be ignored"
+          "endpoint": "new endpoint"
         }
       ]
     }
     """
     Then the response code should be 200
     When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-7/approval
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1235,7 +1330,7 @@ Feature: instruction approval update
         "requested_by": "manageruser"
       },
       "original": {
-        "_id": "test-instruction-to-update-with-approval",
+        "_id": "test-instruction-to-update-with-approval-7",
         "type": 0,
         "status": 0,
         "alarm_patterns": null,
@@ -1244,48 +1339,48 @@ Feature: instruction approval update
             "name": "test filter"
           }
         ],
-        "name": "test-instruction-to-update-with-approval-name-changed",
-        "description": "test-instruction-to-update-with-approval-description-changed",
-        "author": "test-instruction-to-update-with-approval-author",
-        "enabled": false,
+        "name": "test-instruction-to-update-with-approval-7-name",
+        "description": "test-instruction-to-update-with-approval-7-description",
+        "author": "test-instruction-to-update-with-approval-7-author",
+        "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-7-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
                 "time_to_complete": {
                   "seconds": 1,
                   "unit": "s"
                 },
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+                "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description"
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+            "endpoint": "test-instruction-to-update-with-approval-7-step-1-endpoint"
           }
         ]
       },
       "updated": {
         "type": 0,
         "status": 2,
-        "name": "test-instruction-to-update-with-approval-name",
+        "name": "test-instruction-to-update-with-approval-7-name",
         "entity_patterns": [
           {
             "name": "test filter"
           }
         ],
-        "description": "test-instruction-to-update-with-approval-description",
-        "author": "test-instruction-to-update-with-approval-author-changed",
+        "description": "test-instruction-to-update-with-approval-7-description",
+        "author": "test-instruction-to-update-with-approval-7-author-changed",
         "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-7-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-7-step-1-operation-1-name",
                 "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "description": "test-instruction-to-update-with-approval-7-step-1-operation-1-description",
                 "jobs": [
                   {
                     "_id": "test-job-to-instruction-edit-1",
@@ -1306,7 +1401,7 @@ Feature: instruction approval update
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "shouldn't be ignored in updated"
+            "endpoint": "new endpoint"
           }
         ],
         "approval": {
@@ -1320,17 +1415,17 @@ Feature: instruction approval update
 
   Scenario: The requester can update or remove the approval, after removal instruction should be updated
     When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-8:
     """
     {
-      "name": "test-instruction-to-update-with-approval-name",
+      "name": "test-instruction-to-update-with-approval-8-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-instruction-to-update-with-approval-author-changed",
+      "description": "test-instruction-to-update-with-approval-8-description",
+      "author": "test-instruction-to-update-with-approval-8-author-changed",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1338,12 +1433,53 @@ Feature: instruction approval update
       },
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-8-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-8-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-8-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
+            }
+          ],
+          "stop_on_fail": true,
+          "endpoint": "new endpoint"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200  
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-8:
+    """
+    {
+      "name": "test-instruction-to-update-with-approval-8-name",
+      "entity_patterns": [
+        {
+          "name": "test filter"
+        }
+      ],
+      "description": "test-instruction-to-update-with-approval-8-description",
+      "author": "test-instruction-to-update-with-approval-8-author-changed",
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "steps": [
+        {
+          "name": "test-instruction-to-update-with-approval-8-step-1-name",
+          "operations": [
+            {
+              "name": "test-instruction-to-update-with-approval-8-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-8-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -1351,7 +1487,7 @@ Feature: instruction approval update
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "shouldn't be ignored in updated"
+          "endpoint": "new endpoint"
         }
       ],
       "approval": {
@@ -1362,10 +1498,10 @@ Feature: instruction approval update
     """
     Then the response code should be 200
     When I am authenticated with username "approveruser" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-8/approval
     Then the response code should be 403
     When I am authenticated with username "approveruser2" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-8/approval
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -1376,7 +1512,7 @@ Feature: instruction approval update
         "requested_by": "manageruser"
       },
       "original": {
-        "_id": "test-instruction-to-update-with-approval",
+        "_id": "test-instruction-to-update-with-approval-8",
         "type": 0,
         "status": 0,
         "alarm_patterns": null,
@@ -1385,48 +1521,48 @@ Feature: instruction approval update
             "name": "test filter"
           }
         ],
-        "name": "test-instruction-to-update-with-approval-name-changed",
-        "description": "test-instruction-to-update-with-approval-description-changed",
-        "author": "test-instruction-to-update-with-approval-author",
-        "enabled": false,
+        "name": "test-instruction-to-update-with-approval-8-name",
+        "description": "test-instruction-to-update-with-approval-8-description",
+        "author": "test-instruction-to-update-with-approval-8-author",
+        "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-8-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-8-step-1-operation-1-name",
                 "time_to_complete": {
                   "seconds": 1,
                   "unit": "s"
                 },
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description"
+                "description": "test-instruction-to-update-with-approval-8-step-1-operation-1-description"
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "test-instruction-to-update-with-approval-step-1-endpoint"
+            "endpoint": "test-instruction-to-update-with-approval-8-step-1-endpoint"
           }
         ]
       },
       "updated": {
         "type": 0,
         "status": 2,
-        "name": "test-instruction-to-update-with-approval-name",
+        "name": "test-instruction-to-update-with-approval-8-name",
         "entity_patterns": [
           {
             "name": "test filter"
           }
         ],
-        "description": "test-instruction-to-update-with-approval-description",
-        "author": "test-instruction-to-update-with-approval-author-changed",
+        "description": "test-instruction-to-update-with-approval-8-description",
+        "author": "test-instruction-to-update-with-approval-8-author-changed",
         "enabled": true,
         "steps": [
           {
-            "name": "test-instruction-to-update-with-approval-step-1-name",
+            "name": "test-instruction-to-update-with-approval-8-step-1-name",
             "operations": [
               {
-                "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+                "name": "test-instruction-to-update-with-approval-8-step-1-operation-1-name",
                 "time_to_complete": {"seconds": 1, "unit":"s"},
-                "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+                "description": "test-instruction-to-update-with-approval-8-step-1-operation-1-description",
                 "jobs": [
                   {
                     "_id": "test-job-to-instruction-edit-1",
@@ -1462,7 +1598,7 @@ Feature: instruction approval update
               }
             ],
             "stop_on_fail": true,
-            "endpoint": "shouldn't be ignored in updated"
+            "endpoint": "new endpoint"
           }
         ],
         "approval": {
@@ -1474,17 +1610,17 @@ Feature: instruction approval update
     }
     """
     When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-8:
     """
     {
-      "name": "test-instruction-to-update-with-approval-name",
+      "name": "test-instruction-to-update-with-approval-8-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-instruction-to-update-with-approval-author-changed",
+      "description": "test-instruction-to-update-with-approval-8-description",
+      "author": "test-instruction-to-update-with-approval-8-author-changed",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1492,12 +1628,12 @@ Feature: instruction approval update
       },
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-8-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-8-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-8-step-1-operation-1-description",
               "jobs": [
                 "test-job-to-instruction-edit-1",
                 "test-job-to-instruction-edit-2"
@@ -1505,40 +1641,40 @@ Feature: instruction approval update
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "shouldn't be ignored in updated"
+          "endpoint": "new endpoint"
         }
       ]
     }
     """
     Then the response code should be 200
     When I am authenticated with username "approveruser2" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-8/approval
     Then the response code should be 404
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-8
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "_id": "test-instruction-to-update-with-approval",
+      "_id": "test-instruction-to-update-with-approval-8",
       "type": 0,
       "status": 0,
-      "name": "test-instruction-to-update-with-approval-name",
+      "name": "test-instruction-to-update-with-approval-8-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-instruction-to-update-with-approval-author-changed",
+      "description": "test-instruction-to-update-with-approval-8-description",
+      "author": "test-instruction-to-update-with-approval-8-author-changed",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-step-1-name",
+          "name": "test-instruction-to-update-with-approval-8-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-8-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-8-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
@@ -1574,52 +1710,56 @@ Feature: instruction approval update
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "shouldn't be ignored in updated"
+          "endpoint": "new endpoint"
         }
       ]
     }
     """
 
   Scenario: Only the user from approval should be able to approve
-    When I am authenticated with username "root" and password "test"
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2
-    Then the response code should be 200
-    Then the response body should contain:
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9:
     """
     {
-      "_id": "test-instruction-to-update-with-approval-2",
-      "type": 0,
-      "status": 0,
-      "alarm_patterns": null,
+      "name": "test-instruction-to-update-with-approval-9-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "name": "test-instruction-to-update-with-approval-2-name",
-      "description": "test-instruction-to-update-with-approval-2-description",
-      "author": "test-instruction-to-update-with-approval-2-author",
+      "description": "test-instruction-to-update-with-approval-9-description",
+      "author": "test-instruction-to-update-with-approval-9-author-changed",
       "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-2-step-1-name",
+          "name": "test-instruction-to-update-with-approval-9-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
-              "time_to_complete": {
-                "seconds": 1,
-                "unit": "s"
-              },
-              "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description"
+              "name": "test-instruction-to-update-with-approval-9-step-1-operation-1-name",
+              "time_to_complete": {"seconds": 1, "unit":"s"},
+              "description": "test-instruction-to-update-with-approval-9-step-1-operation-1-description",
+              "jobs": [
+                "test-job-to-instruction-edit-1"
+              ]
             }
           ],
           "stop_on_fail": true,
-          "endpoint": "test-instruction-to-update-with-approval-2-step-1-endpoint"
+          "endpoint": "new endpoint 2"
         }
-      ]
+      ],
+      "approval": {
+        "role": "approver2",
+        "comment": "test comment"
+      }
     }
     """
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval:
+    Then the response code should be 200  
+    When I am authenticated with username "root" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9/approval:
     """
     {
       "approve": true
@@ -1633,7 +1773,7 @@ Feature: instruction approval update
     }
     """
     When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9/approval:
     """
     {
       "approve": true
@@ -1647,39 +1787,39 @@ Feature: instruction approval update
     }
     """
     When I am authenticated with username "approveruser2" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9/approval:
     """
     {
       "approve": true
     }
     """
     Then the response code should be 200
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-9/approval
     Then the response code should be 404
-    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2
+    When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-9
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "type": 0,
       "status": 0,
-      "name": "test-instruction-to-update-with-approval-2-name",
+      "name": "test-instruction-to-update-with-approval-9-name",
       "entity_patterns": [
         {
           "name": "test filter"
         }
       ],
-      "description": "test-instruction-to-update-with-approval-2-description",
-      "author": "test-instruction-to-update-with-approval-2-author-changed",
+      "description": "test-instruction-to-update-with-approval-9-description",
+      "author": "test-instruction-to-update-with-approval-9-author-changed",
       "enabled": true,
       "steps": [
         {
-          "name": "test-instruction-to-update-with-approval-2-step-1-name",
+          "name": "test-instruction-to-update-with-approval-9-step-1-name",
           "operations": [
             {
-              "name": "test-instruction-to-update-with-approval-2-step-1-operation-1-name",
+              "name": "test-instruction-to-update-with-approval-9-step-1-operation-1-name",
               "time_to_complete": {"seconds": 1, "unit":"s"},
-              "description": "test-instruction-to-update-with-approval-2-step-1-operation-1-description",
+              "description": "test-instruction-to-update-with-approval-9-step-1-operation-1-description",
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-- 
2.25.1


From ed78ec14660ad29ec18fa7e54b6b129d1b07a11f Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Thu, 29 Apr 2021 20:00:59 +0700
Subject: [PATCH 35/66] return approver as object + some fixes

---
 lib/api/role/models.go                        |   3 +-
 lib/api/role/store.go                         |   3 +
 lib/api/user/api.go                           |   1 +
 lib/api/user/models.go                        |   3 +-
 lib/api/user/store.go                         |   5 +
 .../instruction_create_with_approval.feature  | 160 ++++++++++++++----
 .../instruction_update_with_approval.feature  |  98 ++++++++---
 .../features/api/core/role_get.feature        |  54 ++++++
 .../features/api/core/user_get.feature        |  57 +++++++
 9 files changed, 329 insertions(+), 55 deletions(-)

diff --git a/lib/api/role/models.go b/lib/api/role/models.go
index 63416550..a338082e 100644
--- a/lib/api/role/models.go
+++ b/lib/api/role/models.go
@@ -6,7 +6,8 @@ import (
 
 type ListRequest struct {
 	pagination.FilteredQuery
-	SortBy string `form:"sort_by" binding:"oneoforempty=name"`
+	SortBy     string `form:"sort_by" binding:"oneoforempty=name"`
+	Permission string `form:"permission"`
 }
 
 type CreateRequest struct {
diff --git a/lib/api/role/store.go b/lib/api/role/store.go
index 68a4975a..a5dfd676 100644
--- a/lib/api/role/store.go
+++ b/lib/api/role/store.go
@@ -61,6 +61,9 @@ func (s *store) Find(r ListRequest) (*AggregationResult, error) {
 		{"$match": filter},
 	}
 	pipeline = append(pipeline, getNestedObjectsPipeline()...)
+	if r.Permission != "" {
+		pipeline = append(pipeline, bson.M{"$match": bson.M{fmt.Sprintf("permissions._id"): r.Permission}})
+	}
 	cursor, err := s.dbCollection.Aggregate(ctx, pagination.CreateAggregationPipeline(
 		r.Query,
 		pipeline,
diff --git a/lib/api/user/api.go b/lib/api/user/api.go
index 70eb1288..82957df9 100644
--- a/lib/api/user/api.go
+++ b/lib/api/user/api.go
@@ -36,6 +36,7 @@ func NewApi(
 // @Param limit query integer true "items per page"
 // @Param search query string false "search query"
 // @Param sort query string false "sort query"
+// @param permission query string false "role permission"
 // @Param sort_by query string false "sort query"
 // @Success 200 {object} common.PaginatedListResponse{data=[]User}
 // @Failure 400 {object} common.ValidationErrorResponse
diff --git a/lib/api/user/models.go b/lib/api/user/models.go
index efda9c86..8b53597f 100644
--- a/lib/api/user/models.go
+++ b/lib/api/user/models.go
@@ -6,7 +6,8 @@ import (
 
 type ListRequest struct {
 	pagination.FilteredQuery
-	SortBy string `form:"sort_by" binding:"oneoforempty=_id name role enable"`
+	SortBy     string `form:"sort_by" binding:"oneoforempty=_id name role enable"`
+	Permission string `form:"permission"`
 }
 
 type EditRequest struct {
diff --git a/lib/api/user/store.go b/lib/api/user/store.go
index 716b835f..d73ec99a 100644
--- a/lib/api/user/store.go
+++ b/lib/api/user/store.go
@@ -64,6 +64,10 @@ func (s *store) Find(r ListRequest) (*AggregationResult, error) {
 		{"$match": filter},
 	}
 	pipeline = append(pipeline, getNestedObjectsPipeline()...)
+	if r.Permission != "" {
+		pipeline = append(pipeline, bson.M{"$match": bson.M{fmt.Sprintf("role.rights.%s", r.Permission): bson.M{"$exists": true}}})
+	}
+
 	cursor, err := s.dbCollection.Aggregate(ctx, pagination.CreateAggregationPipeline(
 		r.Query,
 		pipeline,
@@ -209,6 +213,7 @@ func getNestedObjectsPipeline() []bson.M {
 			"role": bson.M{
 				"_id":  "$role._id",
 				"name": "$role.crecord_name",
+				"rights": "$role.rights",
 			},
 		}},
 		{"$lookup": bson.M{
diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
index e0bc6057..2edbf209 100644
--- a/tests/functional/features/api/cat/instruction_create_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -53,7 +53,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -108,7 +111,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver",
+        "role": {
+          "_id": "approver",
+          "name": "approver"
+        },
         "requested_by": "root"
       }
     }
@@ -184,7 +190,10 @@ Feature: instruction approval creation
           ],
           "approval": {
             "comment": "test comment",
-            "user": "approveruser",
+            "user": {
+              "_id": "approveruser",
+              "name": "approveruser"
+            },
             "requested_by": "root"
           }
         },
@@ -253,7 +262,10 @@ Feature: instruction approval creation
           ],
           "approval": {
             "comment": "test comment",
-            "role": "approver",
+            "role": {
+              "_id": "approver",
+              "name": "approver"
+            },
             "requested_by": "root"
           }
         }
@@ -644,7 +656,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -721,7 +736,10 @@ Feature: instruction approval creation
       },
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -779,7 +797,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver",
+        "role": {
+          "_id": "approver",
+          "name": "approver"
+        },
         "requested_by": "root"
       }
     }
@@ -856,7 +877,10 @@ Feature: instruction approval creation
       },
       "approval": {
         "comment": "test comment",
-        "role": "approver",
+        "role": {
+          "_id": "approver",
+          "name": "approver"
+        },
         "requested_by": "root"
       }
     }
@@ -914,7 +938,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -981,7 +1008,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver",
+        "role": {
+          "_id": "approver",
+          "name": "approver"
+        },
         "requested_by": "root"
       }
     }
@@ -1053,7 +1083,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1128,7 +1161,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1203,7 +1239,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1278,7 +1317,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1336,7 +1378,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1505,7 +1550,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1620,7 +1668,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1678,7 +1729,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1794,7 +1848,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1852,7 +1909,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -1968,7 +2028,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser2",
+        "user": {
+          "_id": "approveruser2",
+          "name": "approveruser2"
+        },
         "requested_by": "root"
       }
     }
@@ -2026,7 +2089,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -2142,7 +2208,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "root"
       }
     }
@@ -2200,7 +2269,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "root"
       }
     }
@@ -2316,7 +2388,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser2",
+        "user": {
+          "_id": "approveruser2",
+          "name": "approveruser2"
+        },
         "requested_by": "root"
       }
     }
@@ -2374,7 +2449,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "root"
       }
     }
@@ -2490,7 +2568,10 @@ Feature: instruction approval creation
       ],
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "root"
       }
     }
@@ -2548,7 +2629,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "root"
       }
     }
@@ -2713,7 +2797,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -2875,7 +2962,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "root"
       }
     }
@@ -3037,7 +3127,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "root"
       }
     }
@@ -3132,7 +3225,10 @@ Feature: instruction approval creation
       "status": 1,
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "root"
       }
     }
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
index 4aba81d9..858f64ee 100644
--- a/tests/functional/features/api/cat/instruction_update_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -59,7 +59,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -138,7 +141,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "user": "approveruser",
+          "user": {
+            "_id": "approveruser",
+            "name": "approveruser"
+          },
           "requested_by": "manageruser"
         }
       }
@@ -201,7 +207,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -280,7 +289,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "role": "approver2",
+          "role": {
+            "_id": "approver2",
+            "name": "approver2"
+          },
           "requested_by": "manageruser"
         }
       }
@@ -298,7 +310,10 @@ Feature: instruction approval update
           "status": 1,
           "approval": {
             "comment": "test comment",
-            "user": "approveruser",
+            "user": {
+              "_id": "approveruser",
+              "name": "approveruser"
+            },
             "requested_by": "manageruser"
           }
         },
@@ -307,7 +322,10 @@ Feature: instruction approval update
           "status": 1,
           "approval": {
             "comment": "test comment",
-            "role": "approver2",
+            "role": {
+              "_id": "approver2",
+              "name": "approver2"
+            },
             "requested_by": "manageruser"
           }
         },
@@ -707,7 +725,10 @@ Feature: instruction approval update
       ],
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "manageruser"
       }
     }
@@ -839,7 +860,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -918,7 +942,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "user": "approveruser",
+          "user": {
+            "_id": "approveruser",
+            "name": "approveruser"
+          },
           "requested_by": "manageruser"
         }
       }
@@ -1015,7 +1042,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -1095,7 +1125,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "user": "approveruser",
+          "user": {
+            "_id": "approveruser",
+            "name": "approveruser"
+          },
           "requested_by": "manageruser"
         }
       }
@@ -1181,8 +1214,7 @@ Feature: instruction approval update
       ],
       "approval": {
         "comment": "test comment",
-        "role": "approver",
-        "requested_by": "manageruser"
+        "role": "approver"
       }
     }
     """
@@ -1195,7 +1227,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -1275,7 +1310,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "user": "approveruser",
+          "user": {
+            "_id": "approveruser",
+            "name": "approveruser"
+          },
           "requested_by": "manageruser"
         }
       }
@@ -1326,7 +1364,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "user": "approveruser",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -1406,7 +1447,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "user": "approveruser",
+          "user": {
+            "_id": "approveruser",
+            "name": "approveruser"
+          },
           "requested_by": "manageruser"
         }
       }
@@ -1508,7 +1552,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "role": "approver2",
+        "role": {
+          "_id": "approver2",
+          "name": "approver2"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -1603,7 +1650,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "role": "approver2",
+          "role": {
+            "_id": "approver2",
+            "name": "approver2"
+          },
           "requested_by": "manageruser"
         }
       }
@@ -1895,7 +1945,10 @@ Feature: instruction approval update
     {
       "approval": {
         "comment": "test comment",
-        "user": "approveruser2",
+        "user": {
+          "_id": "approveruser2",
+          "name": "approveruser2"
+        },
         "requested_by": "manageruser"
       },
       "original": {
@@ -1974,7 +2027,10 @@ Feature: instruction approval update
         ],
         "approval": {
           "comment": "test comment",
-          "user": "approveruser2",
+          "user": {
+            "_id": "approveruser2",
+            "name": "approveruser2"
+          },
           "requested_by": "manageruser"
         }
       }
diff --git a/tests/functional/features/api/core/role_get.feature b/tests/functional/features/api/core/role_get.feature
index 6b95674d..f632601a 100644
--- a/tests/functional/features/api/core/role_get.feature
+++ b/tests/functional/features/api/core/role_get.feature
@@ -90,6 +90,60 @@ Feature: Get a role
     }
     """
 
+  Scenario: given search request should return roles with permission
+    When I am admin
+    When I do GET /api/v4/roles?permission=api_instruction_approve
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "admin"
+        },
+        {
+          "_id": "approver"
+        },
+        {
+          "_id": "approver2"
+        },
+        {
+          "_id": "manager"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 4
+      }
+    }
+    """
+
+  Scenario: given search request should return roles with permission
+    When I am admin
+    When I do GET /api/v4/roles?permission=api_instruction_approve&search=ap
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "approver"
+        },
+        {
+          "_id": "approver2"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
   Scenario: given get request should return role
     When I am admin
     When I do GET /api/v4/roles/test-role-to-get-1
diff --git a/tests/functional/features/api/core/user_get.feature b/tests/functional/features/api/core/user_get.feature
index c7714470..87cc225e 100644
--- a/tests/functional/features/api/core/user_get.feature
+++ b/tests/functional/features/api/core/user_get.feature
@@ -66,6 +66,63 @@ Feature: Get a user
     }
     """
 
+  Scenario: given search request should return users with permission
+    When I am admin
+    When I do GET /api/v4/users?permission=api_instruction_approve
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "approveruser"
+        },
+        {
+          "_id": "approveruser2"
+        },
+        {
+          "_id": "manageruser"
+        },
+        {
+          "_id": "root"
+        },
+        {
+          "_id": "test-user-to-test-paused-executions"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 5
+      }
+    }
+    """
+
+  Scenario: given search request should return users with permission and search query
+    When I am admin
+    When I do GET /api/v4/users?permission=api_instruction_approve&search=approveruser
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "approveruser"
+        },
+        {
+          "_id": "approveruser2"
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
   Scenario: given get request should return user
     When I am admin
     When I do GET /api/v4/users/test-user-to-get-1
-- 
2.25.1


From fcae360bbe2bcfadca2587b590a6d39bb8f8568b Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 27 Apr 2021 13:06:19 +0700
Subject: [PATCH 36/66] Feature #3045 : Add instruction execution statistics

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction.json                     | 162 ++++++++++++++++++
 fixtures/instruction_execution.json           |  12 ++
 fixtures/periodical_alarm.json                |  76 ++++++++
 .../cat/instructionstats_executions.feature   |  73 ++++++++
 .../instructionexecution_stats.feature        | 121 ++++++++++++-
 5 files changed, 442 insertions(+), 2 deletions(-)
 create mode 100644 tests/functional/features/api/cat/instructionstats_executions.feature

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index d0b73457..44bba203 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -2791,5 +2791,167 @@
       1596712203
     ],
     "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-1",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-1-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-1-description",
+    "author": "test-instruction-to-stats-executions-get-1-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-1-step-1",
+        "name": "test-instruction-to-stats-executions-get-1-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-1-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-1-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-1-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-1-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-1-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-1-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-1-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-1-step-2",
+        "name": "test-instruction-to-stats-executions-get-1-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-1-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-1-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-1-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-1-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-1-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-1-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-1-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "mod_history": [
+      1596712203
+    ],
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-2",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-2-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-2-description",
+    "author": "test-instruction-to-stats-executions-get-2-author",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-2-step-1",
+        "name": "test-instruction-to-stats-executions-get-2-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-2-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-2-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-2-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-2-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-2-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-2-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-2-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-2-step-2",
+        "name": "test-instruction-to-stats-executions-get-2-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-2-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-2-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-2-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-2-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-2-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-2-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-2-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "mod_history": [
+      1596712203
+    ],
+    "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 7623da84..a9e64190 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -435,5 +435,17 @@
     "instruction": "test-instruction-to-check-rate-notify",
     "status": 2,
     "completed_at": 2000000000
+  },
+  {
+    "_id": "test-auto-instruction-execution-to-stats-executions-get-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-1",
+    "alarm": "test-alarm-to-stats-executions-get-1",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 3
   }
 ]
\ No newline at end of file
diff --git a/fixtures/periodical_alarm.json b/fixtures/periodical_alarm.json
index 34fa4520..19d3b1ec 100644
--- a/fixtures/periodical_alarm.json
+++ b/fixtures/periodical_alarm.json
@@ -3941,5 +3941,81 @@
       "infos_rule_version": {
       }
     }
+  },
+  {
+    "_id": "test-alarm-to-stats-executions-get-1",
+    "d": "test-resource-to-stats-executions-get-1/test-component-to-stats-executions-get-1",
+    "t": 1596942720,
+    "v": {
+      "state": {
+        "_t": "stateinc",
+        "t": 1596942720,
+        "a": "",
+        "m": "",
+        "val": 3
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1596942720,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1596942720,
+          "a": "",
+          "m": "",
+          "val": 3
+        },
+        {
+          "_t": "statusinc",
+          "t": 1596942720,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1596942720,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1596942720,
+          "a": "",
+          "m": "",
+          "val": 1
+        }
+      ],
+      "component": "test-component-to-stats-executions-get-1",
+      "connector": "test-connector-to-stats-executions-get-1",
+      "connector_name": "test-connector-name-to-stats-executions-get-1",
+      "creation_date": 1596942720,
+      "display_name": "RC-KC_tW",
+      "initial_output": "",
+      "output": "",
+      "initial_long_output": "",
+      "long_output": "",
+      "long_output_history": [
+        ""
+      ],
+      "last_update_date": 1596942720,
+      "last_event_date": 1596942720,
+      "resource": "test-resource-to-stats-executions-get-1",
+      "tags": [],
+      "parents": [],
+      "children": [],
+      "total_state_changes": 1,
+      "extra": {
+      },
+      "infos": {
+      },
+      "infos_rule_version": {
+      }
+    }
   }
 ]
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_executions.feature b/tests/functional/features/api/cat/instructionstats_executions.feature
new file mode 100644
index 00000000..0a0dd828
--- /dev/null
+++ b/tests/functional/features/api/cat/instructionstats_executions.feature
@@ -0,0 +1,73 @@
+Feature: get instruction statistics
+  I need to be able to get instruction statistics
+  Only admin should be able to get instruction statistics
+
+  Scenario: given get request should return instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "executed_on": 1618280210,
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-1"
+          }
+        },
+        {
+          "executed_on": 1596712203,
+          "alarm": null
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: given get request should return empty instruction stats
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-2/executions
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "executed_on": 1596712203,
+          "alarm": null
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+
+  Scenario: given get request and no auth user should not allow access
+    When I do GET /api/v4/cat/instruction-stats/notexist/executions
+    Then the response code should be 401
+
+  Scenario: given get request and auth user by api key without permissions should not allow access
+    When I am noperms
+    When I do GET /api/v4/cat/instruction-stats/notexist/executions
+    Then the response code should be 403
+
+  Scenario: given get request with not exist id should return not found error
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/notexist/executions
+    Then the response code should be 404
+    Then the response body should be:
+    """
+    {
+      "error": "Not found"
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
index 4a119a68..7a42b68a 100644
--- a/tests/functional/features/engines/remediation/instructionexecution_stats.feature
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -150,6 +150,59 @@ Feature: update an instruction statistics
     }
     """
     Then the response key "data.0.avg_complete_time" should not be "0"
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "executed_on": {{ .executionTime }},
+          "alarm": {
+            "_id": "{{ .alarmID }}",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "val": 1
+                },
+                {
+                  "_t": "statusinc",
+                  "val": 1
+                },
+                {
+                  "_t": "instructionstart",
+                  "m": "Instruction test-instruction-to-stats-update-1-name."
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "m": "Instruction test-instruction-to-stats-update-1-name."
+                },
+                {
+                  "_t": "statedec",
+                  "val": 0
+                },
+                {
+                  "_t": "statusdec",
+                  "val": 0
+                }
+              ]
+            }
+          }
+        },
+        {
+          "executed_on": {{ .creationTime }},
+          "alarm": null
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-stats-update-1-name&with_month_executions=true
     Then the response code should be 200
     Then the response body should contain:
@@ -210,7 +263,10 @@ Feature: update an instruction statistics
     }
     """
     When I wait the end of event processing
-    When I wait 2s
+    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-2
+    Then the response code should be 200
+    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I wait 6s
     When I send an event:
     """
     {
@@ -225,7 +281,7 @@ Feature: update an instruction statistics
     }
     """
     When I wait the end of event processing
-    When I wait 7s
+    When I wait 3s
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/summary
     Then the response code should be 200
     Then the response body should contain:
@@ -289,6 +345,67 @@ Feature: update an instruction statistics
     }
     """
     Then the response key "data.0.avg_complete_time" should not be "0"
+    When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "{{ .alarmID }}",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "val": 1
+                },
+                {
+                  "_t": "statusinc",
+                  "val": 1
+                },
+                {
+                  "_t": "autoinstructionstart",
+                  "m": "Instruction test-instruction-to-stats-update-2-name."
+                },
+                {
+                  "_t": "instructionjobstart",
+                  "m": "Instruction test-instruction-to-stats-update-2-name. Job test-job-to-run-auto-instruction-5-name."
+                },
+                {
+                  "_t": "instructionjobcomplete",
+                  "m": "Instruction test-instruction-to-stats-update-2-name. Job test-job-to-run-auto-instruction-5-name."
+                },
+                {
+                  "_t": "autoinstructioncomplete",
+                  "m": "Instruction test-instruction-to-stats-update-2-name."
+                },
+                {
+                  "_t": "statedec",
+                  "val": 0
+                },
+                {
+                  "_t": "statusdec",
+                  "val": 0
+                }
+              ]
+            }
+          }
+        },
+        {
+          "executed_on": {{ .creationTime }},
+          "alarm": null
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+    Then the response key "data.0.executed_on" should not be "0"
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-stats-update-2-name&with_month_executions=true
     Then the response code should be 200
     Then the response body should contain:
-- 
2.25.1


From d74ae550f59904effd0488f293d0900f7f3349ba Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 30 Apr 2021 10:35:18 +0700
Subject: [PATCH 37/66] Feature #3045 : Add instruction execution mongo index

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 config/mongo/000-default.yml | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/config/mongo/000-default.yml b/config/mongo/000-default.yml
index 38b03ebd..cd15b6ab 100644
--- a/config/mongo/000-default.yml
+++ b/config/mongo/000-default.yml
@@ -104,3 +104,11 @@ indexes:
         relative_filepath: 1
       options:
         background: true
+
+  instruction_execution:
+    instruction_1_status_1:
+      keys:
+        instruction: 1
+        status: 1
+      options:
+        background: true
\ No newline at end of file
-- 
2.25.1


From 1888f493a2f2582e67bcd2a931186db9ecfc41c1 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 30 Apr 2021 10:57:21 +0700
Subject: [PATCH 38/66] Feature #3042 : Add instruction execution mongo index

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 config/mongo/000-default.yml |  5 +++++
 lib/api/alarm/store.go       | 24 +++++++++++-------------
 2 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/config/mongo/000-default.yml b/config/mongo/000-default.yml
index cd15b6ab..799c5542 100644
--- a/config/mongo/000-default.yml
+++ b/config/mongo/000-default.yml
@@ -110,5 +110,10 @@ indexes:
       keys:
         instruction: 1
         status: 1
+      options:
+        background: true
+    alarm_1:
+      keys:
+        alarm: 1
       options:
         background: true
\ No newline at end of file
diff --git a/lib/api/alarm/store.go b/lib/api/alarm/store.go
index bd3efbd5..9966b0e7 100644
--- a/lib/api/alarm/store.go
+++ b/lib/api/alarm/store.go
@@ -24,17 +24,14 @@ import (
 )
 
 const (
-	InstructionStatusRunning    = 0
-	InstructionStatusPaused     = 1
-	InstructionStatusWaitResult = 5
-	InstructionTypeManual       = 0
-	InstructionTypeAuto         = 1
+	InstructionExecutionStatusRunning    = 0
+	InstructionExecutionStatusPaused     = 1
+	InstructionExecutionStatusWaitResult = 5
+	InstructionTypeManual                = 0
+	InstructionTypeAuto                  = 1
+	InstructionStatusApproved            = 0
 )
 
-const InstructionApproved = 0
-
-const InstructionsQueryAll = "all"
-
 const linkFetchTimeout = 30 * time.Second
 
 type Store interface {
@@ -366,7 +363,8 @@ func (s *store) getAssignedInstructionsMap(ctx context.Context, alarmIds []strin
 		ctx,
 		[]bson.M{
 			{"$match": bson.M{
-				"type": InstructionTypeManual,
+				"type":   InstructionTypeManual,
+				"status": bson.M{"$in": bson.A{InstructionStatusApproved, nil}},
 			}},
 			{"$match": bson.M{"status": bson.M{"$in": bson.A{InstructionApproved, nil}}}}, //get only approved
 			{"$lookup": bson.M{
@@ -379,7 +377,7 @@ func (s *store) getAssignedInstructionsMap(ctx context.Context, alarmIds []strin
 				"instruction_executions": bson.M{"$filter": bson.M{
 					"input": "$instruction_executions",
 					"cond": bson.M{"$and": []bson.M{
-						{"$in": bson.A{"$$this.status", []int{InstructionStatusRunning, InstructionStatusPaused}}},
+						{"$in": bson.A{"$$this.status", []int{InstructionExecutionStatusRunning, InstructionExecutionStatusPaused}}},
 						{"$in": bson.A{"$$this.alarm", alarmIds}},
 					}},
 				}},
@@ -588,7 +586,7 @@ func (s *store) fillAutoInstructionFlags(ctx context.Context, result *Aggregatio
 	for _, item := range executionStatuses {
 		running := false
 		for _, status := range item.Statuses {
-			if status == InstructionStatusRunning || status == InstructionStatusWaitResult {
+			if status == InstructionExecutionStatusRunning || status == InstructionExecutionStatusWaitResult {
 				running = true
 				break
 			}
@@ -815,7 +813,7 @@ func (s *store) addInstructionsFilter(ctx context.Context, r FilterRequest, matc
 
 func (s *store) getInstructionsFilters(ctx context.Context, filter bson.M) ([]bson.M, error) {
 	//get only approved
-	filter["status"] = bson.M{"$in": bson.A{0, nil}}
+	filter["status"] = bson.M{"$in": bson.A{InstructionStatusApproved, nil}}
 
 	instructionCursor, _ := s.dbInstructionCollection(mongo.InstructionMongoCollection).Find(ctx, filter)
 	defer instructionCursor.Close(ctx)
-- 
2.25.1


From 2c93e1535ed9dc54b01eba6627db8da934e6331c Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 30 Apr 2021 13:43:36 +0700
Subject: [PATCH 39/66] fix fixtures

---
 fixtures/default_rights.json | 14 --------------
 1 file changed, 14 deletions(-)

diff --git a/fixtures/default_rights.json b/fixtures/default_rights.json
index df40645e..48a3e91f 100644
--- a/fixtures/default_rights.json
+++ b/fixtures/default_rights.json
@@ -567,20 +567,6 @@
     },
     "enable": true
   },
-  {
-    "_id": "manageruser",
-    "crecord_type": "user",
-    "crecord_name": "manageruser",
-    "role": "manager",
-    "mail": "manager@canopsis.net",
-    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
-    "authkey": "2be1d0ee-5e9e-4b1f-9d80-e857e50f4191",
-    "contact": {
-      "name": "John Doe",
-      "address": "30 Rue du Triez 59290 Wasquehal France"
-    },
-    "enable": true
-  },
   {
     "_id": "nopermsuser",
     "crecord_type": "user",
-- 
2.25.1


From 3686931491724b95b014288252d3b8f81299274c Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 30 Apr 2021 15:50:03 +0700
Subject: [PATCH 40/66] Feature #3046 : Make engine-remediation to handle rpc

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 cmd/canopsis-api/main.go                      | 15 +++-
 .../canopsis-cat.toml.example                 |  9 +-
 cmd/engine-axe/dependencies.go                | 12 +++
 cmd/engine-axe/message_processor.go           | 90 ++++++++++++++-----
 lib/api/api.go                                | 26 ++++--
 lib/api/default.go                            | 50 ++++++++---
 lib/canopsis/engine/rpc_server.go             |  2 +-
 lib/canopsis/engine/rpc_server_test.go        |  8 +-
 lib/canopsis/globals.go                       |  4 +-
 lib/canopsis/types/event.go                   |  5 --
 lib/canopsis/types/rpc.go                     | 13 +++
 lib/depmake/depmake.go                        |  7 +-
 lib/mongo/mongo.go                            | 15 ++++
 mocks/lib/mongo/mongo.go                      | 39 ++++++++
 .../engines/remediation/alarm_get.feature     |  4 +-
 .../remediation/jobexecution_start.feature    |  5 --
 16 files changed, 238 insertions(+), 66 deletions(-)

diff --git a/cmd/canopsis-api/main.go b/cmd/canopsis-api/main.go
index 67b41bcc..6b099e10 100644
--- a/cmd/canopsis-api/main.go
+++ b/cmd/canopsis-api/main.go
@@ -51,11 +51,10 @@ func main() {
 	if err != nil {
 		logger.Fatal().Err(err).Msg("cannot load config")
 	}
+	// Set mongodb setting.
+	dbClient.SetRetryCount(cfg.Global.ReconnectRetries)
+	dbClient.SetMinRetryTimeout(cfg.Global.GetReconnectTimeout())
 	// Init security ACL enforcer.
-	dbClient, err = mongo.NewClient(cfg.Global.ReconnectRetries, cfg.Global.GetReconnectTimeout())
-	if err != nil {
-		logger.Fatal().Err(err).Msg("cannot connect to mongodb")
-	}
 	enforcer, err := libsecurity.NewEnforcer(flags.ConfigDir, dbClient)
 	if err != nil {
 		logger.Fatal().Err(err).Msg("cannot create security enforce")
@@ -70,6 +69,14 @@ func main() {
 		enforcer,
 		nil,
 		logger,
+		func(ctx context.Context) error {
+			err := dbClient.Disconnect(ctx)
+			if err != nil {
+				return err
+			}
+
+			return nil
+		},
 	)
 	if err != nil {
 		logger.Fatal().Err(err).Msg("fail create api")
diff --git a/cmd/canopsis-reconfigure/canopsis-cat.toml.example b/cmd/canopsis-reconfigure/canopsis-cat.toml.example
index f831454a..a08121ec 100644
--- a/cmd/canopsis-reconfigure/canopsis-cat.toml.example
+++ b/cmd/canopsis-reconfigure/canopsis-cat.toml.example
@@ -223,20 +223,15 @@ noWait = false
   # args =
 
 [[RabbitMQ.queues]]
-name = "Engine_remediation"
+name = "Engine_remediation_rpc_server"
 durable = true
 autoDelete = false
 exclusive = false
 noWait = false
 # args =
-  [RabbitMQ.queues.bind]
-  key = "Engine_remediation"
-  exchange = "amq.direct"
-  noWait = false
-  # args =
 
 [[RabbitMQ.queues]]
-name = "Engine_remediation_axe_rpc_client"
+name = "Engine_remediation_rpc_server_job"
 durable = true
 autoDelete = false
 exclusive = false
diff --git a/cmd/engine-axe/dependencies.go b/cmd/engine-axe/dependencies.go
index 38afb7b5..ccb45910 100644
--- a/cmd/engine-axe/dependencies.go
+++ b/cmd/engine-axe/dependencies.go
@@ -89,6 +89,17 @@ func NewEngineAXE(ctx context.Context, options Options, logger zerolog.Logger) e
 		logger,
 	)
 
+	remediationRpcClient := engine.NewRPCClient(
+		canopsis.AxeRPCConsumerName,
+		canopsis.RemediationRPCQueueServerName,
+		"",
+		cfg.Global.PrefetchCount,
+		cfg.Global.PrefetchSize,
+		nil,
+		amqpChannel,
+		logger,
+	)
+
 	engineAxe := engine.New(nil, nil, logger)
 	engineAxe.AddConsumer(engine.NewDefaultConsumer(
 		canopsis.AxeConsumerName,
@@ -114,6 +125,7 @@ func NewEngineAXE(ctx context.Context, options Options, logger zerolog.Logger) e
 				logger,
 			),
 			StatsService:           m.getDefaultStatsService(logger, cfg),
+			RemediationRpcClient:   remediationRpcClient,
 			TimezoneConfigProvider: timezoneConfigProvider,
 			Encoder:                json.NewEncoder(),
 			Decoder:                json.NewDecoder(),
diff --git a/cmd/engine-axe/message_processor.go b/cmd/engine-axe/message_processor.go
index f787a429..fa929f0e 100644
--- a/cmd/engine-axe/message_processor.go
+++ b/cmd/engine-axe/message_processor.go
@@ -18,6 +18,7 @@ type messageProcessor struct {
 	FeatureStatEvents        bool
 	EventProcessor           alarm.EventProcessor
 	StatsService             statsng.Service
+	RemediationRpcClient     engine.RPCClient
 	TimezoneConfigProvider   config.TimezoneConfigProvider
 	Encoder                  encoding.Encoder
 	Decoder                  encoding.Decoder
@@ -60,30 +61,13 @@ func (p *messageProcessor) Process(parentCtx context.Context, d amqp.Delivery) (
 	}
 	event.AlarmChange = &alarmChange
 
-	if p.FeatureStatEvents {
-		if event.Alarm == nil {
-			p.Logger.Warn().Msg("event.Alarm should not be nil")
-		} else if event.Entity == nil {
-			p.Logger.Warn().Msg("event.Entity should not be nil")
-		} else {
-			go func() {
-				err := p.StatsService.ProcessAlarmChange(
-					ctx,
-					*event.AlarmChange,
-					event.Timestamp,
-					*event.Alarm,
-					*event.Entity,
-					event.Author,
-					event.EventType,
-					p.TimezoneConfigProvider.Get().Location,
-				)
-				if err != nil {
-					p.logError(err, "cannot update stats", msg)
-				}
-			}()
-		}
+	err = p.handleRemediation(event, msg)
+	if err != nil {
+		return nil, err
 	}
 
+	p.handleStats(ctx, event, msg)
+
 	// Encode and publish the event to the next engine
 	var bevent []byte
 	trace.WithRegion(ctx, "encode-event", func() {
@@ -97,6 +81,68 @@ func (p *messageProcessor) Process(parentCtx context.Context, d amqp.Delivery) (
 	return bevent, nil
 }
 
+func (p *messageProcessor) handleStats(ctx context.Context, event types.Event, msg []byte) {
+	if !p.FeatureStatEvents {
+		return
+	}
+
+	if event.Alarm == nil {
+		p.Logger.Warn().Msg("event.Alarm should not be nil")
+		return
+	}
+
+	if event.Entity == nil {
+		p.Logger.Warn().Msg("event.Entity should not be nil")
+		return
+	}
+
+	go func() {
+		err := p.StatsService.ProcessAlarmChange(
+			ctx,
+			*event.AlarmChange,
+			event.Timestamp,
+			*event.Alarm,
+			*event.Entity,
+			event.Author,
+			event.EventType,
+			p.TimezoneConfigProvider.Get().Location,
+		)
+		if err != nil {
+			p.logError(err, "cannot update stats", msg)
+		}
+	}()
+}
+
+func (p *messageProcessor) handleRemediation(event types.Event, msg []byte) error {
+	if event.AlarmChange.Type != types.AlarmChangeTypeCreate &&
+		event.AlarmChange.Type != types.AlarmChangeTypeCreateAndPbhEnter {
+		return nil
+	}
+
+	body, err := p.Encoder.Encode(types.RPCRemediationEvent{
+		Alarm:  event.Alarm,
+		Entity: event.Entity,
+	})
+	if err != nil {
+		p.logError(err, "failed to encode remediation event", msg)
+		return nil
+	}
+
+	err = p.RemediationRpcClient.Call(engine.RPCMessage{
+		CorrelationID: event.Alarm.ID,
+		Body:          body,
+	})
+	if err != nil {
+		if engine.IsConnectionError(err) {
+			return err
+		}
+
+		p.logError(err, "failed to send rpc call to remediation", msg)
+	}
+
+	return nil
+}
+
 func (p *messageProcessor) logError(err error, errMsg string, msg []byte) {
 	if p.FeaturePrintEventOnError {
 		p.Logger.Err(err).Str("event", string(msg)).Msg(errMsg)
diff --git a/lib/api/api.go b/lib/api/api.go
index 32003443..26a28495 100644
--- a/lib/api/api.go
+++ b/lib/api/api.go
@@ -20,6 +20,8 @@ type Router func(gin.IRouter)
 //  Worker is used to implement adding new worker to API.
 type Worker func(context.Context)
 
+type DeferFunc func(ctx context.Context) error
+
 // API is used to implement API http server.
 type API interface {
 	// Run starts http server.
@@ -34,6 +36,7 @@ type API interface {
 
 type api struct {
 	addr            string
+	deferFunc       DeferFunc
 	logger          zerolog.Logger
 	routers         []Router
 	noRouteHandlers []gin.HandlerFunc
@@ -44,13 +47,15 @@ type api struct {
 // New creates new api.
 func New(
 	addr string,
+	deferFunc DeferFunc,
 	logger zerolog.Logger,
 ) API {
 	return &api{
-		addr:    addr,
-		logger:  logger,
-		routers: make([]Router, 0),
-		workers: make(map[string]Worker),
+		addr:      addr,
+		deferFunc: deferFunc,
+		logger:    logger,
+		routers:   make([]Router, 0),
+		workers:   make(map[string]Worker),
 	}
 }
 
@@ -66,7 +71,7 @@ func (a *api) AddNoRoute(handlers []gin.HandlerFunc) {
 	a.noRouteHandlers = handlers
 }
 
-func (a *api) Run(ctx context.Context) error {
+func (a *api) Run(ctx context.Context) (resErr error) {
 	handler := a.registerRoutes()
 	a.runWorkers(ctx)
 
@@ -86,6 +91,17 @@ func (a *api) Run(ctx context.Context) error {
 		}
 	}()
 
+	defer func() {
+		if a.deferFunc != nil {
+			deferCtx, deferCancel := context.WithTimeout(context.Background(), shutdownTimout)
+			defer deferCancel()
+			err := a.deferFunc(deferCtx)
+			if err != nil && resErr == nil {
+				resErr = err
+			}
+		}
+	}()
+
 	if err := server.ListenAndServe(); err != nil && err != http.ErrServerClosed {
 		a.logger.Err(err).Msg("server fail to start")
 
diff --git a/lib/api/default.go b/lib/api/default.go
index 29cb5f9d..e9371cc6 100644
--- a/lib/api/default.go
+++ b/lib/api/default.go
@@ -42,6 +42,7 @@ func Default(
 	enforcer libsecurity.Enforcer,
 	timezoneConfigProvider *config.BaseTimezoneConfigProvider,
 	logger zerolog.Logger,
+	deferFunc DeferFunc,
 ) (API, error) {
 	// Retrieve config.
 	dbClient, err := mongo.NewClient(0, 0)
@@ -58,15 +59,9 @@ func Default(
 	if timezoneConfigProvider == nil {
 		timezoneConfigProvider = config.NewTimezoneConfigProvider(cfg, logger)
 	}
-	// Connect to mongodb.
-	dbClient, err = mongo.NewClient(
-		cfg.Global.ReconnectRetries,
-		cfg.Global.GetReconnectTimeout(),
-	)
-	if err != nil {
-		logger.Err(err).Msg("cannot connect to mongodb")
-		return nil, err
-	}
+	// Set mongodb setting.
+	dbClient.SetRetryCount(cfg.Global.ReconnectRetries)
+	dbClient.SetMinRetryTimeout(cfg.Global.GetReconnectTimeout())
 	// Connect to rmq.
 	amqpConn, err := amqp.NewConnection(logger, -1, cfg.Global.GetReconnectTimeout())
 	if err != nil {
@@ -144,7 +139,42 @@ func Default(
 	exportExecutor := export.NewTaskExecutor(dbClient, logger)
 
 	// Create api.
-	api := New(addr, logger)
+	api := New(
+		addr,
+		func(ctx context.Context) error {
+			close(pbhComputeChan)
+			close(entityPublChan)
+
+			err := dbClient.Disconnect(ctx)
+			if err != nil {
+				return err
+			}
+			err = amqpConn.Close()
+			if err != nil {
+				return err
+			}
+
+			err = pbhRedisSession.Close()
+			if err != nil {
+				return err
+			}
+
+			err = engineRedisSession.Close()
+			if err != nil {
+				return err
+			}
+
+			if deferFunc != nil {
+				err := deferFunc(ctx)
+				if err != nil {
+					return err
+				}
+			}
+
+			return nil
+		},
+		logger,
+	)
 	api.AddRouter(func(router gin.IRouter) {
 		corsConfig := cors.DefaultConfig()
 		corsConfig.AllowAllOrigins = true
diff --git a/lib/canopsis/engine/rpc_server.go b/lib/canopsis/engine/rpc_server.go
index c5e722de..6aaa3eab 100644
--- a/lib/canopsis/engine/rpc_server.go
+++ b/lib/canopsis/engine/rpc_server.go
@@ -95,7 +95,7 @@ func (c *rpcServer) processMessage(ctx context.Context, d amqp.Delivery, consume
 		c.logger.Err(err).Msg("cannot ack amqp delivery")
 	}
 
-	if body != nil {
+	if body != nil && d.ReplyTo != "" {
 		err = publishCh.Publish(
 			"",        // exchange
 			d.ReplyTo, // routing key
diff --git a/lib/canopsis/engine/rpc_server_test.go b/lib/canopsis/engine/rpc_server_test.go
index 848ac05a..c46225d8 100644
--- a/lib/canopsis/engine/rpc_server_test.go
+++ b/lib/canopsis/engine/rpc_server_test.go
@@ -28,7 +28,11 @@ func TestRpcServer_Consume_GivenMessage_ShouldProcessIt(t *testing.T) {
 		zerolog.Logger{},
 	)
 	body := []byte("test-body")
-	d := amqp.Delivery{Body: body}
+	replyTo := "test-reply"
+	d := amqp.Delivery{
+		Body:    body,
+		ReplyTo: replyTo,
+	}
 	msgs := make(chan amqp.Delivery, 1)
 	msgs <- d
 	close(msgs)
@@ -39,7 +43,7 @@ func TestRpcServer_Consume_GivenMessage_ShouldProcessIt(t *testing.T) {
 	mockChannel.EXPECT().Close().AnyTimes()
 	mockChannel.EXPECT().Consume(gomock.Any(), gomock.Any(), gomock.Any(),
 		gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any()).Return(msgs, nil)
-	mockChannel.EXPECT().Publish(gomock.Any(), gomock.Any(), gomock.Any(),
+	mockChannel.EXPECT().Publish(gomock.Any(), gomock.Eq(replyTo), gomock.Any(),
 		gomock.Any(), gomock.Any())
 
 	mockMessageProcessor.EXPECT().Process(gomock.Any(), gomock.Eq(d)).Return(body, nil)
diff --git a/lib/canopsis/globals.go b/lib/canopsis/globals.go
index 60283769..28f5282a 100644
--- a/lib/canopsis/globals.go
+++ b/lib/canopsis/globals.go
@@ -67,8 +67,8 @@ const (
 	CanopsisEventsExchange          = "canopsis.events"
 
 	RemediationEngineName            = "engine-remediation"
-	RemediationQueueName             = "Engine_remediation"
 	RemediationConsumerName          = "remediation"
 	RemediationRPCConsumerName       = "remediation_rpc"
-	RemediationAxeRPCClientQueueName = "Engine_remediation_axe_rpc_client"
+	RemediationRPCQueueServerName    = "Engine_remediation_rpc_server"
+	RemediationRPCQueueServerJobName = "Engine_remediation_rpc_server_job"
 )
diff --git a/lib/canopsis/types/event.go b/lib/canopsis/types/event.go
index 0175cae5..99971b40 100644
--- a/lib/canopsis/types/event.go
+++ b/lib/canopsis/types/event.go
@@ -99,8 +99,6 @@ const (
 	EventTypeInstructionJobCompleted = "instructionjobcompleted"
 	EventTypeInstructionJobAborted   = "instructionjobaborted"
 	EventTypeInstructionJobFailed    = "instructionjobfailed"
-	// EventTypeInstructionJobStart is used to start job for manual instruction.
-	EventTypeInstructionJobStart = "instructionjobstart"
 
 	// EventTypeRecomputeEntityService is used to recompute service context graph and state.
 	EventTypeRecomputeEntityService = "recomputeentityservice"
@@ -201,9 +199,6 @@ type Event struct {
 
 	// IdleRuleApply is used if event is emitted by idle rule.
 	IdleRuleApply string `bson:"idle_rule_apply,omitempty" json:"idle_rule_apply,omitempty"`
-
-	// JobExecutionID is used only with EventTypeInstructionJobStart.
-	JobExecutionID string `bson:"job_execution_id,omitempty" json:"job_execution_id,omitempty"`
 }
 
 // ContextInformation regroup context values necessary for creating a new entity
diff --git a/lib/canopsis/types/rpc.go b/lib/canopsis/types/rpc.go
index ae795212..f4569ec3 100644
--- a/lib/canopsis/types/rpc.go
+++ b/lib/canopsis/types/rpc.go
@@ -139,3 +139,16 @@ type RPCWebhookResultEvent struct {
 	Response        map[string]interface{} `json:"response,omitempty"`
 	Error           *RPCError              `json:"error"`
 }
+
+type RPCRemediationEvent struct {
+	Alarm  *Alarm  `json:"alarm"`
+	Entity *Entity `json:"entity"`
+}
+
+type RPCRemediationJobEvent struct {
+	Alarm          *Alarm  `json:"alarm"`
+	Entity         *Entity `json:"entity"`
+	JobExecutionID string  `json:"job_execution_id"`
+	Output         string  `json:"output"`
+	Author         string  `json:"author"`
+}
diff --git a/lib/depmake/depmake.go b/lib/depmake/depmake.go
index 6b55c2cc..eee9f2e6 100644
--- a/lib/depmake/depmake.go
+++ b/lib/depmake/depmake.go
@@ -43,9 +43,14 @@ func (m DependencyMaker) DepMongoClient(cfg config.CanopsisConf) mongo.DbClient
 func (m DependencyMaker) DepConfig() config.CanopsisConf {
 	dbClient, err := mongo.NewClient(0, 0)
 	if err != nil {
-		panic(err)
+		Panic("mongo session", err)
 	}
 
+	defer func() {
+		err := dbClient.Disconnect(context.Background())
+		Panic("mongo session disconnect", err)
+	}()
+
 	cfg, err := config.NewAdapter(dbClient).GetConfig()
 	if err != nil {
 		panic(fmt.Errorf("dependency error: %s: %v", "can't get the config", err))
diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index d8b174ea..0af95377 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -96,6 +96,9 @@ type DbCollection interface {
 // DbClient connected MongoDB client settings
 type DbClient interface {
 	Collection(string) DbCollection
+	Disconnect(ctx context.Context) error
+	SetRetryCount(int)
+	SetMinRetryTimeout(time.Duration)
 }
 
 type dbClient struct {
@@ -410,6 +413,18 @@ func (c *dbClient) Collection(name string) DbCollection {
 	}
 }
 
+func (c *dbClient) Disconnect(ctx context.Context) error {
+	return c.Client.Disconnect(ctx)
+}
+
+func (c *dbClient) SetRetryCount(v int) {
+	c.RetryCount = v
+}
+
+func (c *dbClient) SetMinRetryTimeout(v time.Duration) {
+	c.MinRetryTimeout = v
+}
+
 // getURL parses URL value in EnvURL environment variable
 func getURL() (mongoURL, dbName string, err error) {
 	mongoURL = os.Getenv(EnvURL)
diff --git a/mocks/lib/mongo/mongo.go b/mocks/lib/mongo/mongo.go
index 9855f57b..67077b76 100644
--- a/mocks/lib/mongo/mongo.go
+++ b/mocks/lib/mongo/mongo.go
@@ -12,6 +12,7 @@ import (
 	mongo0 "go.mongodb.org/mongo-driver/mongo"
 	options "go.mongodb.org/mongo-driver/mongo/options"
 	reflect "reflect"
+	time "time"
 )
 
 // MockDbCollection is a mock of DbCollection interface
@@ -418,6 +419,44 @@ func (mr *MockDbClientMockRecorder) Collection(arg0 interface{}) *gomock.Call {
 	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Collection", reflect.TypeOf((*MockDbClient)(nil).Collection), arg0)
 }
 
+// Disconnect mocks base method
+func (m *MockDbClient) Disconnect(arg0 context.Context) error {
+	m.ctrl.T.Helper()
+	ret := m.ctrl.Call(m, "Disconnect", arg0)
+	ret0, _ := ret[0].(error)
+	return ret0
+}
+
+// Disconnect indicates an expected call of Disconnect
+func (mr *MockDbClientMockRecorder) Disconnect(arg0 interface{}) *gomock.Call {
+	mr.mock.ctrl.T.Helper()
+	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Disconnect", reflect.TypeOf((*MockDbClient)(nil).Disconnect), arg0)
+}
+
+// SetMinRetryTimeout mocks base method
+func (m *MockDbClient) SetMinRetryTimeout(arg0 time.Duration) {
+	m.ctrl.T.Helper()
+	m.ctrl.Call(m, "SetMinRetryTimeout", arg0)
+}
+
+// SetMinRetryTimeout indicates an expected call of SetMinRetryTimeout
+func (mr *MockDbClientMockRecorder) SetMinRetryTimeout(arg0 interface{}) *gomock.Call {
+	mr.mock.ctrl.T.Helper()
+	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMinRetryTimeout", reflect.TypeOf((*MockDbClient)(nil).SetMinRetryTimeout), arg0)
+}
+
+// SetRetryCount mocks base method
+func (m *MockDbClient) SetRetryCount(arg0 int) {
+	m.ctrl.T.Helper()
+	m.ctrl.Call(m, "SetRetryCount", arg0)
+}
+
+// SetRetryCount indicates an expected call of SetRetryCount
+func (mr *MockDbClientMockRecorder) SetRetryCount(arg0 interface{}) *gomock.Call {
+	mr.mock.ctrl.T.Helper()
+	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRetryCount", reflect.TypeOf((*MockDbClient)(nil).SetRetryCount), arg0)
+}
+
 // MockSingleResultHelper is a mock of SingleResultHelper interface
 type MockSingleResultHelper struct {
 	ctrl     *gomock.Controller
diff --git a/tests/functional/features/engines/remediation/alarm_get.feature b/tests/functional/features/engines/remediation/alarm_get.feature
index c38228d0..95711663 100644
--- a/tests/functional/features/engines/remediation/alarm_get.feature
+++ b/tests/functional/features/engines/remediation/alarm_get.feature
@@ -83,7 +83,7 @@ Feature: update an instruction statistics
       ]
     }
     """
-    When I wait 4s
+    When I wait 6s
     When I do GET /api/v4/alarms?search=test-resource-to-alarm-get-auto-instruction-flags-1&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
@@ -97,7 +97,7 @@ Feature: update an instruction statistics
       ]
     }
     """
-    When I wait 4s
+    When I wait 6s
     When I do GET /api/v4/alarms?search=test-resource-to-alarm-get-auto-instruction-flags-1&with_instructions=true
     Then the response code should be 200
     Then the response body should contain:
diff --git a/tests/functional/features/engines/remediation/jobexecution_start.feature b/tests/functional/features/engines/remediation/jobexecution_start.feature
index 51ce707e..f2661ac7 100644
--- a/tests/functional/features/engines/remediation/jobexecution_start.feature
+++ b/tests/functional/features/engines/remediation/jobexecution_start.feature
@@ -101,7 +101,6 @@ Feature: run a job
     }
     """
     Then the response key "started_at" should not be "0"
-    When I wait the end of event processing
     When I wait 2s
     When I do GET /api/v4/cat/executions/{{ .executionID }}
     Then the response code should be 200
@@ -274,7 +273,6 @@ Feature: run a job
     }
     """
     Then the response code should be 200
-    When I wait the end of event processing
     When I wait 2s
     When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
     When I wait the end of event processing
@@ -403,7 +401,6 @@ Feature: run a job
     }
     """
     Then the response code should be 200
-    When I wait the end of event processing
     When I do POST /api/v4/cat/job-executions:
     """
     {
@@ -574,7 +571,6 @@ Feature: run a job
     }
     """
     Then the response code should be 200
-    When I wait the end of event processing
     When I do POST /api/v4/cat/job-executions:
     """
     {
@@ -584,7 +580,6 @@ Feature: run a job
     }
     """
     Then the response code should be 200
-    When I wait the end of event processing
     When I wait 2s
     When I do PUT /api/v4/cat/executions/{{ .firstExecutionID }}/next-step
     When I do PUT /api/v4/cat/executions/{{ .secondExecutionID }}/next-step
-- 
2.25.1


From 091f587f1045a7fd1ac1dae1c17db0b9159499d4 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 4 May 2021 13:03:47 +0700
Subject: [PATCH 41/66] Feature #3046 : Try to close everything despite errors

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/api/default.go | 23 ++++++++++++-----------
 1 file changed, 12 insertions(+), 11 deletions(-)

diff --git a/lib/api/default.go b/lib/api/default.go
index e9371cc6..23462455 100644
--- a/lib/api/default.go
+++ b/lib/api/default.go
@@ -145,33 +145,34 @@ func Default(
 			close(pbhComputeChan)
 			close(entityPublChan)
 
+			var resErr error
 			err := dbClient.Disconnect(ctx)
-			if err != nil {
-				return err
+			if err != nil && resErr == nil {
+				resErr = err
 			}
 			err = amqpConn.Close()
-			if err != nil {
-				return err
+			if err != nil && resErr == nil {
+				resErr = err
 			}
 
 			err = pbhRedisSession.Close()
-			if err != nil {
-				return err
+			if err != nil && resErr == nil {
+				resErr = err
 			}
 
 			err = engineRedisSession.Close()
-			if err != nil {
-				return err
+			if err != nil && resErr == nil {
+				resErr = err
 			}
 
 			if deferFunc != nil {
 				err := deferFunc(ctx)
-				if err != nil {
-					return err
+				if err != nil && resErr == nil {
+					resErr = err
 				}
 			}
 
-			return nil
+			return resErr
 		},
 		logger,
 	)
-- 
2.25.1


From aeca375d9db0ff1f0f8de2c72b962123a71c7971 Mon Sep 17 00:00:00 2001
From: Nguyen DN <nnguyen@bocasay.com>
Date: Mon, 10 May 2021 12:23:13 +0700
Subject: [PATCH 42/66] update feature tests

---
 fixtures/default_rights.json                  |  62 +++-
 fixtures/instruction.json                     | 136 +++++----
 fixtures/job.json                             |  30 +-
 fixtures/job_config.json                      |  18 +-
 .../api/cat/instruction_create.feature        |  65 ++--
 .../instruction_create_with_approval.feature  | 287 +++++++++++-------
 .../features/api/cat/instruction_get.feature  |  63 ++--
 .../api/cat/instruction_update.feature        |  24 +-
 .../instruction_update_with_approval.feature  | 190 ++++++++----
 .../api/cat/job_config_create.feature         |   5 +-
 .../features/api/cat/job_config_get.feature   |  10 +-
 .../api/cat/job_config_update.feature         |  10 +-
 .../features/api/cat/job_create.feature       |   9 +-
 .../features/api/cat/job_get.feature          |  14 +-
 .../features/api/cat/job_update.feature       |  14 +-
 15 files changed, 577 insertions(+), 360 deletions(-)

diff --git a/fixtures/default_rights.json b/fixtures/default_rights.json
index 48a3e91f..c48a622d 100644
--- a/fixtures/default_rights.json
+++ b/fixtures/default_rights.json
@@ -668,9 +668,15 @@
     "crecord_name": "test-role-to-get-1",
     "description": "test-role-to-get-1-description",
     "rights": {
-      "test-permission-to-edit-role-1": {"checksum": 1},
-      "test-permission-to-edit-role-2": {"checksum": 15},
-      "test-permission-to-edit-role-3": {"checksum": 7}
+      "test-permission-to-edit-role-1": {
+        "checksum": 1
+      },
+      "test-permission-to-edit-role-2": {
+        "checksum": 15
+      },
+      "test-permission-to-edit-role-3": {
+        "checksum": 7
+      }
     }
   },
   {
@@ -680,8 +686,12 @@
     "description": "test-role-to-get-2-description",
     "defaultview": "test-view-to-edit-role",
     "rights": {
-      "test-permission-to-edit-role-2": {"checksum": 7},
-      "test-permission-to-edit-role-3": {"checksum": 3}
+      "test-permission-to-edit-role-2": {
+        "checksum": 7
+      },
+      "test-permission-to-edit-role-3": {
+        "checksum": 3
+      }
     }
   },
   {
@@ -690,9 +700,15 @@
     "crecord_name": "test-role-to-update",
     "description": "test-role-to-update-description",
     "rights": {
-      "test-permission-to-edit-role-1": {"checksum": 1},
-      "test-permission-to-edit-role-2": {"checksum": 15},
-      "test-permission-to-edit-role-3": {"checksum": 7}
+      "test-permission-to-edit-role-1": {
+        "checksum": 1
+      },
+      "test-permission-to-edit-role-2": {
+        "checksum": 15
+      },
+      "test-permission-to-edit-role-3": {
+        "checksum": 7
+      }
     }
   },
   {
@@ -721,9 +737,15 @@
     "crecord_name": "test-role-to-edit-user",
     "description": "test-role-to-edit-user-description",
     "rights": {
-      "test-permission-to-edit-user-1": {"checksum":  1},
-      "test-permission-to-edit-user-2": {"checksum":  15},
-      "test-permission-to-edit-user-3": {"checksum":  7}
+      "test-permission-to-edit-user-1": {
+        "checksum": 1
+      },
+      "test-permission-to-edit-user-2": {
+        "checksum": 15
+      },
+      "test-permission-to-edit-user-3": {
+        "checksum": 7
+      }
     }
   },
   {
@@ -953,5 +975,23 @@
     "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fwwww",
     "authkey": "b1f67e3e-wwww-4140-a801-9a05cb683e2c",
     "enable": true
+  },
+  {
+    "_id": "test-user-author-1-id",
+    "crecord_type": "user",
+    "crecord_name": "test-user-author-1-username",
+    "role": "noperms",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
+    "authkey": "b31c48c7-3ccc-4ad3-bc1e-0e12bdd64caa",
+    "enable": true
+  },
+  {
+    "_id": "test-user-alternate-author-1-id",
+    "crecord_type": "user",
+    "crecord_name": "test-user-alternate-author-1-username",
+    "role": "noperms",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
+    "authkey": "b31c48c7-3ccc-4ad3-bc1e-0e12bdd64caa",
+    "enable": true
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 44bba203..91f3de10 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -9,7 +9,7 @@
       }
     ],
     "description": "test-instruction-to-get-1-description",
-    "author": "test-instruction-to-get-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -88,7 +88,7 @@
       }
     ],
     "description": "test-instruction-to-get-2-description",
-    "author": "test-instruction-to-get-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -121,7 +121,7 @@
       }
     ],
     "description": "test-instruction-to-delete-description",
-    "author": "test-instruction-to-delete-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -164,7 +164,7 @@
       }
     ],
     "description": "test-instruction-to-update-description",
-    "author": "test-instruction-to-update-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -207,7 +207,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-description",
-    "author": "test-instruction-to-update-with-approval-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -245,7 +245,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-2-description",
-    "author": "test-instruction-to-update-with-approval-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -283,7 +283,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-3-description",
-    "author": "test-instruction-to-update-with-approval-3-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -321,7 +321,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-4-description",
-    "author": "test-instruction-to-update-with-approval-4-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -359,7 +359,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-5-description",
-    "author": "test-instruction-to-update-with-approval-5-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -397,7 +397,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-6-description",
-    "author": "test-instruction-to-update-with-approval-6-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -435,7 +435,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-7-description",
-    "author": "test-instruction-to-update-with-approval-7-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -473,7 +473,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-8-description",
-    "author": "test-instruction-to-update-with-approval-8-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -511,7 +511,7 @@
       }
     ],
     "description": "test-instruction-to-update-with-approval-9-description",
-    "author": "test-instruction-to-update-with-approval-9-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -549,7 +549,7 @@
       }
     ],
     "description": "test-instruction-to-update-w-approval-should-cancel-execution-description",
-    "author": "test-instruction-to-update-w-approval-should-cancel-execution-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "steps": [
@@ -588,7 +588,7 @@
       }
     ],
     "description": "test-instruction-to-update-w-approval-should-cancel-execution-description",
-    "author": "test-instruction-to-update-w-approval-should-cancel-execution-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "status": 2,
     "avg_complete_time": 10,
@@ -632,7 +632,7 @@
       }
     ],
     "description": "test-instruction-to-check-unique-id-description",
-    "author": "test-instruction-to-check-unique-id-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -675,7 +675,7 @@
       }
     ],
     "description": "test-instruction-to-check-unique-name-description",
-    "author": "test-instruction-to-check-unique-name-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -718,7 +718,7 @@
       }
     ],
     "description": "test-instruction-to-job-check-linked-1-description",
-    "author": "test-instruction-to-job-check-linked-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -763,7 +763,7 @@
       }
     ],
     "description": "test-instruction-to-job-check-linked-2-description",
-    "author": "test-instruction-to-job-check-linked-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -792,7 +792,7 @@
       }
     ],
     "description": "test-instruction-execution-to-start-multiple-times-description",
-    "author": "test-instruction-execution-to-start-multiple-times-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -863,7 +863,7 @@
       }
     ],
     "description": "test-instruction-execution-running-description",
-    "author": "test-instruction-execution-running-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -936,7 +936,7 @@
       }
     ],
     "description": "test-instruction-cancel-execution-running-1-description",
-    "author": "test-instruction-cancel-execution-running-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1007,7 +1007,7 @@
       }
     ],
     "description": "test-instruction-delete-execution-running-description",
-    "author": "test-instruction-delete-execution-running-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1078,7 +1078,7 @@
       }
     ],
     "description": "test-instruction-execution-resume-1-description",
-    "author": "test-instruction-execution-resume-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1149,7 +1149,7 @@
       }
     ],
     "description": "test-instruction-to-assign-description",
-    "author": "test-instruction-to-assign-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1193,7 +1193,7 @@
       }
     ],
     "description": "test-instruction-to-assign-description",
-    "author": "test-instruction-to-assign-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "avg_complete_time": 10,
     "month_executions": 5,
@@ -1232,7 +1232,7 @@
       }
     ],
     "description": "test-instruction-to-assign-with-execution-description",
-    "author": "test-instruction-to-assign-with-execution-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1275,7 +1275,7 @@
       }
     ],
     "description": "test-instruction-to-assign-with-execution-2-description",
-    "author": "test-instruction-to-assign-with-execution-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1318,7 +1318,7 @@
       }
     ],
     "description": "test-instruction-to-assign-without-execution-description",
-    "author": "test-instruction-to-assign-without-execution-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1361,7 +1361,7 @@
       }
     ],
     "description": "test-instruction-to-auto-instruction-filter-description",
-    "author": "test-instruction-to-auto-instruction-filter-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -1389,7 +1389,7 @@
       }
     ],
     "description": "test-instruction-to-rate-1-description",
-    "author": "test-instruction-to-rate-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1432,7 +1432,7 @@
       }
     ],
     "description": "test-instruction-to-rate-2-description",
-    "author": "test-instruction-to-rate-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1475,7 +1475,7 @@
       }
     ],
     "description": "test-instruction-to-rate-3-description",
-    "author": "test-instruction-to-rate-3-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1518,7 +1518,7 @@
       }
     ],
     "description": "test-instruction-to-rate-4-description",
-    "author": "test-instruction-to-rate-4-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1561,7 +1561,7 @@
       }
     ],
     "description": "test-instruction-to-rate-5-description",
-    "author": "test-instruction-to-rate-5-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1604,7 +1604,7 @@
       }
     ],
     "description": "test-instruction-to-check-rate-notify-description",
-    "author": "test-instruction-to-check-rate-notify-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1632,7 +1632,9 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [1596712203],
+    "mod_history": [
+      1596712203
+    ],
     "created": 1000000019,
     "rating": 5.0
   },
@@ -1648,7 +1650,7 @@
       }
     ],
     "description": "test-instruction-with-entity-pattern-1-description",
-    "author": "test-instruction-with-entity-pattern-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1693,7 +1695,7 @@
       }
     ],
     "description": "test-instruction-with-entity-pattern-2-description",
-    "author": "test-instruction-with-entity-pattern-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1745,7 +1747,7 @@
       }
     ],
     "description": "test-instruction-with-patterns-combined-description",
-    "author": "test-instruction-with-patterns-combined-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -1783,7 +1785,7 @@
     "type": 0,
     "name": "test-alarm-with-pbh-with-some-active-name",
     "description": "test-alarm-with-pbh-with-some-active-description",
-    "author": "test-alarm-with-pbh-with-some-active-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "alarm_patterns": [
       {
@@ -1812,7 +1814,7 @@
     "type": 0,
     "name": "test-alarm-with-pbh-all-active-name",
     "description": "test-alarm-with-pbh-all-active-description",
-    "author": "test-alarm-with-pbh-all-active-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "alarm_patterns": [
       {
@@ -1837,7 +1839,7 @@
     "type": 0,
     "name": "test-alarm-with-pbh-with-some-disabled-name",
     "description": "test-alarm-with-pbh-with-some-disabled-description",
-    "author": "test-alarm-with-pbh-with-some-disabled-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "alarm_patterns": [
       {
@@ -1866,7 +1868,7 @@
     "type": 0,
     "name": "test-instruction-with-pbh-to-edit-name",
     "description": "test-instruction-with-pbh-to-edit-description",
-    "author": "test-instruction-with-pbh-to-edit-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "alarm_patterns": [
       {
@@ -1915,7 +1917,7 @@
       "unit": "s"
     },
     "priority": 2,
-    "author": "test-instruction-to-run-auto-instruction-1-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -1944,7 +1946,7 @@
       "unit": "s"
     },
     "priority": 3,
-    "author": "test-instruction-to-run-auto-instruction-1-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -1973,7 +1975,7 @@
       "unit": "s"
     },
     "priority": 4,
-    "author": "test-instruction-to-run-auto-instruction-2-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2002,7 +2004,7 @@
       "unit": "s"
     },
     "priority": 5,
-    "author": "test-instruction-to-run-auto-instruction-2-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2031,7 +2033,7 @@
       "unit": "s"
     },
     "priority": 6,
-    "author": "test-instruction-to-run-auto-instruction-3-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2060,7 +2062,7 @@
       "unit": "s"
     },
     "priority": 7,
-    "author": "test-instruction-to-run-auto-instruction-3-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2092,7 +2094,7 @@
       "unit": "s"
     },
     "priority": 8,
-    "author": "test-instruction-to-run-auto-instruction-4-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2121,7 +2123,7 @@
       "unit": "s"
     },
     "priority": 9,
-    "author": "test-instruction-to-run-auto-instruction-4-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2150,7 +2152,7 @@
       "unit": "s"
     },
     "priority": 10,
-    "author": "test-instruction-to-run-auto-instruction-4-3-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2179,7 +2181,7 @@
       "unit": "s"
     },
     "priority": 11,
-    "author": "test-instruction-to-run-auto-instruction-5-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2197,7 +2199,7 @@
       }
     ],
     "description": "test-instruction-to-stats-get-1-description",
-    "author": "test-instruction-to-stats-get-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "rating": 3.2,
     "steps": [
@@ -2279,7 +2281,7 @@
       }
     ],
     "description": "test-instruction-to-stats-get-2-description",
-    "author": "test-instruction-to-stats-get-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -2312,7 +2314,7 @@
       }
     ],
     "description": "test-instruction-to-stats-summary-get-1-description",
-    "author": "test-instruction-to-stats-summary-get-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -2393,7 +2395,7 @@
       }
     ],
     "description": "test-instruction-to-stats-summary-get-2-description",
-    "author": "test-instruction-to-stats-summary-get-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -2426,7 +2428,7 @@
       }
     ],
     "description": "test-instruction-to-stats-summary-get-3-description",
-    "author": "test-instruction-to-stats-summary-get-3-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -2458,7 +2460,7 @@
       }
     ],
     "description": "test-instruction-to-stats-changes-get-1-description",
-    "author": "test-instruction-to-stats-changes-get-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -2541,7 +2543,7 @@
       }
     ],
     "description": "test-instruction-to-stats-changes-get-2-description",
-    "author": "test-instruction-to-stats-changes-get-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -2576,7 +2578,7 @@
       }
     ],
     "description": "test-instruction-to-stats-changes-get-3-description",
-    "author": "test-instruction-to-stats-changes-get-3-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "jobs": [
       {
@@ -2608,7 +2610,7 @@
       }
     ],
     "description": "test-instruction-to-comments-get-1-description",
-    "author": "test-instruction-to-comments-get-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -2689,7 +2691,7 @@
       }
     ],
     "description": "test-instruction-to-comments-get-2-description",
-    "author": "test-instruction-to-comments-get-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -2784,7 +2786,7 @@
       "unit": "s"
     },
     "priority": 2,
-    "author": "test-instruction-to-not-run-auto-instruction-manually-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
     "mod_history": [
@@ -2802,7 +2804,7 @@
       }
     ],
     "description": "test-instruction-to-stats-executions-get-1-description",
-    "author": "test-instruction-to-stats-executions-get-1-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
@@ -2883,7 +2885,7 @@
       }
     ],
     "description": "test-instruction-to-stats-executions-get-2-description",
-    "author": "test-instruction-to-stats-executions-get-2-author",
+    "author": "test-user-author-1-id",
     "enabled": true,
     "steps": [
       {
diff --git a/fixtures/job.json b/fixtures/job.json
index 96c75120..c38b8f92 100644
--- a/fixtures/job.json
+++ b/fixtures/job.json
@@ -2,7 +2,7 @@
   {
     "_id": "test-job-to-get",
     "name": "test-job-name-to-get",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -11,7 +11,7 @@
   {
     "_id": "test-job-to-update",
     "name": "test-job-name-to-update",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -20,7 +20,7 @@
   {
     "_id": "test-job-to-delete",
     "name": "test-job-name-to-delete",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -29,7 +29,7 @@
   {
     "_id": "test-job-to-check-linked-to-manual-instruction",
     "name": "test-job-to-check-linked-to-manual-instruction-name",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -38,7 +38,7 @@
   {
     "_id": "test-job-to-check-linked-to-auto-instruction",
     "name": "test-job-to-check-linked-to-auto-instruction-name",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -47,7 +47,7 @@
   {
     "_id": "test-job-to-instruction-edit-1",
     "name": "test-job-to-instruction-edit-1-name",
-    "author": "test-job-to-instruction-edit-1-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-instruction",
     "external_id": "test-job-to-instruction-edit-1-external-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -56,7 +56,7 @@
   {
     "_id": "test-job-to-instruction-edit-2",
     "name": "test-job-to-instruction-edit-2-name",
-    "author": "test-job-to-instruction-edit-2-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-instruction",
     "external_id": "test-job-to-instruction-edit-2-external-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -65,7 +65,7 @@
   {
     "_id": "test-instruction-execution-1",
     "name": "test-instruction-execution-1-name",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-edit-job",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -74,7 +74,7 @@
   {
     "_id": "test-job-execution-to-get",
     "name": "test-job-execution-to-get",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-jobconfig-to-execution-get",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -83,7 +83,7 @@
   {
     "_id": "test-job-to-config-check-linked",
     "name": "test-job-to-config-check-linked-name",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-check-linked",
     "external_id": "test-job-id",
     "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}",
@@ -92,7 +92,7 @@
   {
     "_id": "test-job-to-run-auto-instruction-1",
     "name": "test-job-to-run-auto-instruction-1-name",
-    "author": "test-job-to-run-auto-instruction-1-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-run-auto-instruction",
     "external_id": "test-job-succeeded",
     "payload": "{\"test-job-to-run-auto-instruction-1-key\": \"test-job-to-run-auto-instruction-1-val\"}",
@@ -101,7 +101,7 @@
   {
     "_id": "test-job-to-run-auto-instruction-2",
     "name": "test-job-to-run-auto-instruction-2-name",
-    "author": "test-job-to-run-auto-instruction-2-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-run-auto-instruction",
     "external_id": "test-job-succeeded",
     "payload": "{\"test-job-to-run-auto-instruction-2-key\": \"test-job-to-run-auto-instruction-2-val\"}",
@@ -110,7 +110,7 @@
   {
     "_id": "test-job-to-run-auto-instruction-3",
     "name": "test-job-to-run-auto-instruction-3-name",
-    "author": "test-job-to-run-auto-instruction-3-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-run-auto-instruction",
     "external_id": "test-job-failed",
     "payload": "{\"test-job-to-run-auto-instruction-3-key\": \"test-job-to-run-auto-instruction-3-val\"}",
@@ -119,7 +119,7 @@
   {
     "_id": "test-job-to-run-auto-instruction-4",
     "name": "test-job-to-run-auto-instruction-4-name",
-    "author": "test-job-to-run-auto-instruction-4-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-run-auto-instruction",
     "external_id": "test-job-http-error",
     "payload": "{\"test-job-to-run-auto-instruction-4-key\": \"test-job-to-run-auto-instruction-4-val\"}",
@@ -137,7 +137,7 @@
   {
     "_id": "test-job-to-run-auto-instruction-5",
     "name": "test-job-to-run-auto-instruction-5-name",
-    "author": "test-job-to-run-auto-instruction-5-author",
+    "author": "test-user-author-1-id",
     "config": "test-job-config-to-run-auto-instruction",
     "external_id": "test-job-long-succeeded",
     "payload": "{\"test-job-to-run-auto-instruction-5-key\": \"test-job-to-run-auto-instruction-5-val\"}",
diff --git a/fixtures/job_config.json b/fixtures/job_config.json
index 173038f4..dd9f48a6 100644
--- a/fixtures/job_config.json
+++ b/fixtures/job_config.json
@@ -3,7 +3,7 @@
     "_id": "test-job-config-to-get",
     "name": "test-job-config-name-to-get",
     "type": "rundeck",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
@@ -12,7 +12,7 @@
     "_id": "test-job-config-to-update",
     "name": "test-job-config-name-to-update",
     "type": "rundeck",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
@@ -21,7 +21,7 @@
     "_id": "test-job-config-to-delete",
     "name": "test-job-config-name-to-delete",
     "type": "rundeck",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
@@ -30,7 +30,7 @@
     "_id": "test-job-config-to-check-linked",
     "name": "test-job-config-to-check-linked-name",
     "type": "rundeck",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
@@ -39,7 +39,7 @@
     "_id": "test-job-config-to-edit-job",
     "name": "test-job-config-to-edit-job-name",
     "type": "rundeck",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
@@ -48,7 +48,7 @@
     "_id": "test-job-config-to-edit-instruction",
     "name": "test-job-config-to-edit-instruction-name",
     "type": "rundeck",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
@@ -57,7 +57,7 @@
     "_id": "test-jobconfig-to-execution-get",
     "name": "test-jobconfig-to-execution-get-name",
     "type": "rundeck",
-    "author": "test-author",
+    "author": "test-user-author-1-id",
     "host": "http://example.com",
     "auth_token": "test-auth-token",
     "created": 1596550518
@@ -66,7 +66,7 @@
     "_id": "test-job-config-to-run-auto-instruction",
     "name": "test-job-config-to-run-auto-instruction-name",
     "type": "rundeck",
-    "author": "test-job-config-to-run-auto-instruction-author",
+    "author": "test-user-author-1-id",
     "host": "http://localhost:3000",
     "auth_token": "test-job-config-to-run-auto-instruction-token",
     "created": 1596550518
@@ -75,7 +75,7 @@
     "_id": "test-job-config-to-run-manual-job",
     "name": "test-job-config-to-run-manual-job-name",
     "type": "rundeck",
-    "author": "test-job-config-to-run-manual-job-author",
+    "author": "test-user-author-1-id",
     "host": "http://localhost:3000",
     "auth_token": "test-job-config-to-run-manual-job-token",
     "created": 1596550518
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 3b9dc428..0b1067dd 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -75,7 +75,10 @@ Feature: create a instruction
           "name": "test-instruction-to-create-1-pattern"
         }
       ],
-      "author": "test-instruction-to-create-1-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "description": "test-instruction-to-create-1-description",
       "enabled": true,
       "name": "test-instruction-to-create-1-name",
@@ -94,11 +97,11 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -109,11 +112,11 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -131,11 +134,11 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -160,11 +163,11 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -175,11 +178,11 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -211,7 +214,7 @@ Feature: create a instruction
         }
       ],
       "description": "test-instruction-to-create-2-description",
-      "author": "test-instruction-to-create-2-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "priority": 21,
       "timeout_after_execution": {
@@ -238,7 +241,10 @@ Feature: create a instruction
           "name": "test-instruction-to-create-2-pattern"
         }
       ],
-      "author": "test-instruction-to-create-2-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "description": "test-instruction-to-create-2-description",
       "enabled": true,
       "priority": 21,
@@ -252,11 +258,11 @@ Feature: create a instruction
           "stop_on_fail": true,
           "job": {
             "_id": "test-job-to-instruction-edit-1",
-            "author": "test-job-to-instruction-edit-1-author",
+            "author": "test-user-author-1-id",
             "config": {
               "_id": "test-job-config-to-edit-instruction",
               "auth_token": "test-auth-token",
-              "author": "test-author",
+              "author": "test-user-author-1-id",
               "host": "http://example.com",
               "name": "test-job-config-to-edit-instruction-name",
               "type": "rundeck"
@@ -269,11 +275,11 @@ Feature: create a instruction
         {
           "job": {
             "_id": "test-job-to-instruction-edit-2",
-            "author": "test-job-to-instruction-edit-2-author",
+            "author": "test-user-author-1-id",
             "config": {
               "_id": "test-job-config-to-edit-instruction",
               "auth_token": "test-auth-token",
-              "author": "test-author",
+              "author": "test-user-author-1-id",
               "host": "http://example.com",
               "name": "test-job-config-to-edit-instruction-name",
               "type": "rundeck"
@@ -360,7 +366,10 @@ Feature: create a instruction
           "name": "test-instruction-to-create-3-pattern"
         }
       ],
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "description": "test-instruction-to-create-3-description",
       "enabled": true,
       "name": "test-instruction-to-create-3-name",
@@ -379,11 +388,11 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -394,11 +403,11 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -416,11 +425,11 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -445,11 +454,11 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -460,11 +469,11 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
index 2edbf209..9913aaf5 100644
--- a/tests/functional/features/api/cat/instruction_create_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -15,7 +15,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-instruction-to-create-with-approval-1-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -73,7 +73,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-4-description",
-      "author": "test-instruction-to-create-with-approval-4-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -137,7 +137,10 @@ Feature: instruction approval creation
           ],
           "name": "test-instruction-to-create-with-approval-1-name",
           "description": "test-instruction-to-create-with-approval-1-description",
-          "author": "test-instruction-to-create-with-approval-1-author",
+          "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
           "enabled": true,
           "steps": [
             {
@@ -154,13 +157,13 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-job-to-instruction-edit-1-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -169,13 +172,13 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-job-to-instruction-edit-2-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -209,7 +212,10 @@ Feature: instruction approval creation
           ],
           "name": "test-instruction-to-create-with-approval-4-name",
           "description": "test-instruction-to-create-with-approval-4-description",
-          "author": "test-instruction-to-create-with-approval-4-author",
+          "author":  {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
           "enabled": true,
           "steps": [
             {
@@ -226,13 +232,13 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-job-to-instruction-edit-1-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -241,13 +247,13 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-job-to-instruction-edit-2-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -293,7 +299,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-2-description",
-      "author": "test-instruction-to-create-with-approval-2-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -347,7 +353,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-3-description",
-      "author": "test-instruction-to-create-with-approval-3-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -401,7 +407,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-5-description",
-      "author": "test-instruction-to-create-with-approval-5-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -455,7 +461,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-6-description",
-      "author": "test-instruction-to-create-with-approval-6-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -509,7 +515,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-7-description",
-      "author": "test-instruction-to-create-with-approval-7-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -564,7 +570,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-8-description",
-      "author": "test-instruction-to-create-with-approval-8-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -618,7 +624,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-9-description",
-      "author": "test-instruction-to-create-with-approval-9-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -682,7 +688,10 @@ Feature: instruction approval creation
         ],
         "name": "test-instruction-to-create-with-approval-9-name",
         "description": "test-instruction-to-create-with-approval-9-description",
-        "author": "test-instruction-to-create-with-approval-9-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -699,13 +708,13 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -714,13 +723,13 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-2",
                     "name": "test-job-to-instruction-edit-2-name",
-                    "author": "test-job-to-instruction-edit-2-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -759,7 +768,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-10-description",
-      "author": "test-instruction-to-create-with-approval-10-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -823,7 +832,10 @@ Feature: instruction approval creation
         ],
         "name": "test-instruction-to-create-with-approval-10-name",
         "description": "test-instruction-to-create-with-approval-10-description",
-        "author": "test-instruction-to-create-with-approval-10-author",
+        "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
         "enabled": true,
         "steps": [
           {
@@ -840,13 +852,13 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -855,13 +867,13 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-2",
                     "name": "test-job-to-instruction-edit-2-name",
-                    "author": "test-job-to-instruction-edit-2-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -900,7 +912,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-11-description",
-      "author": "test-instruction-to-create-with-approval-11-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -970,7 +982,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-12-description",
-      "author": "test-instruction-to-create-with-approval-12-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1045,7 +1057,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-13-description",
-      "author": "test-instruction-to-create-with-approval-13-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1108,7 +1120,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-13-name",
       "description": "test-instruction-to-create-with-approval-13-description",
-      "author": "test-instruction-to-create-with-approval-13-author",
+      "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
       "enabled": true,
       "steps": [
         {
@@ -1125,13 +1140,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1140,13 +1155,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1186,7 +1201,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-13-name",
       "description": "test-instruction-to-create-with-approval-13-description",
-      "author": "test-instruction-to-create-with-approval-13-author",
+      "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
       "enabled": true,
       "steps": [
         {
@@ -1203,13 +1221,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1218,13 +1236,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1264,7 +1282,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-13-name",
       "description": "test-instruction-to-create-with-approval-13-description",
-      "author": "test-instruction-to-create-with-approval-13-author",
+      "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
       "enabled": true,
       "steps": [
         {
@@ -1281,13 +1302,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1296,13 +1317,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1340,7 +1361,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-14-description",
-      "author": "test-instruction-to-create-with-approval-14-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1399,7 +1420,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-14-description-changed",
-      "author": "test-instruction-to-create-with-approval-14-author",
+      "author": "test-user-author-1-id",
       "enabled": false,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1444,7 +1465,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-14-name-changed",
       "description": "test-instruction-to-create-with-approval-14-description-changed",
-      "author": "test-instruction-to-create-with-approval-14-author",
+      "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
       "enabled": false,
       "steps": [
         {
@@ -1461,13 +1485,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1476,13 +1500,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1512,7 +1536,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-15-description",
-      "author": "test-instruction-to-create-with-approval-15-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1570,7 +1594,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-15-description",
-      "author": "test-instruction-to-create-with-approval-15-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1615,7 +1639,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-15-name",
       "description": "test-instruction-to-create-with-approval-15-description",
-      "author": "test-instruction-to-create-with-approval-15-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1632,13 +1659,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1647,13 +1674,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1691,7 +1718,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-17-description",
-      "author": "test-instruction-to-create-with-approval-17-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1750,7 +1777,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-17-description",
-      "author": "test-instruction-to-create-with-approval-17-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1795,7 +1822,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-17-name",
       "description": "test-instruction-to-create-with-approval-17-description",
-      "author": "test-instruction-to-create-with-approval-17-author",
+      "author":{
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1812,13 +1842,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1827,13 +1857,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1871,7 +1901,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-18-description",
-      "author": "test-instruction-to-create-with-approval-18-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1930,7 +1960,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-18-description",
-      "author": "test-instruction-to-create-with-approval-18-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1975,7 +2005,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-18-name",
       "description": "test-instruction-to-create-with-approval-18-description",
-      "author": "test-instruction-to-create-with-approval-18-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1992,13 +2025,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2007,13 +2040,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2051,7 +2084,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-19-description",
-      "author": "test-instruction-to-create-with-approval-19-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2110,7 +2143,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-19-description",
-      "author": "test-instruction-to-create-with-approval-19-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2155,7 +2188,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-19-name",
       "description": "test-instruction-to-create-with-approval-19-description",
-      "author": "test-instruction-to-create-with-approval-19-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -2172,13 +2208,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2187,13 +2223,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2231,7 +2267,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-20-description",
-      "author": "test-instruction-to-create-with-approval-20-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2290,7 +2326,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-20-description",
-      "author": "test-instruction-to-create-with-approval-20-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2335,7 +2371,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-20-name",
       "description": "test-instruction-to-create-with-approval-20-description",
-      "author": "test-instruction-to-create-with-approval-20-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -2352,13 +2391,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2367,13 +2406,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2411,7 +2450,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-21-description",
-      "author": "test-instruction-to-create-with-approval-21-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2470,7 +2509,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-21-description",
-      "author": "test-instruction-to-create-with-approval-21-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2515,7 +2554,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-21-name",
       "description": "test-instruction-to-create-with-approval-21-description",
-      "author": "test-instruction-to-create-with-approval-21-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -2532,13 +2574,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2547,13 +2589,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2591,7 +2633,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-22-description",
-      "author": "test-instruction-to-create-with-approval-22-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2650,7 +2692,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-22-description",
-      "author": "test-instruction-to-create-with-approval-22-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2691,7 +2733,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-22-name",
       "description": "test-instruction-to-create-with-approval-22-description",
-      "author": "test-instruction-to-create-with-approval-22-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -2708,13 +2753,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2723,13 +2768,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2759,7 +2804,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-5-description",
-      "author": "test-instruction-to-create-with-approval-5-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2856,7 +2901,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-5-name",
       "description": "test-instruction-to-create-with-approval-5-description",
-      "author": "test-instruction-to-create-with-approval-5-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -2873,13 +2921,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2888,13 +2936,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2924,7 +2972,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-6-description",
-      "author": "test-instruction-to-create-with-approval-6-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -3021,7 +3069,10 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-6-name",
       "description": "test-instruction-to-create-with-approval-6-description",
-      "author": "test-instruction-to-create-with-approval-6-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -3038,13 +3089,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -3053,13 +3104,13 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -3089,7 +3140,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-7-description",
-      "author": "test-instruction-to-create-with-approval-7-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -3187,7 +3238,7 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-8-description",
-      "author": "test-instruction-to-create-with-approval-8-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index 34fac644..96d07cc2 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -22,7 +22,10 @@ Feature: get a instruction
           ],
           "alarm_patterns": null,
           "description": "test-instruction-to-get-1-description",
-          "author": "test-instruction-to-get-1-author",
+          "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
           "enabled": true,
           "timeout_after_execution": {
             "seconds": 2,
@@ -40,13 +43,13 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-job-to-instruction-edit-1-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -55,13 +58,13 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-job-to-instruction-edit-2-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -77,13 +80,13 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-job-to-instruction-edit-2-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -106,13 +109,13 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-job-to-instruction-edit-2-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -121,13 +124,13 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-job-to-instruction-edit-1-author",
+                      "author": "test-user-author-1-id",
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-author",
+                        "author": "test-user-author-1-id",
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -156,20 +159,23 @@ Feature: get a instruction
           ],
           "alarm_patterns": null,
           "description": "test-instruction-to-get-2-description",
-          "author": "test-instruction-to-get-2-author",
+          "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
           "enabled": true,
           "jobs": [
             {
               "job": {
                 "_id": "test-job-to-instruction-edit-1",
                 "name": "test-job-to-instruction-edit-1-name",
-                "author": "test-job-to-instruction-edit-1-author",
+                "author": "test-user-author-1-id",
                 "config": {
                   "_id": "test-job-config-to-edit-instruction",
                   "name": "test-job-config-to-edit-instruction-name",
                   "type": "rundeck",
                   "host": "http://example.com",
-                  "author": "test-author",
+                  "author": "test-user-author-1-id",
                   "auth_token": "test-auth-token"
                 },
                 "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -181,13 +187,13 @@ Feature: get a instruction
               "job": {
                 "_id": "test-job-to-instruction-edit-2",
                 "name": "test-job-to-instruction-edit-2-name",
-                "author": "test-job-to-instruction-edit-2-author",
+                "author": "test-user-author-1-id",
                 "config": {
                   "_id": "test-job-config-to-edit-instruction",
                   "name": "test-job-config-to-edit-instruction-name",
                   "type": "rundeck",
                   "host": "http://example.com",
-                  "author": "test-author",
+                  "author": "test-user-author-1-id",
                   "auth_token": "test-auth-token"
                 },
                 "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -329,7 +335,10 @@ Feature: get a instruction
       ],
       "alarm_patterns": null,
       "description": "test-instruction-to-get-1-description",
-      "author": "test-instruction-to-get-1-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 2,
@@ -347,13 +356,13 @@ Feature: get a instruction
                  {
                    "_id": "test-job-to-instruction-edit-1",
                    "name": "test-job-to-instruction-edit-1-name",
-                   "author": "test-job-to-instruction-edit-1-author",
+                   "author": "test-user-author-1-id",
                    "config": {
                      "_id": "test-job-config-to-edit-instruction",
                      "name": "test-job-config-to-edit-instruction-name",
                      "type": "rundeck",
                      "host": "http://example.com",
-                     "author": "test-author",
+                     "author": "test-user-author-1-id",
                      "auth_token": "test-auth-token"
                    },
                    "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -362,13 +371,13 @@ Feature: get a instruction
                  {
                    "_id": "test-job-to-instruction-edit-2",
                    "name": "test-job-to-instruction-edit-2-name",
-                   "author": "test-job-to-instruction-edit-2-author",
+                   "author": "test-user-author-1-id",
                    "config": {
                      "_id": "test-job-config-to-edit-instruction",
                      "name": "test-job-config-to-edit-instruction-name",
                      "type": "rundeck",
                      "host": "http://example.com",
-                     "author": "test-author",
+                     "author": "test-user-author-1-id",
                      "auth_token": "test-auth-token"
                    },
                    "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -384,13 +393,13 @@ Feature: get a instruction
                  {
                    "_id": "test-job-to-instruction-edit-2",
                    "name": "test-job-to-instruction-edit-2-name",
-                   "author": "test-job-to-instruction-edit-2-author",
+                   "author": "test-user-author-1-id",
                    "config": {
                      "_id": "test-job-config-to-edit-instruction",
                      "name": "test-job-config-to-edit-instruction-name",
                      "type": "rundeck",
                      "host": "http://example.com",
-                     "author": "test-author",
+                     "author": "test-user-author-1-id",
                      "auth_token": "test-auth-token"
                    },
                    "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -413,13 +422,13 @@ Feature: get a instruction
                {
                  "_id": "test-job-to-instruction-edit-2",
                  "name": "test-job-to-instruction-edit-2-name",
-                 "author": "test-job-to-instruction-edit-2-author",
+                 "author": "test-user-author-1-id",
                  "config": {
                    "_id": "test-job-config-to-edit-instruction",
                    "name": "test-job-config-to-edit-instruction-name",
                    "type": "rundeck",
                    "host": "http://example.com",
-                   "author": "test-author",
+                   "author": "test-user-author-1-id",
                    "auth_token": "test-auth-token"
                  },
                  "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -428,13 +437,13 @@ Feature: get a instruction
                {
                  "_id": "test-job-to-instruction-edit-1",
                  "name": "test-job-to-instruction-edit-1-name",
-                 "author": "test-job-to-instruction-edit-1-author",
+                 "author": "test-user-author-1-id",
                  "config": {
                    "_id": "test-job-config-to-edit-instruction",
                    "name": "test-job-config-to-edit-instruction-name",
                    "type": "rundeck",
                    "host": "http://example.com",
-                   "author": "test-author",
+                   "author": "test-user-author-1-id",
                    "auth_token": "test-auth-token"
                  },
                  "job_id": "test-job-to-instruction-edit-1-external-id",
diff --git a/tests/functional/features/api/cat/instruction_update.feature b/tests/functional/features/api/cat/instruction_update.feature
index 89fc6b04..bb145bc8 100644
--- a/tests/functional/features/api/cat/instruction_update.feature
+++ b/tests/functional/features/api/cat/instruction_update.feature
@@ -59,7 +59,10 @@ Feature: Instruction update
         }
       ],
       "description": "test-instruction-to-update-description",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -77,7 +80,7 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -173,7 +176,10 @@ Feature: Instruction update
         }
       ],
       "description": "test-instruction-to-update-description-changed",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -191,7 +197,7 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -205,7 +211,7 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -226,7 +232,7 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -254,7 +260,7 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -268,7 +274,7 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -276,7 +282,7 @@ Feature: Instruction update
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "job_id": "test-job-to-instruction-edit-1-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
index 858f64ee..cf683892 100644
--- a/tests/functional/features/api/cat/instruction_update_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -13,7 +13,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-instruction-to-update-with-approval-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -77,7 +77,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-name",
         "description": "test-instruction-to-update-with-approval-description",
-        "author": "test-instruction-to-update-with-approval-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -107,7 +110,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-description",
-        "author": "test-instruction-to-update-with-approval-author-changed",
+        "author": {
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -121,7 +127,7 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -161,7 +167,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-2-description",
-      "author": "test-instruction-to-update-with-approval-2-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -225,7 +231,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-2-name",
         "description": "test-instruction-to-update-with-approval-2-description",
-        "author": "test-instruction-to-update-with-approval-2-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -255,7 +264,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-2-description",
-        "author": "test-instruction-to-update-with-approval-2-author-changed",
+        "author": {
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -269,7 +281,7 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -379,7 +391,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -432,7 +444,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -485,7 +497,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -538,7 +550,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -591,7 +603,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -645,7 +657,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-4-description",
-      "author": "test-instruction-to-update-with-approval-4-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -691,7 +703,10 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-4-description",
-      "author": "test-instruction-to-update-with-approval-4-author-changed",
+      "author": {
+        "_id": "test-user-alternate-author-1-id",
+        "username": "test-user-alternate-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -705,7 +720,7 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -750,7 +765,10 @@ Feature: instruction approval update
       ],
       "name": "test-instruction-to-update-with-approval-4-name",
       "description": "test-instruction-to-update-with-approval-4-description",
-      "author": "test-instruction-to-update-with-approval-4-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -784,7 +802,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-5-description",
-      "author": "test-instruction-to-update-with-approval-5-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -825,7 +843,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-5-description-changed",
-      "author": "test-instruction-to-update-with-approval-5-author",
+      "author": "test-user-author-1-id",
       "enabled": false,
       "timeout_after_execution": {
         "seconds": 10,
@@ -878,7 +896,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-5-name-changed",
         "description": "test-instruction-to-update-with-approval-5-description-changed",
-        "author": "test-instruction-to-update-with-approval-5-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": false,
         "steps": [
           {
@@ -908,7 +929,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-5-description",
-        "author": "test-instruction-to-update-with-approval-5-author-changed",
+        "author": {
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -922,7 +946,7 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -964,7 +988,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-6-description",
-      "author": "test-instruction-to-update-with-approval-6-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1004,7 +1028,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-6-description",
-      "author": "test-instruction-to-update-with-approval-6-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1060,7 +1084,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-6-name",
         "description": "test-instruction-to-update-with-approval-6-description",
-        "author": "test-instruction-to-update-with-approval-6-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1090,7 +1117,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-6-description",
-        "author": "test-instruction-to-update-with-approval-6-author-changed",
+        "author":{
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1104,13 +1134,13 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1147,7 +1177,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-7-description",
-      "author": "test-instruction-to-update-with-approval-7-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1188,7 +1218,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-7-description",
-      "author": "test-instruction-to-update-with-approval-7-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1245,7 +1275,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-7-name",
         "description": "test-instruction-to-update-with-approval-7-description",
-        "author": "test-instruction-to-update-with-approval-7-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1275,7 +1308,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-7-description",
-        "author": "test-instruction-to-update-with-approval-7-author-changed",
+        "author": {
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1289,13 +1325,13 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1330,7 +1366,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-7-description",
-      "author": "test-instruction-to-update-with-approval-7-author",
+      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1382,7 +1418,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-7-name",
         "description": "test-instruction-to-update-with-approval-7-description",
-        "author": "test-instruction-to-update-with-approval-7-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1412,7 +1451,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-7-description",
-        "author": "test-instruction-to-update-with-approval-7-author-changed",
+        "author": {
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1426,13 +1468,13 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1469,7 +1511,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
-      "author": "test-instruction-to-update-with-approval-8-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1510,7 +1552,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
-      "author": "test-instruction-to-update-with-approval-8-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1570,7 +1612,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-8-name",
         "description": "test-instruction-to-update-with-approval-8-description",
-        "author": "test-instruction-to-update-with-approval-8-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1600,7 +1645,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-8-description",
-        "author": "test-instruction-to-update-with-approval-8-author-changed",
+        "author": {
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1614,13 +1662,13 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1629,13 +1677,13 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-2",
                     "name": "test-job-to-instruction-edit-2-name",
-                    "author": "test-job-to-instruction-edit-2-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-author",
+                      "author": "test-user-author-1-id",
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1670,7 +1718,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
-      "author": "test-instruction-to-update-with-approval-8-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1715,7 +1763,10 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
-      "author": "test-instruction-to-update-with-approval-8-author-changed",
+      "author": {
+        "_id": "test-user-alternate-author-1-id",
+        "username": "test-user-alternate-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1729,13 +1780,13 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1744,13 +1795,13 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-job-to-instruction-edit-2-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-author",
+                    "author": "test-user-author-1-id",
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1778,7 +1829,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-9-description",
-      "author": "test-instruction-to-update-with-approval-9-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1860,7 +1911,10 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-9-description",
-      "author": "test-instruction-to-update-with-approval-9-author-changed",
+      "author": {
+        "_id": "test-user-alternate-author-1-id",
+        "username": "test-user-alternate-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1874,7 +1928,7 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-job-to-instruction-edit-1-author",
+                  "author": "test-user-author-1-id",
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -1907,7 +1961,7 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author-changed",
+      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1963,7 +2017,10 @@ Feature: instruction approval update
         ],
         "name": "test-instruction-to-update-with-approval-3-name",
         "description": "test-instruction-to-update-with-approval-3-description",
-        "author": "test-instruction-to-update-with-approval-3-author",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "username": "test-user-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -1993,7 +2050,10 @@ Feature: instruction approval update
           }
         ],
         "description": "test-instruction-to-update-with-approval-3-description",
-        "author": "test-instruction-to-update-with-approval-3-author-changed",
+        "author": {
+          "_id": "test-user-alternate-author-1-id",
+          "username": "test-user-alternate-author-1-username"
+        },
         "enabled": true,
         "steps": [
           {
@@ -2007,7 +2067,7 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-job-to-instruction-edit-1-author",
+                    "author": "test-user-author-1-id",
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -2052,7 +2112,10 @@ Feature: instruction approval update
       ],
       "name": "test-instruction-to-update-with-approval-3-name",
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
@@ -2113,7 +2176,10 @@ Feature: instruction approval update
       ],
       "name": "test-instruction-to-update-with-approval-3-name",
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-instruction-to-update-with-approval-3-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "enabled": true,
       "steps": [
         {
diff --git a/tests/functional/features/api/cat/job_config_create.feature b/tests/functional/features/api/cat/job_config_create.feature
index 431e253b..c1f8f9e5 100644
--- a/tests/functional/features/api/cat/job_config_create.feature
+++ b/tests/functional/features/api/cat/job_config_create.feature
@@ -45,7 +45,10 @@ Feature: create a job's config
       "name": "test-job-config-name",
       "host": "http://example.com",
       "type": "rundeck",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "auth_token": "test-auth-token"
     }
     """
diff --git a/tests/functional/features/api/cat/job_config_get.feature b/tests/functional/features/api/cat/job_config_get.feature
index 6e5b34a5..705d931a 100644
--- a/tests/functional/features/api/cat/job_config_get.feature
+++ b/tests/functional/features/api/cat/job_config_get.feature
@@ -16,7 +16,10 @@ Feature: get a job's config
           "host": "http://example.com",
           "name": "test-job-config-name-to-get",
           "type": "rundeck",
-          "author": "test-author"
+          "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          }
         }
       ],
       "meta": {
@@ -72,7 +75,10 @@ Feature: get a job's config
       "host": "http://example.com",
       "name": "test-job-config-name-to-get",
       "type": "rundeck",
-      "author": "test-author"
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      }
     }
     """
 
diff --git a/tests/functional/features/api/cat/job_config_update.feature b/tests/functional/features/api/cat/job_config_update.feature
index 399ff868..51b852e7 100644
--- a/tests/functional/features/api/cat/job_config_update.feature
+++ b/tests/functional/features/api/cat/job_config_update.feature
@@ -42,7 +42,10 @@ Feature: Job's config update
     {
       "_id": "test-job-config-to-update",
       "auth_token": "new token",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "host": "http://example-2.com",
       "name": "test-job-config-name-to-update-new",
       "type": "rundeck"
@@ -100,7 +103,10 @@ Feature: Job's config update
     {
       "_id": "test-job-config-to-update",
       "auth_token": "new token",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "host": "http://example-2.com",
       "name": "test-job-config-name-to-update-new",
       "type": "rundeck"
diff --git a/tests/functional/features/api/cat/job_create.feature b/tests/functional/features/api/cat/job_create.feature
index 29f7af1c..374f85a0 100644
--- a/tests/functional/features/api/cat/job_create.feature
+++ b/tests/functional/features/api/cat/job_create.feature
@@ -43,7 +43,10 @@ Feature: create a job
     """
     {
       "name": "test-job-name",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "auth_token": "test-auth-token",
@@ -74,6 +77,10 @@ Feature: create a job
     """
     {
       "name": "test-job-name-2",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "auth_token": "test-auth-token",
diff --git a/tests/functional/features/api/cat/job_get.feature b/tests/functional/features/api/cat/job_get.feature
index a1a50df7..adde965c 100644
--- a/tests/functional/features/api/cat/job_get.feature
+++ b/tests/functional/features/api/cat/job_get.feature
@@ -13,13 +13,16 @@ Feature: get a job
         {
           "_id": "test-job-to-get",
           "name": "test-job-name-to-get",
-          "author": "test-author",
+          "author": {
+            "_id": "test-user-author-1-id",
+            "username": "test-user-author-1-username"
+          },
           "config": {
             "_id": "test-job-config-to-edit-job",
             "name": "test-job-config-to-edit-job-name",
             "type": "rundeck",
             "host": "http://example.com",
-            "author": "test-author",
+            "author": "test-user-author-1-id",
             "auth_token": "test-auth-token"
           },
           "job_id": "test-job-id",
@@ -76,13 +79,16 @@ Feature: get a job
     {
       "_id": "test-job-to-get",
       "name": "test-job-name-to-get",
-      "author": "test-author",
+      "author": {
+        "_id": "test-user-author-1-id",
+        "username": "test-user-author-1-username"
+      },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
-        "author": "test-author",
+        "author": "test-user-author-1-id",
         "auth_token": "test-auth-token"
       },
       "job_id": "test-job-id",
diff --git a/tests/functional/features/api/cat/job_update.feature b/tests/functional/features/api/cat/job_update.feature
index ce1b94fd..1177c25a 100644
--- a/tests/functional/features/api/cat/job_update.feature
+++ b/tests/functional/features/api/cat/job_update.feature
@@ -42,13 +42,16 @@ Feature: Job update
     {
       "_id": "test-job-to-update",
       "name": "test-job-name-to-update",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
-        "author": "test-author",
+        "author": "test-user-author-1-id",
         "auth_token": "test-auth-token"
       },
       "job_id": "test-job-id",
@@ -73,13 +76,16 @@ Feature: Job update
     {
       "_id": "test-job-to-update",
       "name": "test-job-name-to-update",
-      "author": "root",
+      "author": {
+        "_id": "root",
+        "username": "root"
+      },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
-        "author": "test-author",
+        "author": "test-user-author-1-id",
         "auth_token": "test-auth-token"
       },
       "job_id": "test-job-id",
-- 
2.25.1


From 433aa9eaa8b762ca914c264b094a036021b7eecd Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 14 May 2021 12:46:06 +0700
Subject: [PATCH 43/66] Feature #3043 : Update functional tests

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../000_migrate_instructions.js               |  3 ---
 fixtures/instruction.json                     |  4 +++
 fixtures/instruction_rating.json              |  8 ++++++
 .../features/api/cat/instruction_rate.feature | 26 +++----------------
 .../api/cat/instructionstats_get.feature      | 12 ++++++---
 5 files changed, 23 insertions(+), 30 deletions(-)

diff --git a/database/migrations/remediationnextstep/000_migrate_instructions.js b/database/migrations/remediationnextstep/000_migrate_instructions.js
index ddcb2641..eaad1032 100644
--- a/database/migrations/remediationnextstep/000_migrate_instructions.js
+++ b/database/migrations/remediationnextstep/000_migrate_instructions.js
@@ -19,9 +19,6 @@
                 set["mod_history"] = [doc.created, doc.last_modified];
             }
         }
-        if (doc.avg_complete_time) {
-            unset["avg_complete_time"] = "";
-        }
         if (doc.last_executed_by) {
             unset["last_executed_by"] = "";
         }
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 91f3de10..a4b86d89 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -2265,6 +2265,7 @@
       "unit": "s"
     },
     "last_executed_on": 1618280210,
+    "avg_complete_time": 316,
     "last_modified": 1596712203,
     "mod_history": [
       1596712203
@@ -2298,6 +2299,7 @@
     },
     "priority": 12,
     "last_executed_on": 1618280210,
+    "avg_complete_time": 316,
     "last_modified": 1596712203,
     "mod_history": [
       1596712203
@@ -2379,6 +2381,7 @@
       "unit": "s"
     },
     "last_executed_on": 1618280210,
+    "avg_complete_time": 316,
     "last_modified": 1596712203,
     "mod_history": [
       1596712203
@@ -2412,6 +2415,7 @@
     },
     "priority": 12,
     "last_executed_on": 1618280210,
+    "avg_complete_time": 316,
     "last_modified": 1596712203,
     "mod_history": [
       1596712203
diff --git a/fixtures/instruction_rating.json b/fixtures/instruction_rating.json
index bf5331aa..89793d61 100644
--- a/fixtures/instruction_rating.json
+++ b/fixtures/instruction_rating.json
@@ -28,5 +28,13 @@
     "rating": 5,
     "comment": "test-instruction-to-check-rate-notify-rating-2-comment",
     "created": 2000000000
+  },
+  {
+    "_id": "test-rating-to-instruction-stats-get-1",
+    "instruction": "test-instruction-to-stats-get-1",
+    "user": "root",
+    "rating": 3.2,
+    "comment": "test-rating-to-instruction-stats-get-1",
+    "created": 1618280210
   }
 ]
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instruction_rate.feature b/tests/functional/features/api/cat/instruction_rate.feature
index 1981ce25..7e58306d 100644
--- a/tests/functional/features/api/cat/instruction_rate.feature
+++ b/tests/functional/features/api/cat/instruction_rate.feature
@@ -150,35 +150,15 @@ Feature: rate an instruction
     When I am authenticated with username "manageruser" and password "test"
     When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
     Then the response code should be 200
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "data": [
         {
           "_id": "test-instruction-to-check-rate-notify",
-          "alarm_states": {
-            "critical": {
-              "from": 0,
-              "to": 0
-            },
-            "major": {
-              "from": 0,
-              "to": 0
-            },
-            "minor": {
-              "from": 0,
-              "to": 0
-            }
-          },
-          "avg_complete_time": 0,
-          "created": 1000000019,
-          "execution_count": 2,
-          "last_executed_on": 1596712203,
-          "last_modified": 1596712203,
-          "name": "test-instruction-to-check-rate-notify-name",
-          "ok_alarm_states": 0,
           "rating": 5,
-          "type": 0
+          "rate_notify": false,
+          "ratable": false
         }
       ],
       "meta": {
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 78f93f22..28f306fc 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -6,7 +6,7 @@ Feature: get instruction statistics
     When I am admin
     When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1615342850&to=1618280210
     Then the response code should be 200
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "data": [
@@ -34,6 +34,7 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
+          "ratable": true,
           "type": 0
         },
         {
@@ -60,6 +61,7 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
+          "ratable": true,
           "type": 1
         }
       ],
@@ -76,7 +78,7 @@ Feature: get instruction statistics
     When I am admin
     When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1618279610&to=1618280210
     Then the response code should be 200
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "data": [
@@ -97,13 +99,14 @@ Feature: get instruction statistics
             }
           },
           "ok_alarm_states": 0,
-          "avg_complete_time": 400,
+          "avg_complete_time": 316,
           "execution_count": 1,
           "last_executed_on": 1618280210,
           "last_modified": 1596712203,
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
+          "ratable": true,
           "type": 0
         },
         {
@@ -123,13 +126,14 @@ Feature: get instruction statistics
             }
           },
           "ok_alarm_states": 0,
-          "avg_complete_time": 400,
+          "avg_complete_time": 316,
           "execution_count": 1,
           "last_executed_on": 1618280210,
           "last_modified": 1596712203,
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
+          "ratable": true,
           "type": 1
         }
       ],
-- 
2.25.1


From 2a6d6ee9743e1eafdca68ac3362860e81c3a6b1d Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Mon, 17 May 2021 11:10:59 +0700
Subject: [PATCH 44/66] Feature #3043 : Update functional tests

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/default_rights.json                  |  29 +++
 fixtures/instruction.json                     |  44 ----
 fixtures/instruction_execution.json           |  48 ++--
 .../features/api/cat/instruction_rate.feature | 245 +++++++++---------
 .../api/cat/instructionstats_get.feature      |   4 -
 .../features/api/core/notification.feature    |  12 +-
 6 files changed, 180 insertions(+), 202 deletions(-)

diff --git a/fixtures/default_rights.json b/fixtures/default_rights.json
index c48a622d..a2937b8b 100644
--- a/fixtures/default_rights.json
+++ b/fixtures/default_rights.json
@@ -993,5 +993,34 @@
     "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
     "authkey": "b31c48c7-3ccc-4ad3-bc1e-0e12bdd64caa",
     "enable": true
+  },
+  {
+    "_id": "test-role-to-rate-instruction",
+    "crecord_type": "role",
+    "crecord_name": "test-role-to-rate-instruction",
+    "rights": {
+      "api_execution": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
+      "api_notification": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
+      "api_instruction": {
+        "checksum": 4,
+        "crecord_type": "right"
+      }
+    }
+  },
+  {
+    "_id": "test-user-to-rate-instruction",
+    "crecord_type": "user",
+    "crecord_name": "test-user-to-rate-instruction",
+    "role": "test-role-to-rate-instruction",
+    "mail": "test-user-to-rate-instruction@canopsis.net",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982ucms3",
+    "authkey": "2be1d0ee-5e9e-8mdn-9d80-e857e50f4191",
+    "enable": true
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index a4b86d89..e13a4fe1 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -1594,50 +1594,6 @@
     ],
     "created": 1000000019
   },
-  {
-    "_id": "test-instruction-to-check-rate-notify",
-    "type": 0,
-    "name": "test-instruction-to-check-rate-notify-name",
-    "alarm_patterns": [
-      {
-        "_id": "test-alarm-it-does-not-matter"
-      }
-    ],
-    "description": "test-instruction-to-check-rate-notify-description",
-    "author": "test-user-author-1-id",
-    "enabled": true,
-    "steps": [
-      {
-        "_id": "test-instruction-to-check-rate-notify-step-1",
-        "name": "test-instruction-to-check-rate-notify-step-1-name",
-        "operations": [
-          {
-            "_id": "test-instruction-to-check-rate-notify-step-1-operation-1",
-            "name": "test-instruction-to-check-rate-notify-step-1-operation-1-name",
-            "time_to_complete": {
-              "seconds": 1,
-              "unit": "s"
-            },
-            "description": "test-instruction-to-check-rate-notify-step-1-operation-1-description",
-            "jobs": []
-          }
-        ],
-        "stop_on_fail": true,
-        "endpoint": "test-instruction-to-check-rate-notify-step-1-endpoint"
-      }
-    ],
-    "timeout_after_execution": {
-      "seconds": 2,
-      "unit": "s"
-    },
-    "last_executed_on": 1596712203,
-    "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
-    "created": 1000000019,
-    "rating": 5.0
-  },
   {
     "_id": "test-instruction-with-entity-pattern-1",
     "type": 0,
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index a9e64190..804e9b30 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -365,77 +365,61 @@
     "alarm_state": 3
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-1",
+    "_id": "test-execution-to-instruction-rate-1",
     "alarm": "it-does-not-matter",
-    "user": "root",
+    "user": "test-user-to-rate-instruction",
     "instruction": "test-instruction-to-rate-1",
-    "status": 0,
+    "status": 2,
     "completed_at": 1100000000
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-2-root",
+    "_id": "test-execution-to-instruction-rate-2-1",
     "alarm": "it-does-not-matter",
-    "user": "root",
+    "user": "test-user-to-rate-instruction",
     "instruction": "test-instruction-to-rate-2",
     "status": 2,
     "completed_at": 1100000000
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-2-manager",
+    "_id": "test-execution-to-instruction-rate-2-2",
     "alarm": "it-does-not-matter",
-    "user": "manageruser",
+    "user": "test-user-to-rate-instruction",
     "instruction": "test-instruction-to-rate-2",
     "status": 2,
     "completed_at": 1100000000
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-3-root",
+    "_id": "test-execution-to-instruction-rate-2-3",
     "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-3",
-    "status": 2,
+    "user": "test-user-to-rate-instruction",
+    "instruction": "test-instruction-to-rate-2",
+    "status": 4,
     "completed_at": 1100000000
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-3-manager",
+    "_id": "test-execution-to-instruction-rate-3",
     "alarm": "it-does-not-matter",
-    "user": "manageruser",
+    "user": "test-user-to-rate-instruction",
     "instruction": "test-instruction-to-rate-3",
     "status": 2,
     "completed_at": 1100000000
   },
   {
-    "_id": "execution-for-test-instruction-to-rate-4",
+    "_id": "test-execution-to-instruction-rate-4",
     "alarm": "it-does-not-matter",
     "user": "root",
     "instruction": "test-instruction-to-rate-4",
-    "status": 2,
-    "completed_at": 1100000000
-  },
-  {
-    "_id": "execution-for-test-instruction-to-rate-5",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-5",
     "status": 4,
     "completed_at": 1100000000
   },
   {
-    "_id": "execution-for-test-instruction-to-check-rate-notify-1",
+    "_id": "test-execution-to-instruction-rate-5",
     "alarm": "it-does-not-matter",
     "user": "root",
-    "instruction": "test-instruction-to-check-rate-notify",
+    "instruction": "test-instruction-to-rate-5",
     "status": 2,
     "completed_at": 1100000000
   },
-  {
-    "_id": "execution-for-test-instruction-to-check-rate-notify-2",
-    "alarm": "it-does-not-matter",
-    "user": "manageruser",
-    "instruction": "test-instruction-to-check-rate-notify",
-    "status": 2,
-    "completed_at": 2000000000
-  },
   {
     "_id": "test-auto-instruction-execution-to-stats-executions-get-1",
     "instruction_modified_on": 1596712203,
diff --git a/tests/functional/features/api/cat/instruction_rate.feature b/tests/functional/features/api/cat/instruction_rate.feature
index 7e58306d..51295c73 100644
--- a/tests/functional/features/api/cat/instruction_rate.feature
+++ b/tests/functional/features/api/cat/instruction_rate.feature
@@ -2,18 +2,36 @@ Feature: rate an instruction
   I need to be able to rate an instruction
   Only admin should be able to rate an instruction
 
-  Scenario: Rate an instruction as unauthorized
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate:
+  Scenario: given rate request and admin user should rate instruction which was executed by someone else
+    When I am admin
+    When I do PUT /api/v4/notification:
     """
     {
-      "rating": 4.5,
-      "comment": "test"
+      "instruction": {
+        "rate": true,
+        "rate_frequency": {
+          "seconds": 1,
+          "unit": "s"
+        }
+      }
+    }
+    """
+    Then the response code should be 200
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-1&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-rate-1",
+          "rating": 0,
+          "ratable": true,
+          "rate_notify": false
+        }
+      ]
     }
     """
-    Then the response code should be 401
-
-  Scenario: Rate an instruction without permissions
-    When I am noperms
     When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate:
     """
     {
@@ -21,10 +39,7 @@ Feature: rate an instruction
       "comment": "test"
     }
     """
-    Then the response code should be 403
-
-  Scenario: Rate an instruction, but without completed execution
-    When I am admin
+    Then the response code should be 204
     When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate:
     """
     {
@@ -36,16 +51,59 @@ Feature: rate an instruction
     Then the response body should be:
     """
     {
-      "error": "instruction wasn't completed by the user"
+       "error": "user has already rated today"
+    }
+    """
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-1&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-rate-1",
+          "rating": 4.5,
+          "ratable": false,
+          "rate_notify": false
+        }
+      ]
     }
     """
 
-  Scenario: Rate completed instruction with success, can rate only once per day, rating should be calculated properly
-    When I am admin
+  Scenario: given rate request and user without instruction create permissions should rate instruction which was executed by them
+    When I am test-role-to-rate-instruction
+    When I do PUT /api/v4/notification:
+    """
+    {
+      "instruction": {
+        "rate": true,
+        "rate_frequency": {
+          "seconds": 1,
+          "unit": "s"
+        }
+      }
+    }
+    """
+    Then the response code should be 200
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-2&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-rate-2",
+          "rating": 0,
+          "ratable": true,
+          "rate_notify": true
+        }
+      ]
+    }
+    """
     When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-2/rate:
     """
     {
-      "rating": 1,
+      "rating": 4.5,
       "comment": "test"
     }
     """
@@ -53,7 +111,7 @@ Feature: rate an instruction
     When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-2/rate:
     """
     {
-      "rating": 3,
+      "rating": 4.5,
       "comment": "test"
     }
     """
@@ -64,158 +122,113 @@ Feature: rate an instruction
        "error": "user has already rated today"
     }
     """
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-3/rate:
-    """
-    {
-      "rating": 3,
-      "comment": "test"
-    }
-    """
-    Then the response code should be 204
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-4/rate:
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-2&from=1000000000&to=2000000000
+    Then the response code should be 200
+    Then the response body should contain:
     """
     {
-      "rating": 5,
-      "comment": "test"
+      "data": [
+        {
+          "_id": "test-instruction-to-rate-2",
+          "rating": 4.5,
+          "ratable": false,
+          "rate_notify": false
+        }
+      ]
     }
     """
-    Then the response code should be 204
-    When I am authenticated with username "manageruser" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-2/rate:
+
+  Scenario: given rate request should be calculated rate properly
+    When I am admin
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-3/rate:
     """
     {
-      "rating": 2,
+      "rating": 1.5,
       "comment": "test"
     }
     """
     Then the response code should be 204
+    When I am test-role-to-rate-instruction
     When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-3/rate:
     """
     {
-      "rating": 5,
+      "rating": 3,
       "comment": "test"
     }
     """
     Then the response code should be 204
-    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate&from=1000000000&to=2000000000
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-3&from=1000000000&to=2000000000
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "data": [
-        {
-          "_id": "test-instruction-to-rate-2",
-          "rating": 1.5
-        },
         {
           "_id": "test-instruction-to-rate-3",
-          "rating": 4
-        },
-        {
-          "_id": "test-instruction-to-rate-4",
-          "rating": 5
+          "rating": 2.2
         }
       ],
       "meta": {
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 3
+        "total_count": 1
       }
     }
     """
 
-  Scenario: Should be notified if the user rated long ago, not notified otherwise
-    When I am authenticated with username "root" and password "test"
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
-    Then the response code should be 200
-    Then the response body should contain:
+  Scenario: given rate request and admin user should not rate instruction without completed execution
+    When I am admin
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-4/rate:
     """
     {
-      "data": [
-        {
-          "_id": "test-instruction-to-check-rate-notify",
-          "rate_notify": true,
-          "rating": 5
-        }
-      ],
-      "meta": {
-        "page": 1,
-        "page_count": 1,
-        "per_page": 10,
-        "total_count": 1
-      }
+      "rating": 4.5,
+      "comment": "test"
+    }
+    """
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+      "error": "instruction wasn't completed"
     }
     """
-    When I am authenticated with username "manageruser" and password "test"
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
+
+  Scenario: given rate request and user without create permissions should not rate instruction without completed execution by them
+    When I am test-role-to-rate-instruction
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-5&from=1000000000&to=2000000000
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "data": [
         {
-          "_id": "test-instruction-to-check-rate-notify",
-          "rating": 5,
-          "rate_notify": false,
+          "_id": "test-instruction-to-rate-5",
           "ratable": false
         }
-      ],
-      "meta": {
-        "page": 1,
-        "page_count": 1,
-        "per_page": 10,
-        "total_count": 1
-      }
+      ]
     }
     """
-    When I am authenticated with username "root" and password "test"
-    When I do PUT /api/v4/cat/instructions/test-instruction-to-check-rate-notify/rate:
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-5/rate:
     """
     {
-      "rating": 2,
+      "rating": 4.5,
       "comment": "test"
     }
     """
-    Then the response code should be 204
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-check-rate-notify&from=1000000000&to=2000000000
-    Then the response code should be 200
-    Then the response body should contain:
+    Then the response code should be 400
+    Then the response body should be:
     """
     {
-      "data": [
-        {
-          "_id": "test-instruction-to-check-rate-notify",
-          "alarm_states": {
-            "critical": {
-              "from": 0,
-              "to": 0
-            },
-            "major": {
-              "from": 0,
-              "to": 0
-            },
-            "minor": {
-              "from": 0,
-              "to": 0
-            }
-          },
-          "avg_complete_time": 0,
-          "created": 1000000019,
-          "execution_count": 2,
-          "last_executed_on": 1596712203,
-          "last_modified": 1596712203,
-          "name": "test-instruction-to-check-rate-notify-name",
-          "ok_alarm_states": 0,
-          "rating": 4,
-          "type": 0
-        }
-      ],
-      "meta": {
-        "page": 1,
-        "page_count": 1,
-        "per_page": 10,
-        "total_count": 1
-      }
+      "error": "instruction wasn't completed by the user"
     }
-    """
\ No newline at end of file
+    """
+
+  Scenario: given rate request and no auth user should not allow access
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate
+    Then the response code should be 401
+
+  Scenario: given rate request and auth user without permissions should not allow access
+    When I am noperms
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-1/rate
+    Then the response code should be 403
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 28f306fc..8e56f012 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -34,7 +34,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
-          "ratable": true,
           "type": 0
         },
         {
@@ -61,7 +60,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
-          "ratable": true,
           "type": 1
         }
       ],
@@ -106,7 +104,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
-          "ratable": true,
           "type": 0
         },
         {
@@ -133,7 +130,6 @@ Feature: get instruction statistics
           "created": 1596712203,
           "name": "test-instruction-to-stats-get-2-name",
           "rating": 0,
-          "ratable": true,
           "type": 1
         }
       ],
diff --git a/tests/functional/features/api/core/notification.feature b/tests/functional/features/api/core/notification.feature
index 12a10c42..452439a4 100644
--- a/tests/functional/features/api/core/notification.feature
+++ b/tests/functional/features/api/core/notification.feature
@@ -22,21 +22,20 @@ Feature: update notifications
 
   Scenario: GET and PUT ok
     When I am admin
-    When I do GET /api/v4/notification
-    Then the response code should be 200
-    Then the response body should be:
+    When I do PUT /api/v4/notification:
     """
     {
       "instruction": {
-        "rate": true,
+        "rate": false,
         "rate_frequency": {
-          "seconds": 604800,
+          "seconds": 1,
           "unit": "s"
         }
       }
     }
     """
-    When I do PUT /api/v4/notification:
+    Then the response code should be 200
+    Then the response body should be:
     """
     {
       "instruction": {
@@ -48,6 +47,7 @@ Feature: update notifications
       }
     }
     """
+    When I do GET /api/v4/notification
     Then the response code should be 200
     Then the response body should be:
     """
-- 
2.25.1


From 561053c990234536cce7c6dcd78442a4544e88cc Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 20 May 2021 11:22:01 +0700
Subject: [PATCH 45/66] Fix merge conflicts

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/canopsis/engine/engine_test.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/canopsis/engine/engine_test.go b/lib/canopsis/engine/engine_test.go
index 7095ab1a..47e7f600 100644
--- a/lib/canopsis/engine/engine_test.go
+++ b/lib/canopsis/engine/engine_test.go
@@ -22,7 +22,7 @@ func TestEngine_Run_GivenPeriodicalProcess_ShouldRunIt(t *testing.T) {
 	defer ctrl.Finish()
 	mockPeriodicalWorker := mock_engine.NewMockPeriodicalWorker(ctrl)
 	finish := (timesToRun+1)*interval - time.Millisecond
-	mockPeriodicalWorker.EXPECT().GetInterval().Return(interval)
+	mockPeriodicalWorker.EXPECT().GetInterval().Return(interval).Times(timesToRun + 1)
 	mockPeriodicalWorker.EXPECT().Work(gomock.Any()).Times(timesToRun)
 
 	engine := libengine.New(nil, nil, zerolog.Logger{})
-- 
2.25.1


From cef6acc20cede3f70f9bac1ad46999776c65374b Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 26 May 2021 18:14:58 +0700
Subject: [PATCH 46/66] Feature #3042 : Migrate user preferences for alarm list
 widget

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../005_migrate_userpreferences.js            | 50 +++++++++++++++++++
 1 file changed, 50 insertions(+)
 create mode 100644 database/migrations/remediationnextstep/005_migrate_userpreferences.js

diff --git a/database/migrations/remediationnextstep/005_migrate_userpreferences.js b/database/migrations/remediationnextstep/005_migrate_userpreferences.js
new file mode 100644
index 00000000..83aba37a
--- /dev/null
+++ b/database/migrations/remediationnextstep/005_migrate_userpreferences.js
@@ -0,0 +1,50 @@
+(function () {
+    var cursor = db.userpreferences.aggregate([
+        {
+            $match: {
+                widgetXtype: "AlarmsList",
+                "widget_preferences.remediationInstructionsFilters": {$ne: null}
+            }
+        },
+        {
+            $lookup: {
+                from: "instruction",
+                localField: "widget_preferences.remediationInstructionsFilters.instructions",
+                foreignField: "name",
+                as: "instructions",
+            }
+        }
+    ]);
+
+    while (cursor.hasNext()) {
+        var doc = cursor.next();
+        var instructionsByName = {};
+        doc.instructions.forEach(function (instruction) {
+            instructionsByName[instruction.name] = instruction;
+        });
+
+        var filters = [];
+        doc.widget_preferences.remediationInstructionsFilters.forEach(function (filter) {
+            var newInstructions = [];
+            filter.instructions.forEach(function (name) {
+                var instruction = instructionsByName[name];
+                if (instruction !== undefined) {
+                    newInstructions.push({
+                        _id: instruction._id,
+                        name: instruction.name,
+                        type: instruction.type,
+                    })
+                }
+            });
+
+            filter.instructions = newInstructions;
+            filters.push(filter);
+        });
+
+        db.userpreferences.updateOne({_id: doc._id}, {
+            $set: {
+                "widget_preferences.remediationInstructionsFilters": filters,
+            }
+        });
+    }
+})();
\ No newline at end of file
-- 
2.25.1


From 995310dddc777480e23b919e40847a2a207cfa6b Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 25 May 2021 09:05:20 +0700
Subject: [PATCH 47/66] Feature #3171 : Update functional tests

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/default_rights.json                  |  29 ++
 fixtures/instruction.json                     | 223 +++------------
 fixtures/instruction_execution.json           | 270 ++----------------
 fixtures/instruction_mod_stats.json           | 189 ++++++++++++
 fixtures/instruction_week_stats.json          |  54 ++++
 lib/bdd/ApiClient.go                          |   4 +
 lib/mongo/mongo.go                            |  18 +-
 .../features/api/cat/instruction_rate.feature |  19 +-
 .../cat/instructionexecution_cancel.feature   |   1 +
 .../api/cat/instructionstats_changes.feature  |  83 ++++++
 .../cat/instructionstats_executions.feature   |  75 ++++-
 .../api/cat/instructionstats_get.feature      | 196 +++++++++----
 .../api/cat/instructionstats_summary.feature  |  66 ++++-
 .../autoinstructionexecution_start.feature    |   2 +-
 .../instructionexecution_stats.feature        | 194 ++++++++++---
 15 files changed, 875 insertions(+), 548 deletions(-)
 create mode 100644 fixtures/instruction_mod_stats.json
 create mode 100644 fixtures/instruction_week_stats.json

diff --git a/fixtures/default_rights.json b/fixtures/default_rights.json
index a2937b8b..d7a90024 100644
--- a/fixtures/default_rights.json
+++ b/fixtures/default_rights.json
@@ -1022,5 +1022,34 @@
     "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982ucms3",
     "authkey": "2be1d0ee-5e9e-8mdn-9d80-e857e50f4191",
     "enable": true
+  },
+  {
+    "_id": "test-role-to-get-stats-instruction",
+    "crecord_type": "role",
+    "crecord_name": "test-role-to-get-stats-instruction",
+    "rights": {
+      "api_execution": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
+      "api_notification": {
+        "checksum": 1,
+        "crecord_type": "right"
+      },
+      "api_instruction": {
+        "checksum": 4,
+        "crecord_type": "right"
+      }
+    }
+  },
+  {
+    "_id": "test-user-to-get-stats-instruction",
+    "crecord_type": "user",
+    "crecord_name": "test-user-to-get-stats-instruction",
+    "role": "test-role-to-get-stats-instruction",
+    "mail": "test-user-to-get-stats-instruction@canopsis.net",
+    "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982dime3",
+    "authkey": "2be1d0ee-7fs6-8mdn-9d80-e857e50f4191",
+    "enable": true
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index e13a4fe1..37c7df94 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -73,9 +73,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -106,9 +103,6 @@
     "priority": 0,
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -149,9 +143,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000001
   },
   {
@@ -192,9 +183,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000002
   },
   {
@@ -660,9 +648,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000001
   },
   {
@@ -703,9 +688,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000001
   },
   {
@@ -748,9 +730,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000000
   },
   {
@@ -777,9 +756,6 @@
     "priority": 1,
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000000
   },
   {
@@ -848,9 +824,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000003
   },
   {
@@ -921,9 +894,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000004
   },
   {
@@ -992,9 +962,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000008
   },
   {
@@ -1063,9 +1030,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1134,9 +1098,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000011
   },
   {
@@ -1177,9 +1138,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000012
   },
   {
@@ -1260,9 +1218,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000013
   },
   {
@@ -1303,9 +1258,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000014
   },
   {
@@ -1346,9 +1298,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000015
   },
   {
@@ -1374,9 +1323,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000015
   },
   {
@@ -1417,9 +1363,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000016
   },
   {
@@ -1460,10 +1403,8 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
-    "created": 1000000017
+    "created": 1000000017,
+    "users": ["test-user-to-rate-instruction"]
   },
   {
     "_id": "test-instruction-to-rate-3",
@@ -1503,10 +1444,8 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
-    "created": 1000000018
+    "created": 1000000018,
+    "users": ["test-user-to-rate-instruction"]
   },
   {
     "_id": "test-instruction-to-rate-4",
@@ -1544,11 +1483,7 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000019
   },
   {
@@ -1589,9 +1524,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000019
   },
   {
@@ -1634,9 +1566,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000019
   },
   {
@@ -1679,9 +1608,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000019
   },
   {
@@ -1731,9 +1657,6 @@
     },
     "last_executed_on": 1596712203,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1000000019
   },
   {
@@ -1760,9 +1683,6 @@
       "pbh-type-for-instruction-with-pbehavior-2"
     ],
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1785,9 +1705,6 @@
       "unit": "s"
     },
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1814,9 +1731,6 @@
       "pbh-type-for-instruction-with-pbehavior-2"
     ],
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1843,9 +1757,6 @@
       "test2"
     ],
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1876,9 +1787,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1905,9 +1813,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1934,9 +1839,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1963,9 +1865,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -1992,9 +1891,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2021,9 +1917,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2053,9 +1946,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2082,9 +1972,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2111,9 +1998,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2140,9 +2024,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2220,13 +2101,11 @@
       "seconds": 2,
       "unit": "s"
     },
-    "last_executed_on": 1618280210,
+    "last_executed_on": 1618394399,
     "avg_complete_time": 316,
-    "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
-    "created": 1596712203
+    "last_modified": 1617555600,
+    "created": 1617555600,
+    "users": ["test-user-to-get-stats-instruction"]
   },
   {
     "_id": "test-instruction-to-stats-get-2",
@@ -2254,13 +2133,39 @@
       "unit": "s"
     },
     "priority": 12,
-    "last_executed_on": 1618280210,
+    "last_executed_on": 1618394399,
     "avg_complete_time": 316,
-    "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
+    "last_modified": 1617555600,
+    "created": 1617555600
+  },
+  {
+    "_id": "test-instruction-to-stats-get-3",
+    "type": 1,
+    "name": "test-instruction-to-stats-get-3-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
     ],
-    "created": 1596712203
+    "description": "test-instruction-to-stats-get-3-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "jobs": [
+      {
+        "job": "test-job-to-instruction-edit-1",
+        "stop_on_fail": true
+      },
+      {
+        "job": "test-job-to-instruction-edit-2"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 12,
+    "last_modified": 1617555600,
+    "created": 1617555600
   },
   {
     "_id": "test-instruction-to-stats-summary-get-1",
@@ -2338,11 +2243,9 @@
     },
     "last_executed_on": 1618280210,
     "avg_complete_time": 316,
-    "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
-    "created": 1596712203
+    "last_modified": 1596712303,
+    "created": 1596712203,
+    "users": ["test-user-to-get-stats-instruction"]
   },
   {
     "_id": "test-instruction-to-stats-summary-get-2",
@@ -2372,10 +2275,7 @@
     "priority": 12,
     "last_executed_on": 1618280210,
     "avg_complete_time": 316,
-    "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
+    "last_modified": 1596712303,
     "created": 1596712203
   },
   {
@@ -2405,9 +2305,6 @@
     },
     "priority": 13,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2486,12 +2383,8 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712003,
-      1596712103,
-      1596712203
-    ],
-    "created": 1596712203
+    "created": 1596712203,
+    "users": ["test-user-to-get-stats-instruction"]
   },
   {
     "_id": "test-instruction-to-stats-changes-get-2",
@@ -2521,11 +2414,6 @@
     "priority": 12,
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712003,
-      1596712103,
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2555,9 +2443,6 @@
     },
     "priority": 13,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2636,9 +2521,6 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2716,9 +2598,6 @@
       "unit": "s"
     },
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2749,9 +2628,6 @@
     "author": "test-user-author-1-id",
     "enabled": true,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   },
   {
@@ -2830,10 +2706,8 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
-    "created": 1596712203
+    "created": 1596712203,
+    "users": ["test-user-to-get-stats-instruction"]
   },
   {
     "_id": "test-instruction-to-stats-executions-get-2",
@@ -2911,9 +2785,6 @@
     },
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
-    "mod_history": [
-      1596712203
-    ],
     "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 804e9b30..40c51d18 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -35,7 +35,8 @@
           }
         ]
       }
-    ]
+    ],
+    "user": "root"
   },
   {
     "_id": "test-instruction-to-update-w-approval-should-cancel-execution-running-1",
@@ -52,7 +53,8 @@
           }
         ]
       }
-    ]
+    ],
+    "user": "root"
   },
   {
     "_id": "test-instruction-delete-execution-running",
@@ -114,309 +116,93 @@
   },
   {
     "_id": "test-instruction-execution-to-get-stats-1",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
+    "started_at": 1618221199,
+    "completed_at": 1618221599,
     "complete_time": 400,
     "alarm_state": 3,
     "result_alarm_state": 3
   },
   {
     "_id": "test-instruction-execution-to-get-stats-2",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
+    "started_at": 1618307649,
+    "completed_at": 1618307999,
     "complete_time": 350,
     "alarm_state": 2,
     "result_alarm_state": 3
   },
   {
     "_id": "test-instruction-execution-to-get-stats-3",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
+    "started_at": 1618394199,
+    "completed_at": 1618394399,
     "complete_time": 200,
     "alarm_state": 2,
     "result_alarm_state": 0
   },
   {
     "_id": "test-instruction-execution-to-get-stats-4",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-1",
     "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "alarm_state": 3
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-summary-get-1",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-1",
-    "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "complete_time": 400,
-    "alarm_state": 3,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-summary-get-2",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-1",
-    "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
-    "complete_time": 350,
-    "alarm_state": 2,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-summary-get-3",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-1",
-    "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
-    "complete_time": 200,
-    "alarm_state": 2,
-    "result_alarm_state": 0
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-summary-get-4",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-1",
-    "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "alarm_state": 3
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-changes-get-1",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-changes-get-1",
-    "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "complete_time": 400,
-    "alarm_state": 3,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-changes-get-2",
-    "instruction_modified_on": 1596712103,
-    "instruction": "test-instruction-to-stats-changes-get-1",
-    "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
-    "complete_time": 350,
-    "alarm_state": 2,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-changes-get-3",
-    "instruction_modified_on": 1596712103,
-    "instruction": "test-instruction-to-stats-changes-get-1",
-    "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
-    "complete_time": 200,
-    "alarm_state": 2,
-    "result_alarm_state": 0
-  },
-  {
-    "_id": "test-instruction-execution-to-stats-changes-get-4",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-changes-get-1",
-    "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
+    "started_at": 1618221599,
+    "completed_at": 1618221599,
     "alarm_state": 3
   },
   {
     "_id": "test-auto-instruction-execution-to-get-stats-1",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
+    "started_at": 1618221199,
+    "completed_at": 1618221599,
     "complete_time": 400,
     "alarm_state": 3,
     "result_alarm_state": 3
   },
   {
     "_id": "test-auto-instruction-execution-to-get-stats-2",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
+    "started_at": 1618307649,
+    "completed_at": 1618307999,
     "complete_time": 350,
     "alarm_state": 2,
     "result_alarm_state": 3
   },
   {
     "_id": "test-auto-instruction-execution-to-get-stats-3",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
+    "started_at": 1618394199,
+    "completed_at": 1618394399,
     "complete_time": 200,
     "alarm_state": 2,
     "result_alarm_state": 0
   },
   {
     "_id": "test-auto-instruction-execution-to-get-stats-4",
-    "instruction_modified_on": 1596712203,
+    "instruction_modified_on": 1617555600,
     "instruction": "test-instruction-to-stats-get-2",
     "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-1",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "complete_time": 400,
-    "alarm_state": 3,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-2",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
-    "complete_time": 350,
-    "alarm_state": 2,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-3",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
-    "complete_time": 200,
-    "alarm_state": 2,
-    "result_alarm_state": 0
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-summary-get-4",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-summary-get-2",
-    "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-1",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 2,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
-    "complete_time": 400,
-    "alarm_state": 3,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-2",
-    "instruction_modified_on": 1596712103,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 2,
-    "started_at": 1618021010,
-    "completed_at": 1618021250,
-    "complete_time": 350,
-    "alarm_state": 2,
-    "result_alarm_state": 3
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-3",
-    "instruction_modified_on": 1596712103,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 2,
-    "started_at": 1615342850,
-    "completed_at": 1615343450,
-    "complete_time": 200,
-    "alarm_state": 2,
-    "result_alarm_state": 0
-  },
-  {
-    "_id": "test-auto-instruction-execution-to-stats-changes-get-4",
-    "instruction_modified_on": 1596712203,
-    "instruction": "test-instruction-to-stats-changes-get-2",
-    "status": 4,
-    "started_at": 1618279610,
-    "completed_at": 1618280210,
+    "started_at": 1618221599,
+    "completed_at": 1618221599,
     "alarm_state": 3
   },
   {
     "_id": "test-execution-to-instruction-rate-1",
     "alarm": "it-does-not-matter",
     "user": "test-user-to-rate-instruction",
-    "instruction": "test-instruction-to-rate-1",
-    "status": 2,
-    "completed_at": 1100000000
-  },
-  {
-    "_id": "test-execution-to-instruction-rate-2-1",
-    "alarm": "it-does-not-matter",
-    "user": "test-user-to-rate-instruction",
-    "instruction": "test-instruction-to-rate-2",
-    "status": 2,
-    "completed_at": 1100000000
-  },
-  {
-    "_id": "test-execution-to-instruction-rate-2-2",
-    "alarm": "it-does-not-matter",
-    "user": "test-user-to-rate-instruction",
-    "instruction": "test-instruction-to-rate-2",
-    "status": 2,
-    "completed_at": 1100000000
-  },
-  {
-    "_id": "test-execution-to-instruction-rate-2-3",
-    "alarm": "it-does-not-matter",
-    "user": "test-user-to-rate-instruction",
     "instruction": "test-instruction-to-rate-2",
-    "status": 4,
-    "completed_at": 1100000000
-  },
-  {
-    "_id": "test-execution-to-instruction-rate-3",
-    "alarm": "it-does-not-matter",
-    "user": "test-user-to-rate-instruction",
-    "instruction": "test-instruction-to-rate-3",
-    "status": 2,
-    "completed_at": 1100000000
-  },
-  {
-    "_id": "test-execution-to-instruction-rate-4",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-4",
-    "status": 4,
-    "completed_at": 1100000000
-  },
-  {
-    "_id": "test-execution-to-instruction-rate-5",
-    "alarm": "it-does-not-matter",
-    "user": "root",
-    "instruction": "test-instruction-to-rate-5",
     "status": 2,
     "completed_at": 1100000000
   },
diff --git a/fixtures/instruction_mod_stats.json b/fixtures/instruction_mod_stats.json
new file mode 100644
index 00000000..4929daaa
--- /dev/null
+++ b/fixtures/instruction_mod_stats.json
@@ -0,0 +1,189 @@
+[
+  {
+    "_id": "test-mod-stats-to-stats-summary-get-1-1",
+    "instruction": "test-instruction-to-stats-summary-get-1",
+    "date": 1596712203,
+    "avg_complete_time": 400,
+    "execution_count": 6,
+    "init_critical": 3,
+    "init_major": 2,
+    "init_minor": 1,
+    "res_critical": 1,
+    "res_major": 2,
+    "res_minor": 3,
+    "res_ok": 0
+  },
+  {
+    "_id": "test-mod-stats-to-stats-summary-get-1-2",
+    "instruction": "test-instruction-to-stats-summary-get-1",
+    "date": 1596712303,
+    "avg_complete_time": 400,
+    "execution_count": 1,
+    "init_critical": 1,
+    "init_major": 0,
+    "init_minor": 0,
+    "res_critical": 0,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 1
+  },
+  {
+    "_id": "test-mod-stats-to-stats-summary-get-2-1",
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "date": 1596712203,
+    "avg_complete_time": 400,
+    "execution_count": 6,
+    "init_critical": 3,
+    "init_major": 2,
+    "init_minor": 1,
+    "res_critical": 1,
+    "res_major": 2,
+    "res_minor": 3,
+    "res_ok": 0
+  },
+  {
+    "_id": "test-mod-stats-to-stats-summary-get-2-2",
+    "instruction": "test-instruction-to-stats-summary-get-2",
+    "date": 1596712303,
+    "avg_complete_time": 400,
+    "execution_count": 1,
+    "init_critical": 1,
+    "init_major": 0,
+    "init_minor": 0,
+    "res_critical": 0,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 1
+  },
+  {
+    "_id": "test-mod-stats-to-stats-changes-get-1-1",
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "date": 1596712203,
+    "avg_complete_time": 400,
+    "execution_count": 1,
+    "init_critical": 1,
+    "init_major": 0,
+    "init_minor": 0,
+    "res_critical": 1,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 0
+  },
+  {
+    "_id": "test-mod-stats-to-stats-changes-get-1-2",
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "date": 1596712103,
+    "avg_complete_time": 275,
+    "execution_count": 2,
+    "init_critical": 0,
+    "init_major": 2,
+    "init_minor": 0,
+    "res_critical": 1,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 1
+  },
+  {
+    "_id": "test-mod-stats-to-stats-changes-get-1-3",
+    "instruction": "test-instruction-to-stats-changes-get-1",
+    "date": 1596712003
+  },
+  {
+    "_id": "test-mod-stats-to-stats-changes-get-2-1",
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "date": 1596712203,
+    "avg_complete_time": 400,
+    "execution_count": 1,
+    "init_critical": 1,
+    "init_major": 0,
+    "init_minor": 0,
+    "res_critical": 1,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 0
+  },
+  {
+    "_id": "test-mod-stats-to-stats-changes-get-2-2",
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "date": 1596712103,
+    "avg_complete_time": 275,
+    "execution_count": 2,
+    "init_critical": 0,
+    "init_major": 2,
+    "init_minor": 0,
+    "res_critical": 1,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 1
+  },
+  {
+    "_id": "test-mod-stats-to-stats-changes-get-2-3",
+    "instruction": "test-instruction-to-stats-changes-get-2",
+    "date": 1596712003
+  },
+  {
+    "_id": "test-mod-stats-to-stats-changes-get-3",
+    "instruction": "test-instruction-to-stats-changes-get-3",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-stats-executions-get-1",
+    "instruction": "test-instruction-to-stats-executions-get-1",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-stats-executions-get-2",
+    "instruction": "test-instruction-to-stats-executions-get-2",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-1-1",
+    "instruction": "test-instruction-to-run-auto-instruction-1-1",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-1-2",
+    "instruction": "test-instruction-to-run-auto-instruction-1-2",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-2-1",
+    "instruction": "test-instruction-to-run-auto-instruction-2-1",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-2-2",
+    "instruction": "test-instruction-to-run-auto-instruction-2-2",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-3-1",
+    "instruction": "test-instruction-to-run-auto-instruction-3-1",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-3-2",
+    "instruction": "test-instruction-to-run-auto-instruction-3-2",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-4-1",
+    "instruction": "test-instruction-to-run-auto-instruction-4-1",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-4-2",
+    "instruction": "test-instruction-to-run-auto-instruction-4-2",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-4-3",
+    "instruction": "test-instruction-to-run-auto-instruction-4-3",
+    "date": 1596712203
+  },
+  {
+    "_id": "test-mod-stats-to-run-auto-instruction-5",
+    "instruction": "test-instruction-to-run-auto-instruction-5",
+    "date": 1596712203
+  }
+]
diff --git a/fixtures/instruction_week_stats.json b/fixtures/instruction_week_stats.json
new file mode 100644
index 00000000..f602c3e9
--- /dev/null
+++ b/fixtures/instruction_week_stats.json
@@ -0,0 +1,54 @@
+[
+  {
+    "_id": "test-stats-to-get-stats-instruction-1",
+    "date": 1617555600,
+    "instruction": "test-instruction-to-stats-get-1",
+    "execution_count": 6,
+    "init_critical": 3,
+    "init_major": 2,
+    "init_minor": 1,
+    "res_critical": 1,
+    "res_major": 2,
+    "res_minor": 3,
+    "res_ok": 0
+  },
+  {
+    "_id": "test-stats-to-get-stats-instruction-2",
+    "date": 1616950800,
+    "instruction": "test-instruction-to-stats-get-1",
+    "execution_count": 1,
+    "init_critical": 1,
+    "init_major": 0,
+    "init_minor": 0,
+    "res_critical": 0,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 1
+  },
+  {
+    "_id": "test-stats-to-get-stats-instruction-3",
+    "date": 1617555600,
+    "instruction": "test-instruction-to-stats-get-2",
+    "execution_count": 6,
+    "init_critical": 3,
+    "init_major": 2,
+    "init_minor": 1,
+    "res_critical": 1,
+    "res_major": 2,
+    "res_minor": 3,
+    "res_ok": 0
+  },
+  {
+    "_id": "test-stats-to-get-stats-instruction-4",
+    "date": 1616950800,
+    "instruction": "test-instruction-to-stats-get-2",
+    "execution_count": 1,
+    "init_critical": 1,
+    "init_major": 0,
+    "init_minor": 0,
+    "res_critical": 0,
+    "res_major": 0,
+    "res_minor": 0,
+    "res_ok": 1
+  }
+]
\ No newline at end of file
diff --git a/lib/bdd/ApiClient.go b/lib/bdd/ApiClient.go
index 83c246d4..f43bb6ae 100644
--- a/lib/bdd/ApiClient.go
+++ b/lib/bdd/ApiClient.go
@@ -324,6 +324,8 @@ func (a *ApiClient) IAm(role string) error {
 	}
 
 	a.authApiKey = line.AuthApiKey
+	a.basicAuth = nil
+
 	return nil
 }
 
@@ -336,6 +338,7 @@ func (a *ApiClient) IAmAuthenticatedByBasicAuth(username, password string) error
 		username: username,
 		password: password,
 	}
+	a.authApiKey = ""
 
 	return nil
 }
@@ -351,6 +354,7 @@ func (a *ApiClient) IAmAuthenticatedByApiKey(apiKey string) error {
 	}
 
 	a.authApiKey = b.String()
+	a.basicAuth = nil
 
 	return nil
 }
diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index 0af95377..ce536290 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -29,12 +29,6 @@ const (
 	PbehaviorExceptionMongoCollection   = "pbehavior_exception"
 	ScenarioMongoCollection             = "action_scenario"
 	FileMongoCollection                 = "files"
-	InstructionMongoCollection          = "instruction"
-	InstructionExecutionMongoCollection = "instruction_execution"
-	InstructionRatingMongoCollection    = "instruction_rating"
-	JobConfigMongoCollection            = "job_config"
-	JobMongoCollection                  = "job"
-	JobHistoryMongoCollection           = "job_history"
 	MetaAlarmRulesMongoCollection       = "meta_alarm_rules"
 	HeartbeatMongoCollection            = "heartbeat"
 	IdleRuleMongoCollection             = "idle_rule"
@@ -54,6 +48,17 @@ const (
 	BroadcastMessageMongoCollection     = "broadcast_message"
 	AssociativeTableCollection          = "default_associativetable"
 	NotificationCollection              = "notification"
+
+	// Remediation collections
+	InstructionMongoCollection          = "instruction"
+	InstructionExecutionMongoCollection = "instruction_execution"
+	InstructionRatingMongoCollection    = "instruction_rating"
+	JobConfigMongoCollection            = "job_config"
+	JobMongoCollection                  = "job"
+	JobHistoryMongoCollection           = "job_history"
+	// Instruction statistics collections
+	InstructionWeekStatsMongoCollection = "instruction_week_stats"
+	InstructionModStatsMongoCollection  = "instruction_mod_stats"
 )
 
 type SingleResultHelper interface {
@@ -284,6 +289,7 @@ func (c *dbCollection) InsertOne(ctx context.Context, document interface{},
 	if err != nil {
 		return nil, err
 	}
+
 	return res.InsertedID, nil
 }
 
diff --git a/tests/functional/features/api/cat/instruction_rate.feature b/tests/functional/features/api/cat/instruction_rate.feature
index 51295c73..4e6acc3e 100644
--- a/tests/functional/features/api/cat/instruction_rate.feature
+++ b/tests/functional/features/api/cat/instruction_rate.feature
@@ -70,7 +70,7 @@ Feature: rate an instruction
     }
     """
 
-  Scenario: given rate request and user without instruction create permissions should rate instruction which was executed by them
+  Scenario: given rate request and user without instruction create permission should rate instruction which was executed by them
     When I am test-role-to-rate-instruction
     When I do PUT /api/v4/notification:
     """
@@ -194,19 +194,20 @@ Feature: rate an instruction
     }
     """
 
-  Scenario: given rate request and user without create permissions should not rate instruction without completed execution by them
+  Scenario: given rate request and user without instruction create permission should not rate instruction without completed execution by them
     When I am test-role-to-rate-instruction
     Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-5&from=1000000000&to=2000000000
     Then the response code should be 200
-    Then the response body should contain:
+    Then the response body should be:
     """
     {
-      "data": [
-        {
-          "_id": "test-instruction-to-rate-5",
-          "ratable": false
-        }
-      ]
+      "data": [],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 0
+      }
     }
     """
     When I do PUT /api/v4/cat/instructions/test-instruction-to-rate-5/rate:
diff --git a/tests/functional/features/api/cat/instructionexecution_cancel.feature b/tests/functional/features/api/cat/instructionexecution_cancel.feature
index 2905c780..6bf69a00 100644
--- a/tests/functional/features/api/cat/instructionexecution_cancel.feature
+++ b/tests/functional/features/api/cat/instructionexecution_cancel.feature
@@ -185,5 +185,6 @@ Feature: cancel a instruction execution
     }
     """
     Then the response code should be 200
+    Then I am admin
     When I do GET /api/v4/cat/executions/test-instruction-to-update-w-approval-should-cancel-execution-running-1
     Then the response code should be 410
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instructionstats_changes.feature b/tests/functional/features/api/cat/instructionstats_changes.feature
index dede7d86..716d2cc1 100644
--- a/tests/functional/features/api/cat/instructionstats_changes.feature
+++ b/tests/functional/features/api/cat/instructionstats_changes.feature
@@ -196,6 +196,89 @@ Feature: get instruction statistics
     }
     """
 
+  Scenario: given get request and and user without instruction create permission should return instruction stats
+    When I am test-role-to-get-stats-instruction
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-changes-get-1/changes
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 1,
+              "to": 1
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 400,
+          "execution_count": 1,
+          "modified_on": 1596712203
+        },
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 1
+            },
+            "major": {
+              "from": 2,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 1,
+          "avg_complete_time": 275,
+          "execution_count": 2,
+          "modified_on": 1596712103
+        },
+        {
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
+              "to": 0
+            },
+            "minor": {
+              "from": 0,
+              "to": 0
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 0,
+          "execution_count": 0,
+          "modified_on": 1596712003
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 3
+      }
+    }
+    """
+
+  Scenario: given get request and and user without instruction create permission should return not found error
+    When I am test-role-to-get-stats-instruction
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-changes-get-2/changes
+    Then the response code should be 404
+
   Scenario: given get request and no auth user should not allow access
     When I do GET /api/v4/cat/instruction-stats/notexist/changes
     Then the response code should be 401
diff --git a/tests/functional/features/api/cat/instructionstats_executions.feature b/tests/functional/features/api/cat/instructionstats_executions.feature
index 0a0dd828..3f4dbefa 100644
--- a/tests/functional/features/api/cat/instructionstats_executions.feature
+++ b/tests/functional/features/api/cat/instructionstats_executions.feature
@@ -29,10 +29,28 @@ Feature: get instruction statistics
       }
     }
     """
-
-  Scenario: given get request should return empty instruction stats
-    When I am admin
-    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-2/executions
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions?from=1600000000&to=1700000000
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "executed_on": 1618280210,
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-1"
+          }
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions?from=1500000000&to=1600000000
     Then the response code should be 200
     Then the response body should be:
     """
@@ -51,6 +69,53 @@ Feature: get instruction statistics
       }
     }
     """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions?from=1300000000&to=1400000000
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "data": [],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 0
+      }
+    }
+    """
+
+  Scenario: given get request and user without instruction create permission should return instruction stats
+    When I am test-role-to-get-stats-instruction
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "data": [
+        {
+          "executed_on": 1618280210,
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-1"
+          }
+        },
+        {
+          "executed_on": 1596712203,
+          "alarm": null
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+
+  Scenario: given get request and user without instruction create permission should return not found error
+    When I am test-role-to-get-stats-instruction
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-2/executions
+    Then the response code should be 404
 
   Scenario: given get request and no auth user should not allow access
     When I do GET /api/v4/cat/instruction-stats/notexist/executions
@@ -63,7 +128,7 @@ Feature: get instruction statistics
 
   Scenario: given get request with not exist id should return not found error
     When I am admin
-    When I do GET /api/v4/cat/instruction-stats/notexist/executions
+    When I do GET /api/v4/cat/instruction-stats/notexist/executions?from=1500000000&to=1700000000
     Then the response code should be 404
     Then the response body should be:
     """
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 8e56f012..b34313ef 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -2,9 +2,9 @@ Feature: get instruction statistics
   I need to be able to get instruction statistics
   Only admin should be able to get instruction statistics
 
-  Scenario: given get all request for all executions should return instruction stats
+  Scenario: given get all request and admin user should return instruction stats
     When I am admin
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1615342850&to=1618280210
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1617555600&to=1618246799
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -14,37 +14,65 @@ Feature: get instruction statistics
           "_id": "test-instruction-to-stats-get-1",
           "alarm_states": {
             "critical": {
-              "from": 1,
+              "from": 4,
               "to": 2
             },
             "major": {
               "from": 2,
-              "to": 0
+              "to": 2
             },
             "minor": {
-              "from": 0,
-              "to": 0
+              "from": 1,
+              "to": 3
             }
           },
-          "ok_alarm_states": 1,
+          "ok_alarm_states": 0,
           "avg_complete_time": 316,
-          "execution_count": 3,
-          "last_executed_on": 1618280210,
-          "last_modified": 1596712203,
-          "created": 1596712203,
+          "execution_count": 7,
+          "last_executed_on": 1618394399,
+          "last_modified": 1617555600,
+          "created": 1617555600,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
-          "type": 0
+          "type": 0,
+          "has_executions": true
         },
         {
           "_id": "test-instruction-to-stats-get-2",
           "alarm_states": {
             "critical": {
-              "from": 1,
+              "from": 4,
               "to": 2
             },
             "major": {
               "from": 2,
+              "to": 2
+            },
+            "minor": {
+              "from": 1,
+              "to": 3
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 316,
+          "execution_count": 7,
+          "last_executed_on": 1618394399,
+          "last_modified": 1617555600,
+          "created": 1617555600,
+          "name": "test-instruction-to-stats-get-2-name",
+          "rating": 0,
+          "type": 1,
+          "has_executions": true
+        },
+        {
+          "_id": "test-instruction-to-stats-get-3",
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
+            },
+            "major": {
+              "from": 0,
               "to": 0
             },
             "minor": {
@@ -52,29 +80,27 @@ Feature: get instruction statistics
               "to": 0
             }
           },
-          "ok_alarm_states": 1,
-          "avg_complete_time": 316,
-          "execution_count": 3,
-          "last_executed_on": 1618280210,
-          "last_modified": 1596712203,
-          "created": 1596712203,
-          "name": "test-instruction-to-stats-get-2-name",
+          "ok_alarm_states": 0,
+          "avg_complete_time": 0,
+          "execution_count": 0,
+          "last_executed_on": null,
+          "last_modified": 1617555600,
+          "created": 1617555600,
+          "name": "test-instruction-to-stats-get-3-name",
           "rating": 0,
-          "type": 1
+          "type": 1,
+          "has_executions": false
         }
       ],
       "meta": {
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 2
+        "total_count": 3
       }
     }
     """
-
-  Scenario: given get all request for one execution should return instruction stats
-    When I am admin
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1618279610&to=1618280210
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1616950800&to=1618419599
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -84,34 +110,62 @@ Feature: get instruction statistics
           "_id": "test-instruction-to-stats-get-1",
           "alarm_states": {
             "critical": {
-              "from": 1,
-              "to": 1
+              "from": 5,
+              "to": 3
             },
             "major": {
-              "from": 0,
-              "to": 0
+              "from": 4,
+              "to": 2
             },
             "minor": {
-              "from": 0,
-              "to": 0
+              "from": 1,
+              "to": 3
             }
           },
-          "ok_alarm_states": 0,
+          "ok_alarm_states": 2,
           "avg_complete_time": 316,
-          "execution_count": 1,
-          "last_executed_on": 1618280210,
-          "last_modified": 1596712203,
-          "created": 1596712203,
+          "execution_count": 10,
+          "last_executed_on": 1618394399,
+          "last_modified": 1617555600,
+          "created": 1617555600,
           "name": "test-instruction-to-stats-get-1-name",
           "rating": 3.2,
-          "type": 0
+          "type": 0,
+          "has_executions": true
         },
         {
           "_id": "test-instruction-to-stats-get-2",
           "alarm_states": {
             "critical": {
+              "from": 5,
+              "to": 3
+            },
+            "major": {
+              "from": 4,
+              "to": 2
+            },
+            "minor": {
               "from": 1,
-              "to": 1
+              "to": 3
+            }
+          },
+          "ok_alarm_states": 2,
+          "avg_complete_time": 316,
+          "execution_count": 10,
+          "last_executed_on": 1618394399,
+          "last_modified": 1617555600,
+          "created": 1617555600,
+          "name": "test-instruction-to-stats-get-2-name",
+          "rating": 0,
+          "type": 1,
+          "has_executions": true
+        },
+        {
+          "_id": "test-instruction-to-stats-get-3",
+          "alarm_states": {
+            "critical": {
+              "from": 0,
+              "to": 0
             },
             "major": {
               "from": 0,
@@ -123,50 +177,82 @@ Feature: get instruction statistics
             }
           },
           "ok_alarm_states": 0,
-          "avg_complete_time": 316,
-          "execution_count": 1,
-          "last_executed_on": 1618280210,
-          "last_modified": 1596712203,
-          "created": 1596712203,
-          "name": "test-instruction-to-stats-get-2-name",
+          "avg_complete_time": 0,
+          "execution_count": 0,
+          "last_executed_on": null,
+          "last_modified": 1617555600,
+          "created": 1617555600,
+          "name": "test-instruction-to-stats-get-3-name",
           "rating": 0,
-          "type": 1
+          "type": 1,
+          "has_executions": false
         }
       ],
       "meta": {
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 2
+        "total_count": 3
       }
     }
     """
 
-  Scenario: given get all request should return nothing
-    When I am admin
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1618279500&to=1618279600
+  Scenario: given get all request and user without instruction create permission should return instruction stats
+    When I am test-role-to-get-stats-instruction
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1617555600&to=1618246799
     Then the response code should be 200
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
-      "data": [],
+      "data": [
+        {
+          "_id": "test-instruction-to-stats-get-1",
+          "alarm_states": {
+            "critical": {
+              "from": 4,
+              "to": 2
+            },
+            "major": {
+              "from": 2,
+              "to": 2
+            },
+            "minor": {
+              "from": 1,
+              "to": 3
+            }
+          },
+          "ok_alarm_states": 0,
+          "avg_complete_time": 316,
+          "execution_count": 7,
+          "last_executed_on": 1618394399,
+          "last_modified": 1617555600,
+          "created": 1617555600,
+          "name": "test-instruction-to-stats-get-1-name",
+          "rating": 3.2,
+          "type": 0,
+          "has_executions": true
+        }
+      ],
       "meta": {
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 0
+        "total_count": 1
       }
     }
     """
 
   Scenario: given sort all request should return sorted instruction stats
     When I am admin
-    When I do GET /api/v4/cat/instruction-stats?sort_by=name&sort=desc&search=test-instruction-to-stats-get&from=1618279610&to=1618280210
+    When I do GET /api/v4/cat/instruction-stats?sort_by=name&sort=desc&search=test-instruction-to-stats-get&from=1617555600&to=1618246799
     Then the response code should be 200
     Then the response body should contain:
     """
     {
       "data": [
+        {
+          "_id": "test-instruction-to-stats-get-3"
+        },
         {
           "_id": "test-instruction-to-stats-get-2"
         },
@@ -178,7 +264,7 @@ Feature: get instruction statistics
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 2
+        "total_count": 3
       }
     }
     """
diff --git a/tests/functional/features/api/cat/instructionstats_summary.feature b/tests/functional/features/api/cat/instructionstats_summary.feature
index fcf0466b..95fbbb64 100644
--- a/tests/functional/features/api/cat/instructionstats_summary.feature
+++ b/tests/functional/features/api/cat/instructionstats_summary.feature
@@ -12,23 +12,23 @@ Feature: get instruction statistics
       "_id": "test-instruction-to-stats-summary-get-1",
       "alarm_states": {
         "critical": {
-          "from": 1,
-          "to": 2
+          "from": 4,
+          "to": 1
         },
         "major": {
           "from": 2,
-          "to": 0
+          "to": 2
         },
         "minor": {
-          "from": 0,
-          "to": 0
+          "from": 1,
+          "to": 3
         }
       },
       "ok_alarm_states": 1,
       "avg_complete_time": 316,
-      "execution_count": 3,
+      "execution_count": 7,
       "last_executed_on": 1618280210,
-      "last_modified": 1596712203,
+      "last_modified": 1596712303,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-1-name",
       "type": 0
@@ -45,23 +45,23 @@ Feature: get instruction statistics
       "_id": "test-instruction-to-stats-summary-get-2",
       "alarm_states": {
         "critical": {
-          "from": 1,
-          "to": 2
+          "from": 4,
+          "to": 1
         },
         "major": {
           "from": 2,
-          "to": 0
+          "to": 2
         },
         "minor": {
-          "from": 0,
-          "to": 0
+          "from": 1,
+          "to": 3
         }
       },
       "ok_alarm_states": 1,
       "avg_complete_time": 316,
-      "execution_count": 3,
+      "execution_count": 7,
       "last_executed_on": 1618280210,
-      "last_modified": 1596712203,
+      "last_modified": 1596712303,
       "created": 1596712203,
       "name": "test-instruction-to-stats-summary-get-2-name",
       "type": 1
@@ -101,6 +101,44 @@ Feature: get instruction statistics
     }
     """
 
+  Scenario: given request and user without instruction create permission should return instruction stats
+    When I am test-role-to-get-stats-instruction
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-summary-get-1/summary
+    Then the response code should be 200
+    Then the response body should be:
+    """
+    {
+      "_id": "test-instruction-to-stats-summary-get-1",
+      "alarm_states": {
+        "critical": {
+          "from": 4,
+          "to": 1
+        },
+        "major": {
+          "from": 2,
+          "to": 2
+        },
+        "minor": {
+          "from": 1,
+          "to": 3
+        }
+      },
+      "ok_alarm_states": 1,
+      "avg_complete_time": 316,
+      "execution_count": 7,
+      "last_executed_on": 1618280210,
+      "last_modified": 1596712303,
+      "created": 1596712203,
+      "name": "test-instruction-to-stats-summary-get-1-name",
+      "type": 0
+    }
+    """
+
+  Scenario: given request and user without instruction create permission should return not found error
+    When I am test-role-to-get-stats-instruction
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-summary-get-2/summary
+    Then the response code should be 404
+
   Scenario: given request and no auth user should not allow access
     When I do GET /api/v4/cat/instruction-stats/notexist/summary
     Then the response code should be 401
diff --git a/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
index 6174705f..348ae65f 100644
--- a/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
+++ b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
@@ -269,7 +269,7 @@ Feature: run an auto instruction
    }
    """
    When I wait the end of event processing
-   When I wait 6s
+   When I wait 8s
    When I do GET /api/v4/alarms?search=test-resource-to-run-auto-instruction-4-1&with_steps=true
    Then the response code should be 200
    Then the response body should contain:
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
index 7a42b68a..558ad6ca 100644
--- a/tests/functional/features/engines/remediation/instructionexecution_stats.feature
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -10,14 +10,17 @@ Feature: update an instruction statistics
       "name": "test-instruction-to-stats-update-1-name",
       "entity_patterns": [
         {
-          "name": "test-resource-to-stats-update-1"
+          "name": "test-resource-to-stats-update-1-1"
+        },
+        {
+          "name": "test-resource-to-stats-update-1-2"
         }
       ],
       "description": "test-instruction-to-stats-update-1-description",
       "author": "test-instruction-to-stats-update-1-author",
       "enabled": true,
       "timeout_after_execution": {
-        "seconds": 3,
+        "seconds": 1,
         "unit": "s"
       },
       "steps": [
@@ -48,19 +51,35 @@ Feature: update an instruction statistics
       "source_type": "resource",
       "event_type": "check",
       "component": "test-component-to-stats-update-1",
-      "resource": "test-resource-to-stats-update-1",
+      "resource": "test-resource-to-stats-update-1-1",
       "state": 1,
       "output": "test-output-to-stats-update-1"
     }
     """
-    When I wait the end of event processing
-    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-1
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-stats-update-1",
+      "connector_name": "test-connector-name-to-stats-update-1",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-stats-update-1",
+      "resource": "test-resource-to-stats-update-1-2",
+      "state": 2,
+      "output": "test-output-to-stats-update-1"
+    }
+    """
+    When I wait the end of 2 events processing
+    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-1-1
     Then the response code should be 200
-    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
+    When I save response alarm1ID={{ (index .lastResponse.data 0)._id }}
+    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-1-2
+    Then the response code should be 200
+    When I save response alarm2ID={{ (index .lastResponse.data 0)._id }}
     When I do POST /api/v4/cat/executions:
     """
     {
-      "alarm": "{{ .alarmID }}",
+      "alarm": "{{ .alarm1ID }}",
       "instruction": "{{ .instructionID }}"
     }
     """
@@ -70,7 +89,7 @@ Feature: update an instruction statistics
     When I wait 2s
     When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
     Then the response code should be 200
-    When I save response executionTime={{ .lastResponse.completed_at }}
+    When I save response execution1Time={{ .lastResponse.completed_at }}
     When I wait the end of event processing
     When I send an event:
     """
@@ -80,13 +99,29 @@ Feature: update an instruction statistics
       "source_type": "resource",
       "event_type": "check",
       "component": "test-component-to-stats-update-1",
-      "resource": "test-resource-to-stats-update-1",
+      "resource": "test-resource-to-stats-update-1-1",
       "state": 0,
       "output": "test-output-to-stats-update-1"
     }
     """
     When I wait the end of event processing
-    When I wait 7s
+    When I wait 5s
+    When I do POST /api/v4/cat/executions:
+    """
+    {
+      "alarm": "{{ .alarm2ID }}",
+      "instruction": "{{ .instructionID }}"
+    }
+    """
+    Then the response code should be 200
+    When I save response executionID={{ .lastResponse._id }}
+    When I wait the end of event processing
+    When I wait 1s
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/next-step
+    Then the response code should be 200
+    When I save response execution2Time={{ .lastResponse.completed_at }}
+    When I wait the end of event processing
+    When I wait 5s
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/summary
     Then the response code should be 200
     Then the response body should contain:
@@ -99,8 +134,8 @@ Feature: update an instruction statistics
           "to": 0
         },
         "major": {
-          "from": 0,
-          "to": 0
+          "from": 1,
+          "to": 1
         },
         "minor": {
           "from": 1,
@@ -108,8 +143,8 @@ Feature: update an instruction statistics
         }
       },
       "ok_alarm_states": 1,
-      "execution_count": 1,
-      "last_executed_on": {{ .executionTime }},
+      "execution_count": 2,
+      "last_executed_on": {{ .execution2Time }},
       "name": "test-instruction-to-stats-update-1-name",
       "type": 0
     }
@@ -128,8 +163,8 @@ Feature: update an instruction statistics
               "to": 0
             },
             "major": {
-              "from": 0,
-              "to": 0
+              "from": 1,
+              "to": 1
             },
             "minor": {
               "from": 1,
@@ -137,7 +172,7 @@ Feature: update an instruction statistics
             }
           },
           "ok_alarm_states": 1,
-          "execution_count": 1,
+          "execution_count": 2,
           "modified_on": {{ .creationTime }}
         }
       ],
@@ -157,9 +192,35 @@ Feature: update an instruction statistics
     {
       "data": [
         {
-          "executed_on": {{ .executionTime }},
+          "executed_on": {{ .execution2Time }},
+          "alarm": {
+            "_id": "{{ .alarm2ID }}",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "val": 2
+                },
+                {
+                  "_t": "statusinc",
+                  "val": 1
+                },
+                {
+                  "_t": "instructionstart",
+                  "m": "Instruction test-instruction-to-stats-update-1-name."
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "m": "Instruction test-instruction-to-stats-update-1-name."
+                }
+              ]
+            }
+          }
+        },
+        {
+          "executed_on": {{ .execution1Time }},
           "alarm": {
-            "_id": "{{ .alarmID }}",
+            "_id": "{{ .alarm1ID }}",
             "v": {
               "steps": [
                 {
@@ -199,7 +260,7 @@ Feature: update an instruction statistics
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 2
+        "total_count": 3
       }
     }
     """
@@ -211,8 +272,8 @@ Feature: update an instruction statistics
       "data": [
         {
           "_id": "{{ .instructionID }}",
-          "month_executions": 1,
-          "last_executed_on": {{ .executionTime }}
+          "month_executions": 2,
+          "last_executed_on": {{ .execution2Time }}
         }
       ]
     }
@@ -227,14 +288,17 @@ Feature: update an instruction statistics
       "name": "test-instruction-to-stats-update-2-name",
       "entity_patterns": [
         {
-          "name": "test-resource-to-stats-update-2"
+          "name": "test-resource-to-stats-update-2-1"
+        },
+        {
+          "name": "test-resource-to-stats-update-2-2"
         }
       ],
       "description": "test-instruction-to-stats-update-2-description",
       "author": "test-instruction-to-stats-update-2-author",
       "enabled": true,
       "timeout_after_execution": {
-        "seconds": 3,
+        "seconds": 1,
         "unit": "s"
       },
       "jobs": [
@@ -257,16 +321,15 @@ Feature: update an instruction statistics
       "source_type": "resource",
       "event_type": "check",
       "component": "test-component-to-stats-update-2",
-      "resource": "test-resource-to-stats-update-2",
+      "resource": "test-resource-to-stats-update-2-1",
       "state": 1,
       "output": "test-output-to-stats-update-2"
     }
     """
     When I wait the end of event processing
-    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-2
+    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-2-1
     Then the response code should be 200
-    When I save response alarmID={{ (index .lastResponse.data 0)._id }}
-    When I wait 6s
+    When I save response alarm1ID={{ (index .lastResponse.data 0)._id }}
     When I send an event:
     """
     {
@@ -275,13 +338,31 @@ Feature: update an instruction statistics
       "source_type": "resource",
       "event_type": "check",
       "component": "test-component-to-stats-update-2",
-      "resource": "test-resource-to-stats-update-2",
+      "resource": "test-resource-to-stats-update-2-1",
       "state": 0,
       "output": "test-output-to-stats-update-2"
     }
     """
     When I wait the end of event processing
-    When I wait 3s
+    When I wait 5s
+    When I send an event:
+    """
+    {
+      "connector": "test-connector-to-stats-update-2",
+      "connector_name": "test-connector-name-to-stats-update-2",
+      "source_type": "resource",
+      "event_type": "check",
+      "component": "test-component-to-stats-update-2",
+      "resource": "test-resource-to-stats-update-2-2",
+      "state": 2,
+      "output": "test-output-to-stats-update-2"
+    }
+    """
+    When I wait the end of event processing
+    When I do GET /api/v4/alarms?search=test-resource-to-stats-update-2-2
+    Then the response code should be 200
+    When I save response alarm2ID={{ (index .lastResponse.data 0)._id }}
+    When I wait 7s
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/summary
     Then the response code should be 200
     Then the response body should contain:
@@ -294,8 +375,8 @@ Feature: update an instruction statistics
           "to": 0
         },
         "major": {
-          "from": 0,
-          "to": 0
+          "from": 1,
+          "to": 1
         },
         "minor": {
           "from": 1,
@@ -303,7 +384,7 @@ Feature: update an instruction statistics
         }
       },
       "ok_alarm_states": 1,
-      "execution_count": 1,
+      "execution_count": 2,
       "name": "test-instruction-to-stats-update-2-name",
       "type": 1
     }
@@ -323,8 +404,8 @@ Feature: update an instruction statistics
               "to": 0
             },
             "major": {
-              "from": 0,
-              "to": 0
+              "from": 1,
+              "to": 1
             },
             "minor": {
               "from": 1,
@@ -332,7 +413,7 @@ Feature: update an instruction statistics
             }
           },
           "ok_alarm_states": 1,
-          "execution_count": 1,
+          "execution_count": 2,
           "modified_on": {{ .creationTime }}
         }
       ],
@@ -353,12 +434,12 @@ Feature: update an instruction statistics
       "data": [
         {
           "alarm": {
-            "_id": "{{ .alarmID }}",
+            "_id": "{{ .alarm2ID }}",
             "v": {
               "steps": [
                 {
                   "_t": "stateinc",
-                  "val": 1
+                  "val": 2
                 },
                 {
                   "_t": "statusinc",
@@ -379,6 +460,31 @@ Feature: update an instruction statistics
                 {
                   "_t": "autoinstructioncomplete",
                   "m": "Instruction test-instruction-to-stats-update-2-name."
+                }
+              ]
+            }
+          }
+        },
+        {
+          "alarm": {
+            "_id": "{{ .alarm1ID }}",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "val": 1
+                },
+                {
+                  "_t": "statusinc",
+                  "val": 1
+                },
+                {
+                  "_t": "autoinstructionstart",
+                  "m": "Instruction test-instruction-to-stats-update-2-name."
+                },
+                {
+                  "_t": "instructionjobstart",
+                  "m": "Instruction test-instruction-to-stats-update-2-name. Job test-job-to-run-auto-instruction-5-name."
                 },
                 {
                   "_t": "statedec",
@@ -387,6 +493,14 @@ Feature: update an instruction statistics
                 {
                   "_t": "statusdec",
                   "val": 0
+                },
+                {
+                  "_t": "instructionjobcomplete",
+                  "m": "Instruction test-instruction-to-stats-update-2-name. Job test-job-to-run-auto-instruction-5-name."
+                },
+                {
+                  "_t": "autoinstructioncomplete",
+                  "m": "Instruction test-instruction-to-stats-update-2-name."
                 }
               ]
             }
@@ -401,7 +515,7 @@ Feature: update an instruction statistics
         "page": 1,
         "page_count": 1,
         "per_page": 10,
-        "total_count": 2
+        "total_count": 3
       }
     }
     """
@@ -414,7 +528,7 @@ Feature: update an instruction statistics
       "data": [
         {
           "_id": "{{ .instructionID }}",
-          "month_executions": 1
+          "month_executions": 2
         }
       ]
     }
-- 
2.25.1


From 099d3b1f54fec92aa99e25b8c74ed41063c84a25 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 25 May 2021 12:21:02 +0700
Subject: [PATCH 48/66] Feature #3171 : Add mongo indexes and update functional
 tests

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 config/mongo/000-default.yml                  | 28 +++++++++++++++++--
 .../features/api/cat/instruction_rate.feature |  8 +++---
 .../api/cat/instructionstats_get.feature      |  6 ++--
 3 files changed, 32 insertions(+), 10 deletions(-)

diff --git a/config/mongo/000-default.yml b/config/mongo/000-default.yml
index 799c5542..d674ea84 100644
--- a/config/mongo/000-default.yml
+++ b/config/mongo/000-default.yml
@@ -52,13 +52,13 @@ indexes:
         enabled: 1
       options:
         background: true
+
+  periodical_alarm:
     d_1:
       keys:
         d: 1
       options:
         background: true
-
-  periodical_alarm:
     v.meta_1_v.creation_date_1:
       keys:
         v.meta: 1
@@ -112,8 +112,30 @@ indexes:
         status: 1
       options:
         background: true
+    status_1_completed_at_1:
+      keys:
+        status: 1
+        completed_at: 1
+      options:
+        background: true
     alarm_1:
       keys:
         alarm: 1
       options:
-        background: true
\ No newline at end of file
+        background: true
+
+  instruction_week_stats:
+    instruction_1_date_1:
+      keys:
+        instruction: 1
+        date: 1
+      options:
+        background: true
+
+  instruction_mod_stats:
+    instruction_1_date_1:
+      keys:
+        instruction: 1
+        date: 1
+      options:
+        background: true
diff --git a/tests/functional/features/api/cat/instruction_rate.feature b/tests/functional/features/api/cat/instruction_rate.feature
index 4e6acc3e..3d64ad22 100644
--- a/tests/functional/features/api/cat/instruction_rate.feature
+++ b/tests/functional/features/api/cat/instruction_rate.feature
@@ -17,7 +17,7 @@ Feature: rate an instruction
     }
     """
     Then the response code should be 200
-    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-1&from=1000000000&to=2000000000
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-1&from=1000000000&to=2000000000&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -54,7 +54,7 @@ Feature: rate an instruction
        "error": "user has already rated today"
     }
     """
-    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-1&from=1000000000&to=2000000000
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-1&from=1000000000&to=2000000000&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -85,7 +85,7 @@ Feature: rate an instruction
     }
     """
     Then the response code should be 200
-    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-2&from=1000000000&to=2000000000
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-2&from=1000000000&to=2000000000&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -122,7 +122,7 @@ Feature: rate an instruction
        "error": "user has already rated today"
     }
     """
-    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-2&from=1000000000&to=2000000000
+    Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-2&from=1000000000&to=2000000000&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index b34313ef..6f87f73b 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -4,7 +4,7 @@ Feature: get instruction statistics
 
   Scenario: given get all request and admin user should return instruction stats
     When I am admin
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1617555600&to=1618246799
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1617555600&to=1618246799&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -100,7 +100,7 @@ Feature: get instruction statistics
       }
     }
     """
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1616950800&to=1618419599
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1616950800&to=1618419599&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
@@ -199,7 +199,7 @@ Feature: get instruction statistics
 
   Scenario: given get all request and user without instruction create permission should return instruction stats
     When I am test-role-to-get-stats-instruction
-    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1617555600&to=1618246799
+    When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1617555600&to=1618246799&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
     """
-- 
2.25.1


From 7b1925c9c3c8acec7558e3dd97904bf3ddbf975f Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 25 May 2021 14:25:32 +0700
Subject: [PATCH 49/66] Feature #3171 : Add stats migration

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../000_migrate_instructions.js               |   8 +-
 .../003_migrate_instruction_mod_stats.js      | 124 ++++++++++++++++++
 ...04_migrate_instruction_month_executions.js |  47 +++++++
 3 files changed, 172 insertions(+), 7 deletions(-)
 create mode 100644 database/migrations/remediationnextstep/003_migrate_instruction_mod_stats.js
 create mode 100644 database/migrations/remediationnextstep/004_migrate_instruction_month_executions.js

diff --git a/database/migrations/remediationnextstep/000_migrate_instructions.js b/database/migrations/remediationnextstep/000_migrate_instructions.js
index eaad1032..b040fc53 100644
--- a/database/migrations/remediationnextstep/000_migrate_instructions.js
+++ b/database/migrations/remediationnextstep/000_migrate_instructions.js
@@ -12,13 +12,7 @@
                 unit: "m"
             };
         }
-        if (!doc.mod_history) {
-            if (doc.last_modified === doc.created) {
-                set["mod_history"] = [doc.last_modified];
-            } else {
-                set["mod_history"] = [doc.created, doc.last_modified];
-            }
-        }
+
         if (doc.last_executed_by) {
             unset["last_executed_by"] = "";
         }
diff --git a/database/migrations/remediationnextstep/003_migrate_instruction_mod_stats.js b/database/migrations/remediationnextstep/003_migrate_instruction_mod_stats.js
new file mode 100644
index 00000000..26f0571e
--- /dev/null
+++ b/database/migrations/remediationnextstep/003_migrate_instruction_mod_stats.js
@@ -0,0 +1,124 @@
+(function () {
+    function genID() {
+        return UUID().toString().split('"')[1];
+    }
+
+    db.instruction.find().forEach(function (doc) {
+        var modStats = [
+            {
+                _id: genID(),
+                instruction: doc._id,
+                date: doc.created,
+            }
+        ];
+        if (doc.last_modified !== doc.created) {
+            modStats.push({
+                _id: genID(),
+                instruction: doc._id,
+                date: doc.last_modified,
+            })
+        }
+
+        db.instruction_mod_stats.insertMany(modStats);
+    });
+
+    var cursor = db.instruction_execution.aggregate([
+        {$match: {status: 2}},
+        {
+            $group: {
+                _id: {
+                    "instruction_modified_on": "$instruction_modified_on",
+                    "instruction": "$instruction",
+                },
+                date: {$first: "$instruction_modified_on"},
+                instruction: {$first: "$instruction"},
+                execution_count: {$sum: 1},
+                complete_time: {$sum: "$complete_time"},
+                init_critical: {
+                    $sum: {
+                        $cond: {
+                            if: {$eq: ["$alarm_state", 3]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                },
+                init_major: {
+                    $sum: {
+                        $cond: {
+                            if: {$eq: ["$alarm_state", 2]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                },
+                init_minor: {
+                    $sum: {
+                        $cond: {
+                            if: {$eq: ["$alarm_state", 1]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                },
+                res_critical: {
+                    $sum: {
+                        $cond: {
+                            if: {$eq: ["$result_alarm_state", 3]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                },
+                res_major: {
+                    $sum: {
+                        $cond: {
+                            if: {$eq: ["$result_alarm_state", 2]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                },
+                res_minor: {
+                    $sum: {
+                        $cond: {
+                            if: {$eq: ["$result_alarm_state", 1]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                },
+                res_ok: {
+                    $sum: {
+                        $cond: {
+                            if: {$eq: ["$result_alarm_state", 0]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                },
+            }
+        }
+    ]);
+    while (cursor.hasNext()) {
+        var doc = cursor.next();
+
+        if (doc.execution_count === 0) {
+            continue;
+        }
+
+        db.instruction_mod_stats.updateOne({instruction: doc.instruction, date: doc.date}, {
+            $set: {avg_complete_time: Math.round(doc.complete_time / doc.execution_count)},
+            $inc: {
+                execution_count: doc.execution_count,
+                init_critical: doc.init_critical,
+                init_major: doc.init_major,
+                init_minor: doc.init_minor,
+                res_critical: doc.res_critical,
+                res_major: doc.res_major,
+                res_minor: doc.res_minor,
+                res_ok: doc.res_ok,
+            }
+        });
+    }
+})();
diff --git a/database/migrations/remediationnextstep/004_migrate_instruction_month_executions.js b/database/migrations/remediationnextstep/004_migrate_instruction_month_executions.js
new file mode 100644
index 00000000..6f1c8166
--- /dev/null
+++ b/database/migrations/remediationnextstep/004_migrate_instruction_month_executions.js
@@ -0,0 +1,47 @@
+(function () {
+    // Uncomment current Europe/Paris timezone or set your own.
+    // Summer time
+    var tz = "+02:00"
+    // Winter time
+    // var tz = "+01:00"
+
+    var now = new Date();
+    var month = now.getMonth() + 1;
+    if (month < 10) {
+        month = "0" + month;
+    }
+    var firstDateOfMonth = new Date(now.getFullYear() + "-" + month + "-01T00:00:00.000" + tz);
+    firstDateOfMonth = Math.floor(firstDateOfMonth / 1000);
+
+    var cursor = db.instruction_execution.aggregate([
+        {$match: {status: 2}},
+        {
+            $group: {
+                _id: "$instruction",
+                users: {$addToSet: "$user"},
+                month_executions: {
+                    $sum: {
+                        $cond: {
+                            if: {$gte: ["$completed_at", firstDateOfMonth]},
+                            then: 1,
+                            else: 0,
+                        }
+                    }
+                }
+            }
+        }
+    ]);
+
+    while (cursor.hasNext()) {
+        var doc = cursor.next();
+        db.instruction.updateOne({_id: doc._id}, {
+            $set: {
+                users: doc.users,
+                month_executions: {
+                    month: firstDateOfMonth,
+                    count: doc.month_executions,
+                }
+            }
+        });
+    }
+})();
-- 
2.25.1


From 6185cf18b1d896f4b3ac21556dbd2e2f40200f47 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 27 May 2021 11:02:11 +0700
Subject: [PATCH 50/66] Add migrations

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 ...g.js => 002_migrate_instruction_rating.js} |  0
 .../remediationnextstep/006_add_api_rights.js | 33 +++++++++++++++++++
 .../007_add_notification.js                   | 12 +++++++
 3 files changed, 45 insertions(+)
 rename database/migrations/remediationnextstep/{002_migrate_rating.js => 002_migrate_instruction_rating.js} (100%)
 create mode 100644 database/migrations/remediationnextstep/006_add_api_rights.js
 create mode 100644 database/migrations/remediationnextstep/007_add_notification.js

diff --git a/database/migrations/remediationnextstep/002_migrate_rating.js b/database/migrations/remediationnextstep/002_migrate_instruction_rating.js
similarity index 100%
rename from database/migrations/remediationnextstep/002_migrate_rating.js
rename to database/migrations/remediationnextstep/002_migrate_instruction_rating.js
diff --git a/database/migrations/remediationnextstep/006_add_api_rights.js b/database/migrations/remediationnextstep/006_add_api_rights.js
new file mode 100644
index 00000000..c8d1df52
--- /dev/null
+++ b/database/migrations/remediationnextstep/006_add_api_rights.js
@@ -0,0 +1,33 @@
+(function () {
+    db.default_rights.insertMany([
+        {
+            "_id": "api_notification",
+            "crecord_type": "action",
+            "crecord_name": "Notification"
+        },
+        {
+            "_id": "api_instruction_approve",
+            "crecord_type": "action",
+            "crecord_name": "Instruction approve"
+        },
+    ]);
+
+    db.default_rights.update(
+        {
+            crecord_name: "admin",
+            crecord_type: "role",
+        },
+        {
+            $set: {
+                "rights.api_instruction_approve": {
+                    checksum: 1,
+                    crecord_type: "right",
+                },
+                "rights.api_notification": {
+                    checksum: 1,
+                    crecord_type: "right",
+                },
+            },
+        }
+    );
+})();
\ No newline at end of file
diff --git a/database/migrations/remediationnextstep/007_add_notification.js b/database/migrations/remediationnextstep/007_add_notification.js
new file mode 100644
index 00000000..02e1ad20
--- /dev/null
+++ b/database/migrations/remediationnextstep/007_add_notification.js
@@ -0,0 +1,12 @@
+(function () {
+    db.notification.insertOne({
+        "_id": "notification",
+        "instruction": {
+            "rate": true,
+            "rate_frequency": {
+                "seconds": 604800,
+                "unit": "s"
+            }
+        }
+    });
+})();
\ No newline at end of file
-- 
2.25.1


From 07a85bcb06641170ecb6c3e760741aeee3f4c54d Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 27 May 2021 11:33:10 +0700
Subject: [PATCH 51/66] Fix migrations

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../migrations/remediationnextstep/006_add_api_rights.js    | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/database/migrations/remediationnextstep/006_add_api_rights.js b/database/migrations/remediationnextstep/006_add_api_rights.js
index c8d1df52..00a69955 100644
--- a/database/migrations/remediationnextstep/006_add_api_rights.js
+++ b/database/migrations/remediationnextstep/006_add_api_rights.js
@@ -3,12 +3,14 @@
         {
             "_id": "api_notification",
             "crecord_type": "action",
-            "crecord_name": "Notification"
+            "crecord_name": "api_notification",
+            "desc": "Notification settings"
         },
         {
             "_id": "api_instruction_approve",
             "crecord_type": "action",
-            "crecord_name": "Instruction approve"
+            "crecord_name": "api_instruction_approve",
+            "desc": "Instruction approve"
         },
     ]);
 
-- 
2.25.1


From aec4cd473b54105cfd7d2157f643c51a321c3443 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 27 May 2021 17:22:54 +0700
Subject: [PATCH 52/66] Feature #3171 : Add remediation to data storage API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 docs/docs.go                                  | 22 ++++++
 docs/swagger.json                             | 22 ++++++
 docs/swagger.yaml                             | 22 ++++++
 lib/api/datastorage/validation.go             | 15 ++++
 lib/api/validators.go                         |  4 +
 lib/canopsis/datastorage/adapter.go           | 16 ++++
 lib/canopsis/datastorage/interface.go         |  8 +-
 .../features/api/core/datastorage_get.feature | 77 ++++++++++++++++++-
 8 files changed, 181 insertions(+), 5 deletions(-)
 create mode 100644 lib/api/datastorage/validation.go

diff --git a/docs/docs.go b/docs/docs.go
index 49ca182a..95c4f424 100644
--- a/docs/docs.go
+++ b/docs/docs.go
@@ -6470,6 +6470,12 @@ var doc = `{
                         "name": "sort",
                         "in": "query"
                     },
+                    {
+                        "type": "string",
+                        "description": "role permission",
+                        "name": "permission",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "description": "sort query",
@@ -8568,6 +8574,19 @@ var doc = `{
                             "$ref": "#/definitions/types.DurationWithEnabled"
                         }
                     }
+                },
+                "remediation": {
+                    "type": "object",
+                    "properties": {
+                        "accumulate_after": {
+                            "type": "object",
+                            "$ref": "#/definitions/types.DurationWithUnit"
+                        },
+                        "delete_after": {
+                            "type": "object",
+                            "$ref": "#/definitions/types.DurationWithUnit"
+                        }
+                    }
                 }
             }
         },
@@ -8589,6 +8608,9 @@ var doc = `{
             "properties": {
                 "junit": {
                     "type": "integer"
+                },
+                "remediation": {
+                    "type": "integer"
                 }
             }
         },
diff --git a/docs/swagger.json b/docs/swagger.json
index 26d8a2c2..52781b89 100644
--- a/docs/swagger.json
+++ b/docs/swagger.json
@@ -6454,6 +6454,12 @@
                         "name": "sort",
                         "in": "query"
                     },
+                    {
+                        "type": "string",
+                        "description": "role permission",
+                        "name": "permission",
+                        "in": "query"
+                    },
                     {
                         "type": "string",
                         "description": "sort query",
@@ -8552,6 +8558,19 @@
                             "$ref": "#/definitions/types.DurationWithEnabled"
                         }
                     }
+                },
+                "remediation": {
+                    "type": "object",
+                    "properties": {
+                        "accumulate_after": {
+                            "type": "object",
+                            "$ref": "#/definitions/types.DurationWithUnit"
+                        },
+                        "delete_after": {
+                            "type": "object",
+                            "$ref": "#/definitions/types.DurationWithUnit"
+                        }
+                    }
                 }
             }
         },
@@ -8573,6 +8592,9 @@
             "properties": {
                 "junit": {
                     "type": "integer"
+                },
+                "remediation": {
+                    "type": "integer"
                 }
             }
         },
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
index cba30cb2..dcc652d4 100644
--- a/docs/swagger.yaml
+++ b/docs/swagger.yaml
@@ -726,6 +726,15 @@ definitions:
             $ref: '#/definitions/types.DurationWithEnabled'
             type: object
         type: object
+      remediation:
+        properties:
+          accumulate_after:
+            $ref: '#/definitions/types.DurationWithUnit'
+            type: object
+          delete_after:
+            $ref: '#/definitions/types.DurationWithUnit'
+            type: object
+        type: object
     type: object
   datastorage.DataStorage:
     properties:
@@ -740,6 +749,8 @@ definitions:
     properties:
       junit:
         type: integer
+      remediation:
+        type: integer
     type: object
   entity.Entity:
     properties:
@@ -7357,6 +7368,10 @@ paths:
         in: query
         name: sort
         type: string
+      - description: role permission
+        in: query
+        name: permission
+        type: string
       - description: sort query
         in: query
         name: sort_by
@@ -7984,4 +7999,11 @@ paths:
       summary: Find all entity by service id
       tags:
       - weather-services
+securityDefinitions:
+  ApiKeyAuth:
+    in: header
+    name: x-canopsis-authkey
+    type: apiKey
+  BasicAuth:
+    type: basic
 swagger: "2.0"
diff --git a/lib/api/datastorage/validation.go b/lib/api/datastorage/validation.go
new file mode 100644
index 00000000..92a36911
--- /dev/null
+++ b/lib/api/datastorage/validation.go
@@ -0,0 +1,15 @@
+package datastorage
+
+import (
+	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/canopsis/datastorage"
+	"github.com/go-playground/validator/v10"
+)
+
+func ValidateConfig(sl validator.StructLevel) {
+	r := sl.Current().Interface().(datastorage.Config)
+
+	if r.Remediation.AccumulateAfter != nil && r.Remediation.DeleteAfter != nil &&
+		r.Remediation.AccumulateAfter.Seconds >= r.Remediation.DeleteAfter.Seconds {
+		sl.ReportError(r.Remediation.DeleteAfter, "Remediation.DeleteAfter", "DeleteAfter", "gtfield", "AccumulateAfter")
+	}
+}
diff --git a/lib/api/validators.go b/lib/api/validators.go
index 72a7fb31..f4b3c042 100644
--- a/lib/api/validators.go
+++ b/lib/api/validators.go
@@ -5,6 +5,7 @@ import (
 
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/broadcastmessage"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/common"
+	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/datastorage"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/entity"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/entitybasic"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/entitycategory"
@@ -26,6 +27,7 @@ import (
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/user"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/view"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/viewgroup"
+	libdatastorage "git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/canopsis/datastorage"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/canopsis/types"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/mongo"
 	libvalidator "git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/validator"
@@ -226,4 +228,6 @@ func RegisterValidators(client mongo.DbClient) {
 		idlerule.ValidateEditRequest(sl)
 	}, idlerule.EditRequest{})
 	v.RegisterStructValidation(idlerule.ValidateCountPatternRequest, idlerule.CountByPatternRequest{})
+
+	v.RegisterStructValidation(datastorage.ValidateConfig, libdatastorage.Config{})
 }
diff --git a/lib/canopsis/datastorage/adapter.go b/lib/canopsis/datastorage/adapter.go
index bb731929..c5a97557 100644
--- a/lib/canopsis/datastorage/adapter.go
+++ b/lib/canopsis/datastorage/adapter.go
@@ -48,3 +48,19 @@ func (a *adapter) UpdateHistoryJunit(ctx context.Context, t types.CpsTime) error
 
 	return nil
 }
+
+func (a *adapter) UpdateHistoryRemediation(ctx context.Context, t types.CpsTime) error {
+	res, err := a.collection.UpdateOne(ctx, bson.M{"_id": ID}, bson.M{
+		"$set": bson.M{
+			"history.remediation": t,
+		},
+	})
+	if err != nil {
+		return err
+	}
+	if res.MatchedCount == 0 {
+		return fmt.Errorf("cannot find configuration _id=%s", ID)
+	}
+
+	return nil
+}
diff --git a/lib/canopsis/datastorage/interface.go b/lib/canopsis/datastorage/interface.go
index 9d66be86..e0021b77 100644
--- a/lib/canopsis/datastorage/interface.go
+++ b/lib/canopsis/datastorage/interface.go
@@ -12,6 +12,7 @@ const ID = "data_storage"
 type Adapter interface {
 	Get(ctx context.Context) (DataStorage, error)
 	UpdateHistoryJunit(ctx context.Context, t types.CpsTime) error
+	UpdateHistoryRemediation(ctx context.Context, t types.CpsTime) error
 }
 
 type DataStorage struct {
@@ -23,8 +24,13 @@ type Config struct {
 	Junit struct {
 		DeleteAfter *types.DurationWithEnabled `bson:"delete_after,omitempty" json:"delete_after"`
 	} `bson:"junit" json:"junit"`
+	Remediation struct {
+		AccumulateAfter *types.DurationWithUnit `bson:"accumulate_after,omitempty" json:"accumulate_after"`
+		DeleteAfter     *types.DurationWithUnit `bson:"delete_after,omitempty" json:"delete_after"`
+	} `bson:"remediation" json:"remediation"`
 }
 
 type History struct {
-	Junit *types.CpsTime `bson:"junit" json:"junit" swaggertype:"integer"`
+	Junit       *types.CpsTime `bson:"junit" json:"junit" swaggertype:"integer"`
+	Remediation *types.CpsTime `bson:"remediation" json:"remediation" swaggertype:"integer"`
 }
diff --git a/tests/functional/features/api/core/datastorage_get.feature b/tests/functional/features/api/core/datastorage_get.feature
index 15108afe..2b7876ef 100644
--- a/tests/functional/features/api/core/datastorage_get.feature
+++ b/tests/functional/features/api/core/datastorage_get.feature
@@ -12,6 +12,16 @@ Feature: Get and update data storage config
           "seconds": 864000,
           "unit": "d"
         }
+      },
+      "remediation": {
+        "accumulate_after": {
+          "seconds": 864000,
+          "unit": "d"
+        },
+        "delete_after": {
+          "seconds": 1728000,
+          "unit": "d"
+        }
       }
     }
     """
@@ -26,10 +36,21 @@ Feature: Get and update data storage config
             "seconds": 864000,
             "unit": "d"
           }
+        },
+        "remediation": {
+          "accumulate_after": {
+            "seconds": 864000,
+            "unit": "d"
+          },
+          "delete_after": {
+            "seconds": 1728000,
+            "unit": "d"
+          }
         }
       },
       "history": {
-        "junit": null
+        "junit": null,
+        "remediation": null
       }
     }
     """
@@ -45,10 +66,21 @@ Feature: Get and update data storage config
             "seconds": 864000,
             "unit": "d"
           }
+        },
+        "remediation": {
+          "accumulate_after": {
+            "seconds": 864000,
+            "unit": "d"
+          },
+          "delete_after": {
+            "seconds": 1728000,
+            "unit": "d"
+          }
         }
       },
       "history": {
-        "junit": null
+        "junit": null,
+        "remediation": null
       }
     }
     """
@@ -63,10 +95,15 @@ Feature: Get and update data storage config
       "config": {
         "junit": {
           "delete_after": null
+        },
+        "remediation": {
+          "accumulate_after": null,
+          "delete_after": null
         }
       },
       "history": {
-        "junit": null
+        "junit": null,
+        "remediation": null
       }
     }
     """
@@ -78,10 +115,42 @@ Feature: Get and update data storage config
       "config": {
         "junit": {
           "delete_after": null
+        },
+        "remediation": {
+          "accumulate_after": null,
+          "delete_after": null
         }
       },
       "history": {
-        "junit": null
+        "junit": null,
+        "remediation": null
+      }
+    }
+    """
+
+  Scenario: given update request should return validation error
+    When I am admin
+    When I do PUT /api/v4/data-storage:
+    """
+    {
+      "remediation": {
+        "accumulate_after": {
+          "seconds": 864000,
+          "unit": "d"
+        },
+        "delete_after": {
+          "seconds": 864000,
+          "unit": "d"
+        }
+      }
+    }
+    """
+    Then the response code should be 400
+    Then the response body should be:
+    """
+    {
+      "errors": {
+        "remediation.delete_after": "DeleteAfter should be greater than AccumulateAfter."
       }
     }
     """
-- 
2.25.1


From e7394995290b600b89b3203581b111c68109fc93 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 1 Jun 2021 12:16:13 +0700
Subject: [PATCH 53/66] Feature #3171 : Update data storage API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 docs/docs.go                                       |  4 ++--
 docs/swagger.json                                  |  4 ++--
 docs/swagger.yaml                                  |  4 ++--
 lib/canopsis/datastorage/interface.go              |  4 ++--
 mocks/lib/canopsis/datastorage/adapter.go          | 14 ++++++++++++++
 .../features/api/core/datastorage_get.feature      |  8 +++++++-
 6 files changed, 29 insertions(+), 9 deletions(-)

diff --git a/docs/docs.go b/docs/docs.go
index 95c4f424..1a18eaf5 100644
--- a/docs/docs.go
+++ b/docs/docs.go
@@ -8580,11 +8580,11 @@ var doc = `{
                     "properties": {
                         "accumulate_after": {
                             "type": "object",
-                            "$ref": "#/definitions/types.DurationWithUnit"
+                            "$ref": "#/definitions/types.DurationWithEnabled"
                         },
                         "delete_after": {
                             "type": "object",
-                            "$ref": "#/definitions/types.DurationWithUnit"
+                            "$ref": "#/definitions/types.DurationWithEnabled"
                         }
                     }
                 }
diff --git a/docs/swagger.json b/docs/swagger.json
index 52781b89..92f1b531 100644
--- a/docs/swagger.json
+++ b/docs/swagger.json
@@ -8564,11 +8564,11 @@
                     "properties": {
                         "accumulate_after": {
                             "type": "object",
-                            "$ref": "#/definitions/types.DurationWithUnit"
+                            "$ref": "#/definitions/types.DurationWithEnabled"
                         },
                         "delete_after": {
                             "type": "object",
-                            "$ref": "#/definitions/types.DurationWithUnit"
+                            "$ref": "#/definitions/types.DurationWithEnabled"
                         }
                     }
                 }
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
index dcc652d4..1b12f569 100644
--- a/docs/swagger.yaml
+++ b/docs/swagger.yaml
@@ -729,10 +729,10 @@ definitions:
       remediation:
         properties:
           accumulate_after:
-            $ref: '#/definitions/types.DurationWithUnit'
+            $ref: '#/definitions/types.DurationWithEnabled'
             type: object
           delete_after:
-            $ref: '#/definitions/types.DurationWithUnit'
+            $ref: '#/definitions/types.DurationWithEnabled'
             type: object
         type: object
     type: object
diff --git a/lib/canopsis/datastorage/interface.go b/lib/canopsis/datastorage/interface.go
index e0021b77..223f8334 100644
--- a/lib/canopsis/datastorage/interface.go
+++ b/lib/canopsis/datastorage/interface.go
@@ -25,8 +25,8 @@ type Config struct {
 		DeleteAfter *types.DurationWithEnabled `bson:"delete_after,omitempty" json:"delete_after"`
 	} `bson:"junit" json:"junit"`
 	Remediation struct {
-		AccumulateAfter *types.DurationWithUnit `bson:"accumulate_after,omitempty" json:"accumulate_after"`
-		DeleteAfter     *types.DurationWithUnit `bson:"delete_after,omitempty" json:"delete_after"`
+		AccumulateAfter *types.DurationWithEnabled `bson:"accumulate_after,omitempty" json:"accumulate_after"`
+		DeleteAfter     *types.DurationWithEnabled `bson:"delete_after,omitempty" json:"delete_after"`
 	} `bson:"remediation" json:"remediation"`
 }
 
diff --git a/mocks/lib/canopsis/datastorage/adapter.go b/mocks/lib/canopsis/datastorage/adapter.go
index a655ae66..a6bab7a5 100644
--- a/mocks/lib/canopsis/datastorage/adapter.go
+++ b/mocks/lib/canopsis/datastorage/adapter.go
@@ -63,3 +63,17 @@ func (mr *MockAdapterMockRecorder) UpdateHistoryJunit(arg0, arg1 interface{}) *g
 	mr.mock.ctrl.T.Helper()
 	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateHistoryJunit", reflect.TypeOf((*MockAdapter)(nil).UpdateHistoryJunit), arg0, arg1)
 }
+
+// UpdateHistoryRemediation mocks base method
+func (m *MockAdapter) UpdateHistoryRemediation(arg0 context.Context, arg1 types.CpsTime) error {
+	m.ctrl.T.Helper()
+	ret := m.ctrl.Call(m, "UpdateHistoryRemediation", arg0, arg1)
+	ret0, _ := ret[0].(error)
+	return ret0
+}
+
+// UpdateHistoryRemediation indicates an expected call of UpdateHistoryRemediation
+func (mr *MockAdapterMockRecorder) UpdateHistoryRemediation(arg0, arg1 interface{}) *gomock.Call {
+	mr.mock.ctrl.T.Helper()
+	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateHistoryRemediation", reflect.TypeOf((*MockAdapter)(nil).UpdateHistoryRemediation), arg0, arg1)
+}
diff --git a/tests/functional/features/api/core/datastorage_get.feature b/tests/functional/features/api/core/datastorage_get.feature
index 2b7876ef..16aa37b6 100644
--- a/tests/functional/features/api/core/datastorage_get.feature
+++ b/tests/functional/features/api/core/datastorage_get.feature
@@ -15,10 +15,12 @@ Feature: Get and update data storage config
       },
       "remediation": {
         "accumulate_after": {
+          "enabled": true,
           "seconds": 864000,
           "unit": "d"
         },
         "delete_after": {
+          "enabled": true,
           "seconds": 1728000,
           "unit": "d"
         }
@@ -39,10 +41,12 @@ Feature: Get and update data storage config
         },
         "remediation": {
           "accumulate_after": {
+            "enabled": true,
             "seconds": 864000,
             "unit": "d"
           },
           "delete_after": {
+            "enabled": true,
             "seconds": 1728000,
             "unit": "d"
           }
@@ -69,10 +73,12 @@ Feature: Get and update data storage config
         },
         "remediation": {
           "accumulate_after": {
+            "enabled": true,
             "seconds": 864000,
             "unit": "d"
           },
           "delete_after": {
+            "enabled": true,
             "seconds": 1728000,
             "unit": "d"
           }
@@ -146,7 +152,7 @@ Feature: Get and update data storage config
     }
     """
     Then the response code should be 400
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "errors": {
-- 
2.25.1


From 6ad36cc05670eea60bf907109cdf827c61bf1d86 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 1 Jun 2021 14:14:27 +0700
Subject: [PATCH 54/66] Fix functional tests

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/default_rights.json                         | 12 ++++++------
 fixtures/instruction.json                            |  8 ++++----
 .../features/api/cat/instruction_rate.feature        |  2 +-
 .../api/cat/instructionstats_changes.feature         |  4 ++--
 .../api/cat/instructionstats_executions.feature      |  4 ++--
 .../features/api/cat/instructionstats_get.feature    |  2 +-
 .../api/cat/instructionstats_summary.feature         |  4 ++--
 7 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/fixtures/default_rights.json b/fixtures/default_rights.json
index d7a90024..39763eb9 100644
--- a/fixtures/default_rights.json
+++ b/fixtures/default_rights.json
@@ -1024,9 +1024,9 @@
     "enable": true
   },
   {
-    "_id": "test-role-to-get-stats-instruction",
+    "_id": "test-role-to-stats-instruction-get",
     "crecord_type": "role",
-    "crecord_name": "test-role-to-get-stats-instruction",
+    "crecord_name": "test-role-to-stats-instruction-get",
     "rights": {
       "api_execution": {
         "checksum": 1,
@@ -1043,11 +1043,11 @@
     }
   },
   {
-    "_id": "test-user-to-get-stats-instruction",
+    "_id": "test-user-to-stats-instruction-get",
     "crecord_type": "user",
-    "crecord_name": "test-user-to-get-stats-instruction",
-    "role": "test-role-to-get-stats-instruction",
-    "mail": "test-user-to-get-stats-instruction@canopsis.net",
+    "crecord_name": "test-user-to-stats-instruction-get",
+    "role": "test-role-to-stats-instruction-get",
+    "mail": "test-user-to-stats-instruction-get@canopsis.net",
     "shadowpasswd": "a94a8fe5ccb19ba61c4c0873d391e987982dime3",
     "authkey": "2be1d0ee-7fs6-8mdn-9d80-e857e50f4191",
     "enable": true
diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 37c7df94..be927bc0 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -2105,7 +2105,7 @@
     "avg_complete_time": 316,
     "last_modified": 1617555600,
     "created": 1617555600,
-    "users": ["test-user-to-get-stats-instruction"]
+    "users": ["test-user-to-stats-instruction-get"]
   },
   {
     "_id": "test-instruction-to-stats-get-2",
@@ -2245,7 +2245,7 @@
     "avg_complete_time": 316,
     "last_modified": 1596712303,
     "created": 1596712203,
-    "users": ["test-user-to-get-stats-instruction"]
+    "users": ["test-user-to-stats-instruction-get"]
   },
   {
     "_id": "test-instruction-to-stats-summary-get-2",
@@ -2384,7 +2384,7 @@
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
     "created": 1596712203,
-    "users": ["test-user-to-get-stats-instruction"]
+    "users": ["test-user-to-stats-instruction-get"]
   },
   {
     "_id": "test-instruction-to-stats-changes-get-2",
@@ -2707,7 +2707,7 @@
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
     "created": 1596712203,
-    "users": ["test-user-to-get-stats-instruction"]
+    "users": ["test-user-to-stats-instruction-get"]
   },
   {
     "_id": "test-instruction-to-stats-executions-get-2",
diff --git a/tests/functional/features/api/cat/instruction_rate.feature b/tests/functional/features/api/cat/instruction_rate.feature
index 3d64ad22..d0567f65 100644
--- a/tests/functional/features/api/cat/instruction_rate.feature
+++ b/tests/functional/features/api/cat/instruction_rate.feature
@@ -198,7 +198,7 @@ Feature: rate an instruction
     When I am test-role-to-rate-instruction
     Then I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-rate-5&from=1000000000&to=2000000000
     Then the response code should be 200
-    Then the response body should be:
+    Then the response body should contain:
     """
     {
       "data": [],
diff --git a/tests/functional/features/api/cat/instructionstats_changes.feature b/tests/functional/features/api/cat/instructionstats_changes.feature
index 716d2cc1..34021ef6 100644
--- a/tests/functional/features/api/cat/instructionstats_changes.feature
+++ b/tests/functional/features/api/cat/instructionstats_changes.feature
@@ -197,7 +197,7 @@ Feature: get instruction statistics
     """
 
   Scenario: given get request and and user without instruction create permission should return instruction stats
-    When I am test-role-to-get-stats-instruction
+    When I am test-role-to-stats-instruction-get
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-changes-get-1/changes
     Then the response code should be 200
     Then the response body should be:
@@ -275,7 +275,7 @@ Feature: get instruction statistics
     """
 
   Scenario: given get request and and user without instruction create permission should return not found error
-    When I am test-role-to-get-stats-instruction
+    When I am test-role-to-stats-instruction-get
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-changes-get-2/changes
     Then the response code should be 404
 
diff --git a/tests/functional/features/api/cat/instructionstats_executions.feature b/tests/functional/features/api/cat/instructionstats_executions.feature
index 3f4dbefa..c5947e0e 100644
--- a/tests/functional/features/api/cat/instructionstats_executions.feature
+++ b/tests/functional/features/api/cat/instructionstats_executions.feature
@@ -85,7 +85,7 @@ Feature: get instruction statistics
     """
 
   Scenario: given get request and user without instruction create permission should return instruction stats
-    When I am test-role-to-get-stats-instruction
+    When I am test-role-to-stats-instruction-get
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions
     Then the response code should be 200
     Then the response body should contain:
@@ -113,7 +113,7 @@ Feature: get instruction statistics
     """
 
   Scenario: given get request and user without instruction create permission should return not found error
-    When I am test-role-to-get-stats-instruction
+    When I am test-role-to-stats-instruction-get
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-2/executions
     Then the response code should be 404
 
diff --git a/tests/functional/features/api/cat/instructionstats_get.feature b/tests/functional/features/api/cat/instructionstats_get.feature
index 6f87f73b..e29c99e8 100644
--- a/tests/functional/features/api/cat/instructionstats_get.feature
+++ b/tests/functional/features/api/cat/instructionstats_get.feature
@@ -198,7 +198,7 @@ Feature: get instruction statistics
     """
 
   Scenario: given get all request and user without instruction create permission should return instruction stats
-    When I am test-role-to-get-stats-instruction
+    When I am test-role-to-stats-instruction-get
     When I do GET /api/v4/cat/instruction-stats?search=test-instruction-to-stats-get&from=1617555600&to=1618246799&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
diff --git a/tests/functional/features/api/cat/instructionstats_summary.feature b/tests/functional/features/api/cat/instructionstats_summary.feature
index 95fbbb64..9f912261 100644
--- a/tests/functional/features/api/cat/instructionstats_summary.feature
+++ b/tests/functional/features/api/cat/instructionstats_summary.feature
@@ -102,7 +102,7 @@ Feature: get instruction statistics
     """
 
   Scenario: given request and user without instruction create permission should return instruction stats
-    When I am test-role-to-get-stats-instruction
+    When I am test-role-to-stats-instruction-get
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-summary-get-1/summary
     Then the response code should be 200
     Then the response body should be:
@@ -135,7 +135,7 @@ Feature: get instruction statistics
     """
 
   Scenario: given request and user without instruction create permission should return not found error
-    When I am test-role-to-get-stats-instruction
+    When I am test-role-to-stats-instruction-get
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-summary-get-2/summary
     Then the response code should be 404
 
-- 
2.25.1


From 5e2a85a49229754031490faf001807bbf5a7216d Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 1 Jun 2021 14:14:51 +0700
Subject: [PATCH 55/66] Fix paginated response

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/api/common/models.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/api/common/models.go b/lib/api/common/models.go
index 468490b8..07fd9434 100644
--- a/lib/api/common/models.go
+++ b/lib/api/common/models.go
@@ -33,7 +33,7 @@ type PaginatedData interface {
 	GetTotal() int64
 }
 
-func NewPaginatedResponse(q pagination.Query, d PaginatedData) (interface{}, error) {
+func NewPaginatedResponse(q pagination.Query, d PaginatedData) (PaginatedListResponse, error) {
 	if q.Paginate == false {
 		q.Limit = d.GetTotal()
 	}
@@ -44,7 +44,7 @@ func NewPaginatedResponse(q pagination.Query, d PaginatedData) (interface{}, err
 	}
 
 	if q.Page > pageCount {
-		return nil, errors.New("page is out of range")
+		return PaginatedListResponse{}, errors.New("page is out of range")
 	}
 
 	data := d.GetData()
@@ -52,7 +52,7 @@ func NewPaginatedResponse(q pagination.Query, d PaginatedData) (interface{}, err
 		data = []interface{}{}
 	}
 
-	return &PaginatedListResponse{
+	return PaginatedListResponse{
 		Data: data,
 		Meta: PaginatedMeta{
 			Page:       q.Page,
-- 
2.25.1


From 86e317e26962ba92d583c7a88144bae5d409de4a Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 4 Jun 2021 12:07:14 +0700
Subject: [PATCH 56/66] Fix merge conflicts

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/api/appinfo/api.go                             |  5 -----
 lib/api/appinfo/model.go                           |  5 -----
 lib/api/appinfo/store.go                           | 14 --------------
 lib/api/auth/constants.go                          |  1 -
 lib/api/notification/store.go                      |  2 +-
 lib/mongo/mongo.go                                 |  2 +-
 .../api/core/internal_app_info_get.feature         |  3 +--
 7 files changed, 3 insertions(+), 29 deletions(-)

diff --git a/lib/api/appinfo/api.go b/lib/api/appinfo/api.go
index 32505f28..0a35ce9c 100644
--- a/lib/api/appinfo/api.go
+++ b/lib/api/appinfo/api.go
@@ -47,10 +47,6 @@ func (a *api) GetAppInfo(c *gin.Context) {
 	if err != nil {
 		panic(err)
 	}
-	remediationConf, err := a.store.RetrieveRemediationConf()
-	if err != nil {
-		panic(err)
-	}
 	version, err := a.store.RetrieveCanopsisVersionConfig()
 	if err != nil {
 		panic(err)
@@ -59,7 +55,6 @@ func (a *api) GetAppInfo(c *gin.Context) {
 		UserInterfaceConf:   userInterface,
 		TimezoneConf:        tz,
 		CanopsisVersionConf: version,
-		RemediationConf:     remediationConf,
 	})
 }
 
diff --git a/lib/api/appinfo/model.go b/lib/api/appinfo/model.go
index eb693946..0c801479 100644
--- a/lib/api/appinfo/model.go
+++ b/lib/api/appinfo/model.go
@@ -44,15 +44,10 @@ type TimezoneConf struct {
 	Timezone string `json:"timezone,omitempty" bson:"timezone"`
 }
 
-type RemediationConf struct {
-	JobExecutorFetchTimeoutSeconds int64 `json:"jobexecutorfetchtimeoutseconds,omitempty" bson:"jobexecutorfetchtimeoutseconds"`
-}
-
 type AppInfoResponse struct {
 	UserInterfaceConf
 	TimezoneConf
 	CanopsisVersionConf
-	RemediationConf
 }
 
 type LogInProvider struct {
diff --git a/lib/api/appinfo/store.go b/lib/api/appinfo/store.go
index 6238d0c6..fdaf4601 100644
--- a/lib/api/appinfo/store.go
+++ b/lib/api/appinfo/store.go
@@ -21,7 +21,6 @@ type Store interface {
 	RetrieveUserInterfaceConfig() (UserInterfaceConf, error)
 	RetrieveCanopsisVersionConfig() (CanopsisVersionConf, error)
 	RetrieveTimezoneConf() (TimezoneConf, error)
-	RetrieveRemediationConf() (RemediationConf, error)
 	UpdateUserInterfaceConfig(*UserInterfaceConf) error
 	DeleteUserInterfaceConfig() error
 }
@@ -113,19 +112,6 @@ func (s *store) RetrieveTimezoneConf() (TimezoneConf, error) {
 	return tz, nil
 }
 
-func (s *store) RetrieveRemediationConf() (RemediationConf, error) {
-	var remConf RemediationConf
-	conf, err := s.configAdpt.GetConfig()
-	if err == mongodriver.ErrNoDocuments {
-		return remConf, nil
-	}
-	if err != nil {
-		return remConf, err
-	}
-	remConf.JobExecutorFetchTimeoutSeconds = conf.Remediation.JobExecutorFetchTimeoutSeconds
-	return remConf, nil
-}
-
 func (s *store) UpdateUserInterfaceConfig(model *UserInterfaceConf) error {
 	ctx, cancel := context.WithCancel(context.Background())
 	defer cancel()
diff --git a/lib/api/auth/constants.go b/lib/api/auth/constants.go
index 60ee73a2..cef4afd6 100644
--- a/lib/api/auth/constants.go
+++ b/lib/api/auth/constants.go
@@ -3,7 +3,6 @@ package auth
 const (
 	// UserKey is the context name for user credential.
 	UserKey = "user_id"
-	RoleKey = "role"
 	// ApiKey is the context name for user api key.
 	ApiKey = "api_key"
 	// RoleKey is the context name for user's role
diff --git a/lib/api/notification/store.go b/lib/api/notification/store.go
index 25215eb3..14530832 100644
--- a/lib/api/notification/store.go
+++ b/lib/api/notification/store.go
@@ -22,7 +22,7 @@ func NewStore(
 	dbClient mongo.DbClient,
 ) Store {
 	return &store{
-		dbCollection: dbClient.Collection(mongo.NotificationCollection),
+		dbCollection: dbClient.Collection(mongo.NotificationMongoCollection),
 	}
 }
 
diff --git a/lib/mongo/mongo.go b/lib/mongo/mongo.go
index ce536290..fc6059c5 100644
--- a/lib/mongo/mongo.go
+++ b/lib/mongo/mongo.go
@@ -47,7 +47,7 @@ const (
 	StateSettingsMongoCollection        = "state_settings"
 	BroadcastMessageMongoCollection     = "broadcast_message"
 	AssociativeTableCollection          = "default_associativetable"
-	NotificationCollection              = "notification"
+	NotificationMongoCollection         = "notification"
 
 	// Remediation collections
 	InstructionMongoCollection          = "instruction"
diff --git a/tests/functional/features/api/core/internal_app_info_get.feature b/tests/functional/features/api/core/internal_app_info_get.feature
index 5cfd56b4..bf6bbb79 100644
--- a/tests/functional/features/api/core/internal_app_info_get.feature
+++ b/tests/functional/features/api/core/internal_app_info_get.feature
@@ -16,8 +16,7 @@ Feature: Get application information
       "language": "en",
       "login_page_description": "Test login",
       "stack": "go",
-      "version": "3.42.0",
-      "jobexecutorfetchtimeoutseconds": 5
+      "version": "3.42.0"
     }
     """
 
-- 
2.25.1


From cf127b760acf7d90e8c3b084ef599f9c35dd4eac Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 4 Jun 2021 14:14:44 +0700
Subject: [PATCH 57/66] Fix author in remediation API

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 docs/docs.go                                  |   3 -
 docs/swagger.json                             |   3 -
 docs/swagger.yaml                             |   2 -
 fixtures/instruction_rating.json              |  10 +-
 lib/api/common/models.go                      |  10 +
 .../api/cat/instruction_create.feature        | 171 ++++--
 .../instruction_create_with_approval.feature  | 566 ++++++++++++------
 .../features/api/cat/instruction_get.feature  | 142 +++--
 .../api/cat/instruction_update.feature        |  59 +-
 .../instruction_update_with_approval.feature  | 244 +++++---
 .../api/cat/instructioncomments_get.feature   |  20 +-
 .../api/cat/job_config_create.feature         |  30 +-
 .../features/api/cat/job_config_get.feature   |  14 +-
 .../api/cat/job_config_update.feature         |  26 +-
 .../features/api/cat/job_create.feature       |  34 +-
 .../features/api/cat/job_get.feature          |  38 +-
 .../features/api/cat/job_update.feature       |  40 +-
 17 files changed, 942 insertions(+), 470 deletions(-)

diff --git a/docs/docs.go b/docs/docs.go
index 1a18eaf5..e7b07eef 100644
--- a/docs/docs.go
+++ b/docs/docs.go
@@ -8196,9 +8196,6 @@ var doc = `{
                 "footer": {
                     "type": "string"
                 },
-                "jobexecutorfetchtimeoutseconds": {
-                    "type": "integer"
-                },
                 "language": {
                     "type": "string"
                 },
diff --git a/docs/swagger.json b/docs/swagger.json
index 92f1b531..e242d382 100644
--- a/docs/swagger.json
+++ b/docs/swagger.json
@@ -8180,9 +8180,6 @@
                 "footer": {
                     "type": "string"
                 },
-                "jobexecutorfetchtimeoutseconds": {
-                    "type": "integer"
-                },
                 "language": {
                     "type": "string"
                 },
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
index 1b12f569..3f9eb320 100644
--- a/docs/swagger.yaml
+++ b/docs/swagger.yaml
@@ -475,8 +475,6 @@ definitions:
         type: string
       footer:
         type: string
-      jobexecutorfetchtimeoutseconds:
-        type: integer
       language:
         type: string
       login_page_description:
diff --git a/fixtures/instruction_rating.json b/fixtures/instruction_rating.json
index 89793d61..574caf24 100644
--- a/fixtures/instruction_rating.json
+++ b/fixtures/instruction_rating.json
@@ -2,16 +2,18 @@
   {
     "_id": "test-rating-to-comments-get-1",
     "instruction": "test-instruction-to-comments-get-1",
-    "user": "test-rating-to-comments-get-1-user",
+    "user": "test-user-author-1-id",
     "rating": 4.5,
-    "comment": "test-rating-to-comments-get-1-comment"
+    "comment": "test-rating-to-comments-get-1-comment",
+    "created": 1596550518
   },
   {
     "_id": "test-rating-to-comments-get-2",
     "instruction": "test-instruction-to-comments-get-1",
-    "user": "test-rating-to-comments-get-2-user",
+    "user": "test-user-author-1-id",
     "rating": 2,
-    "comment": "test-rating-to-comments-get-2-comment"
+    "comment": "test-rating-to-comments-get-2-comment",
+    "created": 1596550518
   },
   {
     "_id": "test-instruction-to-check-rate-notify-rating-1",
diff --git a/lib/api/common/models.go b/lib/api/common/models.go
index 07fd9434..dd622362 100644
--- a/lib/api/common/models.go
+++ b/lib/api/common/models.go
@@ -13,6 +13,16 @@ import (
 	"github.com/go-playground/validator/v10"
 )
 
+type User struct {
+	ID   string `bson:"_id" json:"_id"`
+	Name string `bson:"crecord_name" json:"name"`
+}
+
+type Role struct {
+	ID   string `bson:"_id" json:"_id"`
+	Name string `bson:"crecord_name" json:"name"`
+}
+
 // PaginatedMeta is meta for paginated list data.
 type PaginatedMeta struct {
 	Page       int64 `json:"page"`
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 0b1067dd..4af5439f 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -5,13 +5,12 @@ Feature: create a instruction
   Scenario: given create manual instruction request should return ok
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 0,
       "name": "test-instruction-to-create-1-name",
       "entity_patterns": [
-        {
-          "name": "test-instruction-to-create-1-pattern"
+        {"name": "test-instruction-to-create-1-pattern"
         }
       ],
       "description": "test-instruction-to-create-1-description",
@@ -66,7 +65,7 @@ Feature: create a instruction
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "type": 0,
       "status": 0,
@@ -77,7 +76,7 @@ Feature: create a instruction
       ],
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "description": "test-instruction-to-create-1-description",
       "enabled": true,
@@ -97,11 +96,17 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -112,11 +117,17 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -134,11 +145,17 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -163,11 +180,17 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -178,11 +201,17 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -204,7 +233,7 @@ Feature: create a instruction
   Scenario: given create auto instruction request should return ok
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 1,
       "name": "test-instruction-to-create-2-name",
@@ -234,7 +263,7 @@ Feature: create a instruction
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "entity_patterns": [
         {
@@ -243,7 +272,7 @@ Feature: create a instruction
       ],
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "description": "test-instruction-to-create-2-description",
       "enabled": true,
@@ -258,11 +287,17 @@ Feature: create a instruction
           "stop_on_fail": true,
           "job": {
             "_id": "test-job-to-instruction-edit-1",
-            "author": "test-user-author-1-id",
+            "author": {
+              "_id": "test-user-author-1-id",
+              "name": "test-user-author-1-username"
+            },
             "config": {
               "_id": "test-job-config-to-edit-instruction",
               "auth_token": "test-auth-token",
-              "author": "test-user-author-1-id",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
               "host": "http://example.com",
               "name": "test-job-config-to-edit-instruction-name",
               "type": "rundeck"
@@ -275,11 +310,17 @@ Feature: create a instruction
         {
           "job": {
             "_id": "test-job-to-instruction-edit-2",
-            "author": "test-user-author-1-id",
+            "author": {
+              "_id": "test-user-author-1-id",
+              "name": "test-user-author-1-username"
+            },
             "config": {
               "_id": "test-job-config-to-edit-instruction",
               "auth_token": "test-auth-token",
-              "author": "test-user-author-1-id",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
               "host": "http://example.com",
               "name": "test-job-config-to-edit-instruction-name",
               "type": "rundeck"
@@ -296,7 +337,7 @@ Feature: create a instruction
   Scenario: given create request should return ok to get request
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 0,
       "name": "test-instruction-to-create-3-name",
@@ -357,7 +398,7 @@ Feature: create a instruction
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "type": 0,
       "status": 0,
@@ -388,11 +429,17 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -403,11 +450,17 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -425,11 +478,17 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -454,11 +513,17 @@ Feature: create a instruction
               "jobs": [
                 {
                   "_id": "test-job-to-instruction-edit-1",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -469,11 +534,17 @@ Feature: create a instruction
                 },
                 {
                   "_id": "test-job-to-instruction-edit-2",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "auth_token": "test-auth-token",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "host": "http://example.com",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck"
@@ -495,7 +566,7 @@ Feature: create a instruction
   Scenario: given create request with custom id should return ok
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-4-id",
       "type": 0,
@@ -533,7 +604,7 @@ Feature: create a instruction
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-4-id"
     }
@@ -544,14 +615,14 @@ Feature: create a instruction
   Scenario: given create request with custom id that already exist should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-check-unique-id"
     }
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "_id": "ID already exists."
@@ -562,14 +633,14 @@ Feature: create a instruction
   Scenario: given create request with name that already exist should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "name": "test-instruction-to-check-unique-name-name"
     }
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "name": "Name already exists."
@@ -580,14 +651,14 @@ Feature: create a instruction
   Scenario: given invalid create request to create manual instruction should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 0
     }
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "author": "Author is missing.",
@@ -603,14 +674,14 @@ Feature: create a instruction
   Scenario: given invalid create request to create auto instruction should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 1
     }
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "author": "Author is missing.",
@@ -627,7 +698,7 @@ Feature: create a instruction
   Scenario: given create request with not exist job should return error
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 0,
       "steps": [
@@ -645,7 +716,7 @@ Feature: create a instruction
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "steps.0.operations.0.jobs": "Jobs doesn't exist."
@@ -653,7 +724,7 @@ Feature: create a instruction
     }
     """
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 1,
       "jobs": [
@@ -665,7 +736,7 @@ Feature: create a instruction
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "jobs.0.job": "Job doesn't exist."
@@ -700,7 +771,7 @@ Feature: create a instruction
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "entity_patterns": "entity pattern list contains an empty pattern.",
@@ -731,7 +802,7 @@ Feature: create a instruction
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
       "entity_patterns": "Invalid entity pattern list.",
diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
index 9913aaf5..2f581f62 100644
--- a/tests/functional/features/api/cat/instruction_create_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -4,7 +4,7 @@ Feature: instruction approval creation
   Scenario: given create request with approval request with user or role should return ok
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-1-id",
       "type": 0,
@@ -47,7 +47,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-1-id",
       "status": 1,
@@ -62,7 +62,7 @@ Feature: instruction approval creation
     }
     """
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-4-id",
       "type": 0,
@@ -105,7 +105,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-4-id",
       "status": 1,
@@ -122,7 +122,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-create-with-approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -139,7 +139,7 @@ Feature: instruction approval creation
           "description": "test-instruction-to-create-with-approval-1-description",
           "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
           "enabled": true,
           "steps": [
@@ -157,13 +157,19 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -172,13 +178,19 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -214,7 +226,7 @@ Feature: instruction approval creation
           "description": "test-instruction-to-create-with-approval-4-description",
           "author":  {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
           "enabled": true,
           "steps": [
@@ -232,13 +244,19 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -247,13 +265,19 @@ Feature: instruction approval creation
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -288,7 +312,7 @@ Feature: instruction approval creation
   Scenario: given create request with approval request with not existed username should return ok
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-2-id",
       "type": 0,
@@ -331,7 +355,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.user": "User doesn't have approve rights or doesn't exist."
@@ -342,7 +366,7 @@ Feature: instruction approval creation
   Scenario: given create request with approval request with a username without approve right should return error
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-3-id",
       "type": 0,
@@ -385,7 +409,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.user": "User doesn't have approve rights or doesn't exist."
@@ -396,7 +420,7 @@ Feature: instruction approval creation
   Scenario: given create request with approval request with not existed role should return error
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-5-id",
       "type": 0,
@@ -439,7 +463,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.role": "Role doesn't have approve rights or doesn't exist."
@@ -450,7 +474,7 @@ Feature: instruction approval creation
   Scenario: given create request with approval request with a role without approve right should return error
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-6-id",
       "type": 0,
@@ -493,7 +517,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.role": "Role doesn't have approve rights or doesn't exist."
@@ -504,7 +528,7 @@ Feature: instruction approval creation
   Scenario: given create request with approval request with role and username should return error
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-7-id",
       "type": 0,
@@ -548,7 +572,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.role": "Can't be present both Role and User."
@@ -559,7 +583,7 @@ Feature: instruction approval creation
   Scenario: given create request with valid approval request with existed name should return error
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-8-id",
       "type": 0,
@@ -602,7 +626,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "name": "Name already exists."
@@ -613,7 +637,7 @@ Feature: instruction approval creation
   Scenario: the approver should be able to get approval data by username
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-9-id",
       "type": 0,
@@ -656,7 +680,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-9-id",
       "status": 1,
@@ -674,7 +698,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-9-id/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "original": {
         "_id": "test-instruction-to-create-with-approval-9-id",
@@ -690,7 +714,7 @@ Feature: instruction approval creation
         "description": "test-instruction-to-create-with-approval-9-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -708,13 +732,19 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -723,13 +753,19 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-2",
                     "name": "test-job-to-instruction-edit-2-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -757,7 +793,7 @@ Feature: instruction approval creation
   Scenario: the approver should be able to get approval data by role
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-10-id",
       "type": 0,
@@ -800,7 +836,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-10-id",
       "status": 1,
@@ -818,7 +854,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-10-id/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "original": {
         "_id": "test-instruction-to-create-with-approval-10-id",
@@ -834,7 +870,7 @@ Feature: instruction approval creation
         "description": "test-instruction-to-create-with-approval-10-description",
         "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
         "enabled": true,
         "steps": [
@@ -852,13 +888,19 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -867,13 +909,19 @@ Feature: instruction approval creation
                   {
                     "_id": "test-job-to-instruction-edit-2",
                     "name": "test-job-to-instruction-edit-2-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -901,7 +949,7 @@ Feature: instruction approval creation
   Scenario: the user, which is not set in approval should receive 403
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-11-id",
       "type": 0,
@@ -944,7 +992,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-11-id",
       "status": 1,
@@ -962,7 +1010,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-11-id/approval
     Then the response code should be 403
     Then the response body should contain:
-    """
+    """json
     {
       "error": "user is not assigned to approval"
     }
@@ -971,7 +1019,7 @@ Feature: instruction approval creation
   Scenario: the user with a role, which is not set in approval should receive 403
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-12-id",
       "type": 0,
@@ -1014,7 +1062,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-12-id",
       "status": 1,
@@ -1032,7 +1080,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-12-id/approval
     Then the response code should be 403
     Then the response body should contain:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
@@ -1046,7 +1094,7 @@ Feature: instruction approval creation
   Scenario: should be possible for any user to get waiting for approval created instruction
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-13-id",
       "type": 0,
@@ -1089,7 +1137,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-13-id",
       "status": 1,
@@ -1107,7 +1155,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-13-id
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-13-id",
       "type": 0,
@@ -1122,7 +1170,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-13-description",
       "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
       "enabled": true,
       "steps": [
@@ -1140,13 +1188,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1155,13 +1209,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1188,7 +1248,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-13-id
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-13-id",
       "type": 0,
@@ -1203,7 +1263,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-13-description",
       "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
       "enabled": true,
       "steps": [
@@ -1221,13 +1281,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1236,13 +1302,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1269,7 +1341,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-13-id
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-13-id",
       "type": 0,
@@ -1284,7 +1356,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-13-description",
       "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
       "enabled": true,
       "steps": [
@@ -1302,13 +1374,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1317,13 +1395,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1350,7 +1434,7 @@ Feature: instruction approval creation
   Scenario: The users that didn't request the approval can update only name/description/enabled
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-14-id",
       "type": 0,
@@ -1393,7 +1477,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-14-id",
       "status": 1,
@@ -1409,7 +1493,7 @@ Feature: instruction approval creation
     """
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-14-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-14-id",
       "type": 0,
@@ -1452,7 +1536,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-14-id",
       "type": 0,
@@ -1467,7 +1551,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-14-description-changed",
       "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
       "enabled": false,
       "steps": [
@@ -1485,13 +1569,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1500,13 +1590,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1525,7 +1621,7 @@ Feature: instruction approval creation
   Scenario: The user that requested the approval can update any field
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-15-id",
       "type": 0,
@@ -1568,7 +1664,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-15-id",
       "status": 1,
@@ -1583,7 +1679,7 @@ Feature: instruction approval creation
     }
     """  
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-15-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-15-id",
       "type": 0,
@@ -1626,7 +1722,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-15-id",
       "type": 0,
@@ -1641,7 +1737,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-15-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -1659,13 +1755,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1674,13 +1776,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1707,7 +1815,7 @@ Feature: instruction approval creation
   Scenario: The users that didn't request the approval can't change approver
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-17-id",
       "type": 0,
@@ -1750,7 +1858,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-17-id",
       "status": 1,
@@ -1766,7 +1874,7 @@ Feature: instruction approval creation
     """
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-17-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-17-id",
       "type": 0,
@@ -1809,7 +1917,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-17-id",
       "type": 0,
@@ -1824,7 +1932,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-17-description",
       "author":{
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -1842,13 +1950,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1857,13 +1971,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1890,7 +2010,7 @@ Feature: instruction approval creation
   Scenario: The user that requested the approval can change approver username
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-18-id",
       "type": 0,
@@ -1933,7 +2053,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-18-id",
       "status": 1,
@@ -1949,7 +2069,7 @@ Feature: instruction approval creation
     """  
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-18-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-18-id",
       "type": 0,
@@ -1992,7 +2112,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-18-id",
       "type": 0,
@@ -2007,7 +2127,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-18-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -2025,13 +2145,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2040,13 +2166,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2073,7 +2205,7 @@ Feature: instruction approval creation
   Scenario: The user that requested the approval can change approval from username to role
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-19-id",
       "type": 0,
@@ -2116,7 +2248,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-19-id",
       "status": 1,
@@ -2132,7 +2264,7 @@ Feature: instruction approval creation
     """  
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-19-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-19-id",
       "type": 0,
@@ -2175,7 +2307,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-19-id",
       "type": 0,
@@ -2190,7 +2322,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-19-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -2208,13 +2340,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2223,13 +2361,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2256,7 +2400,7 @@ Feature: instruction approval creation
   Scenario: The user that requested the approval can change approval from role to username
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-20-id",
       "type": 0,
@@ -2299,7 +2443,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-20-id",
       "status": 1,
@@ -2315,7 +2459,7 @@ Feature: instruction approval creation
     """    
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-20-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-20-id",
       "type": 0,
@@ -2358,7 +2502,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-20-id",
       "type": 0,
@@ -2373,7 +2517,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-20-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -2391,13 +2535,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2406,13 +2556,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2439,7 +2595,7 @@ Feature: instruction approval creation
   Scenario:  The user that didn't request the approval can't cancel approval
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-21-id",
       "type": 0,
@@ -2482,7 +2638,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-21-id",
       "status": 1,
@@ -2498,7 +2654,7 @@ Feature: instruction approval creation
     """  
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-21-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-21-id",
       "type": 0,
@@ -2541,7 +2697,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-21-id",
       "type": 0,
@@ -2556,7 +2712,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-21-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -2574,13 +2730,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2589,13 +2751,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2622,7 +2790,7 @@ Feature: instruction approval creation
   Scenario: The user that request the approval can cancel approval
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-22-id",
       "type": 0,
@@ -2665,7 +2833,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-22-id",
       "status": 1,
@@ -2681,7 +2849,7 @@ Feature: instruction approval creation
     """   
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-22-id:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-22-id",
       "type": 0,
@@ -2720,7 +2888,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-22-id",
       "type": 0,
@@ -2735,7 +2903,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-22-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -2753,13 +2921,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2768,13 +2942,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2793,7 +2973,7 @@ Feature: instruction approval creation
   Scenario: Only the user from approval should be able to approve by username
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-5-id",
       "type": 0,
@@ -2836,7 +3016,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-5-id",
       "status": 1,
@@ -2851,35 +3031,35 @@ Feature: instruction approval creation
     }
     """
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id/approval:
-    """
+    """json
     {
       "approve": true
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "user is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser2" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id/approval:
-    """
+    """json
     {
       "approve": true
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "user is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id/approval:
-    """
+    """json
     {
       "approve": true
     }
@@ -2888,7 +3068,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-5-id
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-5-id",
       "type": 0,
@@ -2903,7 +3083,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-5-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -2921,13 +3101,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -2936,13 +3122,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -2961,7 +3153,7 @@ Feature: instruction approval creation
   Scenario: Only the user from approval should be able to approve by role
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-6-id",
       "type": 0,
@@ -3004,7 +3196,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-6-id",
       "status": 1,
@@ -3019,35 +3211,35 @@ Feature: instruction approval creation
     }
     """
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id/approval:
-    """
+    """json
     {
       "approve": true
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id/approval:
-    """
+    """json
     {
       "approve": true
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser2" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id/approval:
-    """
+    """json
     {
       "approve": true
     }
@@ -3056,7 +3248,7 @@ Feature: instruction approval creation
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-6-id
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-6-id",
       "type": 0,
@@ -3071,7 +3263,7 @@ Feature: instruction approval creation
       "description": "test-instruction-to-create-with-approval-6-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -3089,13 +3281,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -3104,13 +3302,19 @@ Feature: instruction approval creation
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -3129,7 +3333,7 @@ Feature: instruction approval creation
   Scenario: Only the user from approval should be able to dismiss by username
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-7-id",
       "type": 0,
@@ -3172,7 +3376,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-7-id",
       "status": 1,
@@ -3187,35 +3391,35 @@ Feature: instruction approval creation
     }
     """
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-7-id/approval:
-    """
+    """json
     {
       "approve": false
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "user is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser2" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-7-id/approval:
-    """
+    """json
     {
       "approve": false
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "user is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-7-id/approval:
-    """
+    """json
     {
       "approve": false
     }
@@ -3227,7 +3431,7 @@ Feature: instruction approval creation
   Scenario: Only the user from approval should be able to dismiss by role
     When I am authenticated with username "root" and password "test"
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-8-id",
       "type": 0,
@@ -3270,7 +3474,7 @@ Feature: instruction approval creation
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-create-with-approval-8-id",
       "status": 1,
@@ -3285,35 +3489,35 @@ Feature: instruction approval creation
     }
     """
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id/approval:
-    """
+    """json
     {
       "approve": false
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id/approval:
-    """
+    """json
     {
       "approve": false
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser2" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id/approval:
-    """
+    """json
     {
       "approve": false
     }
diff --git a/tests/functional/features/api/cat/instruction_get.feature b/tests/functional/features/api/cat/instruction_get.feature
index 96d07cc2..1046131b 100644
--- a/tests/functional/features/api/cat/instruction_get.feature
+++ b/tests/functional/features/api/cat/instruction_get.feature
@@ -7,7 +7,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-get
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "data": [
         {
@@ -24,7 +24,7 @@ Feature: get a instruction
           "description": "test-instruction-to-get-1-description",
           "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
           "enabled": true,
           "timeout_after_execution": {
@@ -43,13 +43,19 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -58,13 +64,19 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -80,13 +92,19 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -109,13 +127,19 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-2",
                       "name": "test-job-to-instruction-edit-2-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -124,13 +148,19 @@ Feature: get a instruction
                     {
                       "_id": "test-job-to-instruction-edit-1",
                       "name": "test-job-to-instruction-edit-1-name",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "config": {
                         "_id": "test-job-config-to-edit-instruction",
                         "name": "test-job-config-to-edit-instruction-name",
                         "type": "rundeck",
                         "host": "http://example.com",
-                        "author": "test-user-author-1-id",
+                        "author": {
+                          "_id": "test-user-author-1-id",
+                          "name": "test-user-author-1-username"
+                        },
                         "auth_token": "test-auth-token"
                       },
                       "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -161,7 +191,7 @@ Feature: get a instruction
           "description": "test-instruction-to-get-2-description",
           "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
           "enabled": true,
           "jobs": [
@@ -169,13 +199,19 @@ Feature: get a instruction
               "job": {
                 "_id": "test-job-to-instruction-edit-1",
                 "name": "test-job-to-instruction-edit-1-name",
-                "author": "test-user-author-1-id",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
                 "config": {
                   "_id": "test-job-config-to-edit-instruction",
                   "name": "test-job-config-to-edit-instruction-name",
                   "type": "rundeck",
                   "host": "http://example.com",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "auth_token": "test-auth-token"
                 },
                 "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -187,13 +223,19 @@ Feature: get a instruction
               "job": {
                 "_id": "test-job-to-instruction-edit-2",
                 "name": "test-job-to-instruction-edit-2-name",
-                "author": "test-user-author-1-id",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
                 "config": {
                   "_id": "test-job-config-to-edit-instruction",
                   "name": "test-job-config-to-edit-instruction-name",
                   "type": "rundeck",
                   "host": "http://example.com",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "auth_token": "test-auth-token"
                 },
                 "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -225,7 +267,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-get-1-name&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -248,7 +290,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-get&with_month_executions=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -274,7 +316,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-get&type=0
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -292,7 +334,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-get&type=1
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -322,7 +364,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions/test-instruction-to-get-1
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "_id": "test-instruction-to-get-1",
       "type": 0,
@@ -337,7 +379,7 @@ Feature: get a instruction
       "description": "test-instruction-to-get-1-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "timeout_after_execution": {
@@ -356,13 +398,19 @@ Feature: get a instruction
                  {
                    "_id": "test-job-to-instruction-edit-1",
                    "name": "test-job-to-instruction-edit-1-name",
-                   "author": "test-user-author-1-id",
+                   "author": {
+                     "_id": "test-user-author-1-id",
+                     "name": "test-user-author-1-username"
+                   },
                    "config": {
                      "_id": "test-job-config-to-edit-instruction",
                      "name": "test-job-config-to-edit-instruction-name",
                      "type": "rundeck",
                      "host": "http://example.com",
-                     "author": "test-user-author-1-id",
+                     "author": {
+                       "_id": "test-user-author-1-id",
+                       "name": "test-user-author-1-username"
+                     },
                      "auth_token": "test-auth-token"
                    },
                    "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -371,13 +419,19 @@ Feature: get a instruction
                  {
                    "_id": "test-job-to-instruction-edit-2",
                    "name": "test-job-to-instruction-edit-2-name",
-                   "author": "test-user-author-1-id",
+                   "author": {
+                     "_id": "test-user-author-1-id",
+                     "name": "test-user-author-1-username"
+                   },
                    "config": {
                      "_id": "test-job-config-to-edit-instruction",
                      "name": "test-job-config-to-edit-instruction-name",
                      "type": "rundeck",
                      "host": "http://example.com",
-                     "author": "test-user-author-1-id",
+                     "author": {
+                       "_id": "test-user-author-1-id",
+                       "name": "test-user-author-1-username"
+                     },
                      "auth_token": "test-auth-token"
                    },
                    "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -393,13 +447,19 @@ Feature: get a instruction
                  {
                    "_id": "test-job-to-instruction-edit-2",
                    "name": "test-job-to-instruction-edit-2-name",
-                   "author": "test-user-author-1-id",
+                   "author": {
+                     "_id": "test-user-author-1-id",
+                     "name": "test-user-author-1-username"
+                   },
                    "config": {
                      "_id": "test-job-config-to-edit-instruction",
                      "name": "test-job-config-to-edit-instruction-name",
                      "type": "rundeck",
                      "host": "http://example.com",
-                     "author": "test-user-author-1-id",
+                     "author": {
+                       "_id": "test-user-author-1-id",
+                       "name": "test-user-author-1-username"
+                     },
                      "auth_token": "test-auth-token"
                    },
                    "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -422,13 +482,19 @@ Feature: get a instruction
                {
                  "_id": "test-job-to-instruction-edit-2",
                  "name": "test-job-to-instruction-edit-2-name",
-                 "author": "test-user-author-1-id",
+                 "author": {
+                   "_id": "test-user-author-1-id",
+                   "name": "test-user-author-1-username"
+                 },
                  "config": {
                    "_id": "test-job-config-to-edit-instruction",
                    "name": "test-job-config-to-edit-instruction-name",
                    "type": "rundeck",
                    "host": "http://example.com",
-                   "author": "test-user-author-1-id",
+                   "author": {
+                     "_id": "test-user-author-1-id",
+                     "name": "test-user-author-1-username"
+                   },
                    "auth_token": "test-auth-token"
                  },
                  "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -437,13 +503,19 @@ Feature: get a instruction
                {
                  "_id": "test-job-to-instruction-edit-1",
                  "name": "test-job-to-instruction-edit-1-name",
-                 "author": "test-user-author-1-id",
+                 "author": {
+                   "_id": "test-user-author-1-id",
+                   "name": "test-user-author-1-username"
+                 },
                  "config": {
                    "_id": "test-job-config-to-edit-instruction",
                    "name": "test-job-config-to-edit-instruction-name",
                    "type": "rundeck",
                    "host": "http://example.com",
-                   "author": "test-user-author-1-id",
+                   "author": {
+                     "_id": "test-user-author-1-id",
+                     "name": "test-user-author-1-username"
+                   },
                    "auth_token": "test-auth-token"
                  },
                  "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -466,7 +538,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions?search=test-instruction-execution-running&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-execution-running",
       "name": "test-instruction-execution-running-name",
@@ -480,7 +552,7 @@ Feature: get a instruction
     When I do GET /api/v4/cat/instructions/test-not-found
     Then the response code should be 404
     Then the response body should be:
-    """
+    """json
     {
       "error": "Not found"
     }
diff --git a/tests/functional/features/api/cat/instruction_update.feature b/tests/functional/features/api/cat/instruction_update.feature
index bb145bc8..73961e80 100644
--- a/tests/functional/features/api/cat/instruction_update.feature
+++ b/tests/functional/features/api/cat/instruction_update.feature
@@ -12,7 +12,7 @@ Feature: Instruction update
   Scenario: PUT a valid instruction without any changes
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-    """
+    """json
     {
       "name": "test-instruction-to-update-name",
       "entity_patterns": [
@@ -47,7 +47,7 @@ Feature: Instruction update
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-update",
       "type": 0,
@@ -80,7 +80,10 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -104,7 +107,7 @@ Feature: Instruction update
   Scenario: PUT a valid instruction
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-    """
+    """json
     {
       "name": "test-instruction-to-update-name",
       "entity_patterns": [
@@ -164,7 +167,7 @@ Feature: Instruction update
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-update",
       "type": 0,
@@ -197,7 +200,10 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -211,7 +217,10 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -232,7 +241,10 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -260,7 +272,10 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -274,7 +289,10 @@ Feature: Instruction update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -282,7 +300,10 @@ Feature: Instruction update
                     "host": "http://example.com",
                     "auth_token": "test-auth-token"
                   },
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
                   "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
                 }
@@ -300,14 +321,14 @@ Feature: Instruction update
   Scenario: PUT an invalid instruction, where name already exists
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-    """
+    """json
     {
       "name": "test-instruction-to-check-unique-name-name"
     }
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "name": "Name already exists."
@@ -318,7 +339,7 @@ Feature: Instruction update
   Scenario: PUT an invalid instruction, where job doesn't exist
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update:
-    """
+    """json
     {
       "name": "test-instruction-to-update-name",
       "steps": [
@@ -343,7 +364,7 @@ Feature: Instruction update
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "steps.0.operations.0.jobs": "Jobs doesn't exist."
@@ -354,7 +375,7 @@ Feature: Instruction update
   Scenario: PUT a valid instruction with pbehavior types
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-with-pbh-to-edit:
-    """
+    """json
     {
       "name": "test-instruction-with-pbh-to-edit-name",
       "description": "test-instruction-with-pbh-to-edit-description",
@@ -394,7 +415,7 @@ Feature: Instruction update
     """
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "name": "test-instruction-with-pbh-to-edit-name",
       "active_on_pbh": [
@@ -406,7 +427,7 @@ Feature: Instruction update
   Scenario: PUT an invalid instruction with pbehavior types, that don't exist
     When I am admin
     When I do PUT /api/v4/cat/instructions/test-instruction-with-pbh-to-edit:
-    """
+    """json
     {
       "active_on_pbh": [
         "pbh-type-for-instruction-with-pbehavior-1",
@@ -416,7 +437,7 @@ Feature: Instruction update
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
           "active_on_pbh": "active_on_pbh doesn't exist."
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
index cf683892..507ad221 100644
--- a/tests/functional/features/api/cat/instruction_update_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -4,7 +4,7 @@ Feature: instruction approval update
   Scenario: PUT a valid instruction with approval with username request should return ok
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-name",
       "entity_patterns": [
@@ -46,7 +46,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "user is not assigned to approval"
     }
@@ -55,7 +55,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -79,7 +79,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -112,7 +112,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-description",
         "author": {
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -127,7 +127,10 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -158,7 +161,7 @@ Feature: instruction approval update
     """
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-2:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-2-name",
       "entity_patterns": [
@@ -200,7 +203,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
@@ -209,7 +212,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-2/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -233,7 +236,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-2-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -266,7 +269,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-2-description",
         "author": {
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -281,7 +284,10 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -314,7 +320,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-update-with-approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -382,7 +388,7 @@ Feature: instruction approval update
   Scenario: PUT a valid instruction with approval request with a not found user should return error
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-3-name",
       "entity_patterns": [
@@ -422,7 +428,7 @@ Feature: instruction approval update
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.user": "User doesn't have approve rights or doesn't exist."
@@ -435,7 +441,7 @@ Feature: instruction approval update
   Scenario: PUT a valid instruction with approval request with a username without approve right should return error
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-3-name",
       "entity_patterns": [
@@ -475,7 +481,7 @@ Feature: instruction approval update
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.user": "User doesn't have approve rights or doesn't exist."
@@ -488,7 +494,7 @@ Feature: instruction approval update
   Scenario: PUT a valid instruction with approval request with a not found role should return error
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-3-name",
       "entity_patterns": [
@@ -528,7 +534,7 @@ Feature: instruction approval update
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.role": "Role doesn't have approve rights or doesn't exist."
@@ -541,7 +547,7 @@ Feature: instruction approval update
   Scenario: PUT a valid instruction with approval request with a role without approve right should return error
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-3-name",
       "entity_patterns": [
@@ -581,7 +587,7 @@ Feature: instruction approval update
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.role": "Role doesn't have approve rights or doesn't exist."
@@ -594,7 +600,7 @@ Feature: instruction approval update
   Scenario: PUT a valid instruction with approval request with a role without approve right should return error
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-3-name",
       "entity_patterns": [
@@ -635,7 +641,7 @@ Feature: instruction approval update
     """
     Then the response code should be 400
     Then the response body should contain:
-    """
+    """json
     {
       "errors": {
         "approval.role": "Can't be present both Role and User."
@@ -648,7 +654,7 @@ Feature: instruction approval update
   Scenario: Requester should receive updated version on GET request, other users should receive original version on GET request
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-4:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-4-name",
       "entity_patterns": [
@@ -691,7 +697,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-4
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-update-with-approval-4",
       "type": 0,
@@ -705,7 +711,7 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-4-description",
       "author": {
         "_id": "test-user-alternate-author-1-id",
-        "username": "test-user-alternate-author-1-username"
+        "name": "test-user-alternate-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -720,7 +726,10 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -752,7 +761,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-4
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-update-with-approval-4",
       "type": 0,
@@ -767,7 +776,7 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-4-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -793,7 +802,7 @@ Feature: instruction approval update
   Scenario: The users that didn't request the approval can update only name/description/enabled
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-5:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-5-name",
       "entity_patterns": [
@@ -834,7 +843,7 @@ Feature: instruction approval update
     Then the response code should be 200  
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-5:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-5-name-changed",
       "entity_patterns": [
@@ -874,7 +883,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-5/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -898,7 +907,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-5-description-changed",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": false,
         "steps": [
@@ -931,7 +940,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-5-description",
         "author": {
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -946,7 +955,10 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -979,7 +991,7 @@ Feature: instruction approval update
   Scenario: The requester can update any updated fields
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-6:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-6-name",
       "entity_patterns": [
@@ -1019,7 +1031,7 @@ Feature: instruction approval update
     """
     Then the response code should be 200
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-6:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-6-name",
       "entity_patterns": [
@@ -1062,7 +1074,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-6/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -1086,7 +1098,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-6-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1119,7 +1131,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-6-description",
         "author":{
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1134,13 +1146,19 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1168,7 +1186,7 @@ Feature: instruction approval update
   Scenario: The users that didn't request the approval couldn't change or remove the approval
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-7:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-7-name",
       "entity_patterns": [
@@ -1209,7 +1227,7 @@ Feature: instruction approval update
     Then the response code should be 200  
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-7:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-7-name",
       "entity_patterns": [
@@ -1253,7 +1271,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-7/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -1277,7 +1295,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-7-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1310,7 +1328,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-7-description",
         "author": {
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1325,13 +1343,19 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1357,7 +1381,7 @@ Feature: instruction approval update
     """
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-7:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-7-name",
       "entity_patterns": [
@@ -1396,7 +1420,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-7/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -1420,7 +1444,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-7-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1453,7 +1477,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-7-description",
         "author": {
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1468,13 +1492,19 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1502,7 +1532,7 @@ Feature: instruction approval update
   Scenario: The requester can update or remove the approval, after removal instruction should be updated
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-8:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-8-name",
       "entity_patterns": [
@@ -1543,7 +1573,7 @@ Feature: instruction approval update
     Then the response code should be 200  
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-8:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-8-name",
       "entity_patterns": [
@@ -1590,7 +1620,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-8/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -1614,7 +1644,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-8-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1647,7 +1677,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-8-description",
         "author": {
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -1662,13 +1692,19 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1677,13 +1713,19 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-2",
                     "name": "test-job-to-instruction-edit-2-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
                       "type": "rundeck",
                       "host": "http://example.com",
-                      "author": "test-user-author-1-id",
+                      "author": {
+                        "_id": "test-user-author-1-id",
+                        "name": "test-user-author-1-username"
+                      },
                       "auth_token": "test-auth-token"
                     },
                     "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1709,7 +1751,7 @@ Feature: instruction approval update
     """
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-8:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-8-name",
       "entity_patterns": [
@@ -1751,7 +1793,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-8
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-update-with-approval-8",
       "type": 0,
@@ -1765,7 +1807,7 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-8-description",
       "author": {
         "_id": "test-user-alternate-author-1-id",
-        "username": "test-user-alternate-author-1-username"
+        "name": "test-user-alternate-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -1780,13 +1822,19 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-1-external-id",
@@ -1795,13 +1843,19 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-2",
                   "name": "test-job-to-instruction-edit-2-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
                     "type": "rundeck",
                     "host": "http://example.com",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "auth_token": "test-auth-token"
                   },
                   "job_id": "test-job-to-instruction-edit-2-external-id",
@@ -1820,7 +1874,7 @@ Feature: instruction approval update
   Scenario: Only the user from approval should be able to approve
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-9-name",
       "entity_patterns": [
@@ -1861,35 +1915,35 @@ Feature: instruction approval update
     Then the response code should be 200  
     When I am authenticated with username "root" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9/approval:
-    """
+    """json
     {
       "approve": true
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
     """
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9/approval:
-    """
+    """json
     {
       "approve": true
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "role is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser2" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-9/approval:
-    """
+    """json
     {
       "approve": true
     }
@@ -1900,7 +1954,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-9
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "type": 0,
       "status": 0,
@@ -1913,7 +1967,7 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-9-description",
       "author": {
         "_id": "test-user-alternate-author-1-id",
-        "username": "test-user-alternate-author-1-username"
+        "name": "test-user-alternate-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -1928,7 +1982,10 @@ Feature: instruction approval update
                 {
                   "_id": "test-job-to-instruction-edit-1",
                   "name": "test-job-to-instruction-edit-1-name",
-                  "author": "test-user-author-1-id",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
                   "config": {
                     "_id": "test-job-config-to-edit-instruction",
                     "name": "test-job-config-to-edit-instruction-name",
@@ -1952,7 +2009,7 @@ Feature: instruction approval update
   Scenario: Only the user from approval should be able to dismiss
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3:
-    """
+    """json
     {
       "name": "test-instruction-to-update-with-approval-3-name",
       "entity_patterns": [
@@ -1995,7 +2052,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "approval": {
         "comment": "test comment",
@@ -2019,7 +2076,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-3-description",
         "author": {
           "_id": "test-user-author-1-id",
-          "username": "test-user-author-1-username"
+          "name": "test-user-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -2052,7 +2109,7 @@ Feature: instruction approval update
         "description": "test-instruction-to-update-with-approval-3-description",
         "author": {
           "_id": "test-user-alternate-author-1-id",
-          "username": "test-user-alternate-author-1-username"
+          "name": "test-user-alternate-author-1-username"
         },
         "enabled": true,
         "steps": [
@@ -2067,7 +2124,10 @@ Feature: instruction approval update
                   {
                     "_id": "test-job-to-instruction-edit-1",
                     "name": "test-job-to-instruction-edit-1-name",
-                    "author": "test-user-author-1-id",
+                    "author": {
+                      "_id": "test-user-author-1-id",
+                      "name": "test-user-author-1-username"
+                    },
                     "config": {
                       "_id": "test-job-config-to-edit-instruction",
                       "name": "test-job-config-to-edit-instruction-name",
@@ -2099,7 +2159,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-update-with-approval-3",
       "type": 0,
@@ -2114,7 +2174,7 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
@@ -2138,21 +2198,21 @@ Feature: instruction approval update
     """
     When I am authenticated with username "manageruser" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval:
-    """
+    """json
     {
       "approve": false
     }
     """
     Then the response code should be 403
     Then the response body should be:
-    """
+    """json
     {
       "error": "user is not assigned to approval"
     }
     """
     When I am authenticated with username "approveruser2" and password "test"
     When I do PUT /api/v4/cat/instructions/test-instruction-to-update-with-approval-3/approval:
-    """
+    """json
     {
       "approve": false
     }
@@ -2163,7 +2223,7 @@ Feature: instruction approval update
     When I do GET /api/v4/cat/instructions/test-instruction-to-update-with-approval-3
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "test-instruction-to-update-with-approval-3",
       "type": 0,
@@ -2178,7 +2238,7 @@ Feature: instruction approval update
       "description": "test-instruction-to-update-with-approval-3-description",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "enabled": true,
       "steps": [
diff --git a/tests/functional/features/api/cat/instructioncomments_get.feature b/tests/functional/features/api/cat/instructioncomments_get.feature
index e6196f01..5a73a516 100644
--- a/tests/functional/features/api/cat/instructioncomments_get.feature
+++ b/tests/functional/features/api/cat/instructioncomments_get.feature
@@ -7,18 +7,28 @@ Feature: get instruction comments
     When I do GET /api/v4/cat/instruction-comments/test-instruction-to-comments-get-1
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "data": [
         {
           "_id": "test-rating-to-comments-get-1",
           "comment": "test-rating-to-comments-get-1-comment",
-          "rating": 4.5
+          "rating": 4.5,
+          "created": 1596550518,
+          "user": {
+            "_id": "test-user-author-1-id",
+            "name": "test-user-author-1-username"
+          }
         },
         {
           "_id": "test-rating-to-comments-get-2",
           "comment": "test-rating-to-comments-get-2-comment",
-          "rating": 2
+          "rating": 2,
+          "created": 1596550518,
+          "user": {
+            "_id": "test-user-author-1-id",
+            "name": "test-user-author-1-username"
+          }
         }
       ],
       "meta": {
@@ -35,7 +45,7 @@ Feature: get instruction comments
     When I do GET /api/v4/cat/instruction-comments/test-instruction-to-comments-get-2
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "data": [],
       "meta": {
@@ -61,7 +71,7 @@ Feature: get instruction comments
     When I do GET /api/v4/cat/instruction-comments/notexist
     Then the response code should be 404
     Then the response body should be:
-    """
+    """json
     {
       "error": "Not found"
     }
diff --git a/tests/functional/features/api/cat/job_config_create.feature b/tests/functional/features/api/cat/job_config_create.feature
index c1f8f9e5..6f78f454 100644
--- a/tests/functional/features/api/cat/job_config_create.feature
+++ b/tests/functional/features/api/cat/job_config_create.feature
@@ -4,7 +4,7 @@ Feature: create a job's config
 
   Scenario: POST a valid job's config but unauthorized
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "name": "test-job-config-name",
       "host": "http://example.com",
@@ -17,7 +17,7 @@ Feature: create a job's config
   Scenario: POST a valid job's config but without permissions
     When I am noperms
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "name": "test-job-config-name",
       "host": "http://example.com",
@@ -30,7 +30,7 @@ Feature: create a job's config
   Scenario: POST a valid job's config
     When I am admin
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "name": "test-job-config-name",
       "host": "http://example.com",
@@ -40,14 +40,14 @@ Feature: create a job's config
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "name": "test-job-config-name",
       "host": "http://example.com",
       "type": "rundeck",
       "author": {
         "_id": "root",
-        "username": "root"
+        "name": "root"
       },
       "auth_token": "test-auth-token"
     }
@@ -56,7 +56,7 @@ Feature: create a job's config
   Scenario: POST a valid job's config
     When I am admin
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "name": "test-job-config-name-2",
       "host": "http://example.com",
@@ -71,7 +71,7 @@ Feature: create a job's config
   Scenario: POST a valid job's config with custom id
     When I am admin
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "_id": "custom-id",
       "name": "test-job-config-name-2-custom-id-1",
@@ -87,7 +87,7 @@ Feature: create a job's config
   Scenario: POST a valid job's config with custom id that already exist should cause dup error
     When I am admin
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "_id": "test-job-config-to-update",
       "name": "test-job-config-name-2-custom-id-2",
@@ -98,7 +98,7 @@ Feature: create a job's config
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "_id": "ID already exists."
@@ -109,13 +109,13 @@ Feature: create a job's config
   Scenario: POST an invalid job's config, where required fields are empty
     When I am admin
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
     }
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "auth_token": "AuthToken is missing.",
@@ -129,7 +129,7 @@ Feature: create a job's config
   Scenario: POST an invalid job's config, where host is not an url
     When I am admin
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "name": "test-job-config-name-3",
       "host": "abc",
@@ -139,7 +139,7 @@ Feature: create a job's config
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "host": "abc is not an url."
@@ -150,7 +150,7 @@ Feature: create a job's config
   Scenario: POST an invalid job's config, where type is not valid
     When I am admin
     When I do POST /api/v4/cat/job-configs:
-    """
+    """json
     {
       "name": "test-job-config-name-3",
       "host": "http://example.com",
@@ -160,7 +160,7 @@ Feature: create a job's config
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "type": "Type must be one of [awx, rundeck]."
diff --git a/tests/functional/features/api/cat/job_config_get.feature b/tests/functional/features/api/cat/job_config_get.feature
index 705d931a..3110fc88 100644
--- a/tests/functional/features/api/cat/job_config_get.feature
+++ b/tests/functional/features/api/cat/job_config_get.feature
@@ -7,7 +7,7 @@ Feature: get a job's config
     When I do GET /api/v4/cat/job-configs?search=test-job-config-name-to-get
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "data": [
         {
@@ -18,7 +18,7 @@ Feature: get a job's config
           "type": "rundeck",
           "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           }
         }
       ],
@@ -36,7 +36,7 @@ Feature: get a job's config
     When I do GET /api/v4/cat/job-configs?search=test-job-config-name-to-get&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -68,7 +68,7 @@ Feature: get a job's config
     When I do GET /api/v4/cat/job-configs/test-job-config-to-get
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "_id": "test-job-config-to-get",
       "auth_token": "test-auth-token",
@@ -77,7 +77,7 @@ Feature: get a job's config
       "type": "rundeck",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       }
     }
     """
@@ -87,7 +87,7 @@ Feature: get a job's config
     When I do GET /api/v4/cat/job-configs?search=test-job-config-check-linked&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -104,7 +104,7 @@ Feature: get a job's config
     When I do GET /api/v4/cat/job-configs/test-not-found
     Then the response code should be 404
     Then the response body should be:
-    """
+    """json
     {
       "error": "Not found"
     }
diff --git a/tests/functional/features/api/cat/job_config_update.feature b/tests/functional/features/api/cat/job_config_update.feature
index 51b852e7..59913582 100644
--- a/tests/functional/features/api/cat/job_config_update.feature
+++ b/tests/functional/features/api/cat/job_config_update.feature
@@ -2,7 +2,7 @@ Feature: Job's config update
 
   Scenario: PUT as unauthorized
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update:
-    """
+    """json
     {
       "name": "test-job-config-name-to-update",
       "type": "rundeck",
@@ -15,7 +15,7 @@ Feature: Job's config update
   Scenario: PUT without permissions
     When I am noperms
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update:
-    """
+    """json
     {
       "name": "test-job-config-name-to-update",
       "type": "rundeck",
@@ -28,7 +28,7 @@ Feature: Job's config update
   Scenario: PUT a valid job's config
     When I am admin
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update:
-    """
+    """json
     {
       "name": "test-job-config-name-to-update-new",
       "type": "rundeck",
@@ -38,13 +38,13 @@ Feature: Job's config update
     """
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "_id": "test-job-config-to-update",
       "auth_token": "new token",
       "author": {
         "_id": "root",
-        "username": "root"
+        "name": "root"
       },
       "host": "http://example-2.com",
       "name": "test-job-config-name-to-update-new",
@@ -55,7 +55,7 @@ Feature: Job's config update
   Scenario: PUT a valid job's config that doesn't exist
     When I am admin
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update-do-not-exists:
-    """
+    """json
     {
       "name": "test-job-config-name-do-not-exists",
       "type": "rundeck",
@@ -68,7 +68,7 @@ Feature: Job's config update
   Scenario: PUT a valid job's config with invalid host
     When I am admin
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update:
-    """
+    """json
     {
       "name": "test-job-config-name-to-update",
       "type": "rundeck",
@@ -89,7 +89,7 @@ Feature: Job's config update
   Scenario: PUT a valid job's config without any changes
     When I am admin
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update:
-    """
+    """json
     {
       "auth_token": "new token",
       "host": "http://example-2.com",
@@ -99,13 +99,13 @@ Feature: Job's config update
     """
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "_id": "test-job-config-to-update",
       "auth_token": "new token",
       "author": {
         "_id": "root",
-        "username": "root"
+        "name": "root"
       },
       "host": "http://example-2.com",
       "name": "test-job-config-name-to-update-new",
@@ -116,7 +116,7 @@ Feature: Job's config update
   Scenario: PUT an invalid job's config with wrong type
     When I am admin
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update:
-    """
+    """json
     {
       "auth_token": "new token",
       "host": "http://example-2.com",
@@ -137,7 +137,7 @@ Feature: Job's config update
   Scenario: PUT an invalid job's config with already existed name
     When I am admin
     When I do PUT /api/v4/cat/job-configs/test-job-config-to-update:
-    """
+    """json
     {
       "auth_token": "new token",
       "host": "http://example-2.com",
@@ -147,7 +147,7 @@ Feature: Job's config update
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "name": "Name already exists."
diff --git a/tests/functional/features/api/cat/job_create.feature b/tests/functional/features/api/cat/job_create.feature
index 374f85a0..274a681c 100644
--- a/tests/functional/features/api/cat/job_create.feature
+++ b/tests/functional/features/api/cat/job_create.feature
@@ -4,7 +4,7 @@ Feature: create a job
 
   Scenario: POST a valid job but unauthorized
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "name": "test-job-name",
       "config": "test-job-config-to-edit-job",
@@ -17,7 +17,7 @@ Feature: create a job
   Scenario: POST a valid job but without permissions
     When I am noperms
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "name": "test-job-name",
       "config": "test-job-config-to-edit-job",
@@ -30,7 +30,7 @@ Feature: create a job
   Scenario: POST a valid job
     When I am admin
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "name": "test-job-name",
       "config": "test-job-config-to-edit-job",
@@ -40,12 +40,12 @@ Feature: create a job
     """
     Then the response code should be 201
     Then the response body should contain:
-    """
+    """json
     {
       "name": "test-job-name",
       "author": {
         "_id": "root",
-        "username": "root"
+        "name": "root"
       },
       "config": {
         "_id": "test-job-config-to-edit-job",
@@ -62,7 +62,7 @@ Feature: create a job
   Scenario: POST a valid job
     When I am admin
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "name": "test-job-name-2",
       "config": "test-job-config-to-edit-job",
@@ -74,12 +74,12 @@ Feature: create a job
     When I do GET /api/v4/cat/jobs/{{ .lastResponse._id}}
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "name": "test-job-name-2",
       "author": {
         "_id": "root",
-        "username": "root"
+        "name": "root"
       },
       "config": {
         "_id": "test-job-config-to-edit-job",
@@ -96,7 +96,7 @@ Feature: create a job
   Scenario: POST a valid job with custom id
     When I am admin
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "_id": "custom-id",
       "name": "test-job-name-2-custom-id-1",
@@ -112,7 +112,7 @@ Feature: create a job
   Scenario: POST a valid job with custom id that already exist should cause dup error
     When I am admin
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "_id": "test-job-to-update",
       "name": "test-job-name-2-custom-id-2",
@@ -123,7 +123,7 @@ Feature: create a job
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "_id": "ID already exists."
@@ -134,7 +134,7 @@ Feature: create a job
   Scenario: POST an invalid job where name already exists
     When I am admin
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "name": "test-job-name-to-get",
       "config": "test-job-config-to-edit-job",
@@ -144,7 +144,7 @@ Feature: create a job
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "name": "Name already exists."
@@ -155,7 +155,7 @@ Feature: create a job
   Scenario: POST an invalid job where config doesn't exist
     When I am admin
     When I do POST /api/v4/cat/jobs:
-    """
+    """json
     {
       "name": "test-job-name-with-not-existed-config",
       "config": "test-job-config-not-exists",
@@ -165,8 +165,10 @@ Feature: create a job
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
-      "error": "job's config doesn't exist"
+      "errors": {
+        "config": "Config doesn't exist."
+      }
     }
     """
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/job_get.feature b/tests/functional/features/api/cat/job_get.feature
index adde965c..0bff8969 100644
--- a/tests/functional/features/api/cat/job_get.feature
+++ b/tests/functional/features/api/cat/job_get.feature
@@ -7,7 +7,7 @@ Feature: get a job
     When I do GET /api/v4/cat/jobs?search=test-job-name-to-get
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "data": [
         {
@@ -15,14 +15,17 @@ Feature: get a job
           "name": "test-job-name-to-get",
           "author": {
             "_id": "test-user-author-1-id",
-            "username": "test-user-author-1-username"
+            "name": "test-user-author-1-username"
           },
           "config": {
             "_id": "test-job-config-to-edit-job",
             "name": "test-job-config-to-edit-job-name",
             "type": "rundeck",
             "host": "http://example.com",
-            "author": "test-user-author-1-id",
+            "author": {
+              "_id": "test-user-author-1-id",
+              "name": "test-user-author-1-username"
+            },
             "auth_token": "test-auth-token"
           },
           "job_id": "test-job-id",
@@ -43,7 +46,7 @@ Feature: get a job
     When I do GET /api/v4/cat/jobs?search=test-job-name-to-get&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -75,20 +78,23 @@ Feature: get a job
     When I do GET /api/v4/cat/jobs/test-job-to-get
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "_id": "test-job-to-get",
       "name": "test-job-name-to-get",
       "author": {
         "_id": "test-user-author-1-id",
-        "username": "test-user-author-1-username"
+        "name": "test-user-author-1-username"
       },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
-        "author": "test-user-author-1-id",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "name": "test-user-author-1-username"
+        },
         "auth_token": "test-auth-token"
       },
       "job_id": "test-job-id",
@@ -101,11 +107,25 @@ Feature: get a job
     When I do GET /api/v4/cat/jobs?search=test-job-to-check-linked-to-manual-instruction&with_flags=true
     Then the response code should be 200
     Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "_id": "test-job-to-check-linked-to-manual-instruction",
+          "deletable": false,
+          "running": false
+        }
+      ]
+    }
     """
+    When I do GET /api/v4/cat/jobs?search=test-job-to-check-linked-to-auto-instruction&with_flags=true
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
     {
       "data": [
         {
-          test-job-to-check-linked-to-manual-instruction
+          "_id": "test-job-to-check-linked-to-auto-instruction",
           "deletable": false,
           "running": false
         }
@@ -118,7 +138,7 @@ Feature: get a job
     When I do GET /api/v4/cat/jobs/test-not-found
     Then the response code should be 404
     Then the response body should be:
-    """
+    """json
     {
       "error": "Not found"
     }
diff --git a/tests/functional/features/api/cat/job_update.feature b/tests/functional/features/api/cat/job_update.feature
index 1177c25a..9f519b30 100644
--- a/tests/functional/features/api/cat/job_update.feature
+++ b/tests/functional/features/api/cat/job_update.feature
@@ -2,7 +2,7 @@ Feature: Job update
 
   Scenario: PUT as unauthorized
     When I do PUT /api/v4/cat/jobs/test-job-to-update:
-    """
+    """json
     {
       "name": "test-job-name-to-update",
       "config": "test-job-config-to-edit-job",
@@ -15,7 +15,7 @@ Feature: Job update
   Scenario: PUT without permissions
     When I am noperms
     When I do PUT /api/v4/cat/jobs/test-job-to-update:
-    """
+    """json
     {
       "name": "test-job-name-to-update",
       "config": "test-job-config-to-edit-job",
@@ -28,7 +28,7 @@ Feature: Job update
   Scenario: PUT a valid job without any changes
     When I am admin
     When I do PUT /api/v4/cat/jobs/test-job-to-update:
-    """
+    """json
     {
       "name": "test-job-name-to-update",
       "config": "test-job-config-to-edit-job",
@@ -38,20 +38,23 @@ Feature: Job update
     """
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "_id": "test-job-to-update",
       "name": "test-job-name-to-update",
       "author": {
         "_id": "root",
-        "username": "root"
+        "name": "root"
       },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
-        "author": "test-user-author-1-id",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "name": "test-user-author-1-username"
+        },
         "auth_token": "test-auth-token"
       },
       "job_id": "test-job-id",
@@ -62,7 +65,7 @@ Feature: Job update
   Scenario: PUT a valid job
     When I am admin
     When I do PUT /api/v4/cat/jobs/test-job-to-update:
-    """
+    """json
     {
       "name": "test-job-name-to-update",
       "config": "test-job-config-to-edit-job",
@@ -72,20 +75,23 @@ Feature: Job update
     """
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "_id": "test-job-to-update",
       "name": "test-job-name-to-update",
       "author": {
         "_id": "root",
-        "username": "root"
+        "name": "root"
       },
       "config": {
         "_id": "test-job-config-to-edit-job",
         "name": "test-job-config-to-edit-job-name",
         "type": "rundeck",
         "host": "http://example.com",
-        "author": "test-user-author-1-id",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "name": "test-user-author-1-username"
+        },
         "auth_token": "test-auth-token"
       },
       "job_id": "test-job-id",
@@ -96,7 +102,7 @@ Feature: Job update
   Scenario: PUT a valid job that doesn't exist
     When I am admin
     When I do PUT /api/v4/cat/jobs/test-job-to-update-do-not-exists:
-    """
+    """json
     {
       "name": "test-job-name-do-not-exists",
       "config": "test-job-config-to-edit-job",
@@ -109,7 +115,7 @@ Feature: Job update
   Scenario: PUT an invalid job where name already exists
     When I am admin
     When I do PUT /api/v4/cat/jobs/test-job-to-update:
-    """
+    """json
     {
       "name": "test-job-name-to-get",
       "config": "test-job-config-to-edit-job",
@@ -119,7 +125,7 @@ Feature: Job update
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
       "errors": {
         "name": "Name already exists."
@@ -130,7 +136,7 @@ Feature: Job update
   Scenario: PUT an invalid job where config doesn't exist
     When I am admin
     When I do PUT /api/v4/cat/jobs/test-job-to-update:
-    """
+    """json
     {
       "name": "test-job-name-to-update",
       "config": "test-job-config-not-exist",
@@ -140,8 +146,10 @@ Feature: Job update
     """
     Then the response code should be 400
     Then the response body should be:
-    """
+    """json
     {
-      "error": "job's config doesn't exist"
+      "errors": {
+        "config": "Config doesn't exist."
+      }
     }
     """
\ No newline at end of file
-- 
2.25.1


From ad284bd247db76c3ceb82465e69effa54dbde49d Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Mon, 7 Jun 2021 12:58:54 +0700
Subject: [PATCH 58/66] Feature #3045 : Update alarm step output

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../engines/remediation/autoinstructionexecution_start.feature | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
index 348ae65f..65eb04e3 100644
--- a/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
+++ b/tests/functional/features/engines/remediation/autoinstructionexecution_start.feature
@@ -342,8 +342,7 @@ Feature: run an auto instruction
              {},
              {
                "_t": "autoinstructionalreadyrunning",
-               "a": "system",
-               "m": "Instruction test-instruction-to-run-auto-instruction-4-1-name."
+               "a": "system"
              },
              {
                "_t": "instructionjobcomplete",
-- 
2.25.1


From 42e6f76cdcdefd41f80f49b15943319d6075bc2c Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Mon, 7 Jun 2021 13:59:03 +0700
Subject: [PATCH 59/66] Update redis databases

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 lib/redis/redis.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/redis/redis.go b/lib/redis/redis.go
index 055f8208..1fd96ddc 100644
--- a/lib/redis/redis.go
+++ b/lib/redis/redis.go
@@ -32,8 +32,8 @@ const (
 	PBehaviorLockStorage
 	ActionScenarioStorage
 	EntityServiceStorage
+	// EngineLockStorage is used for all redis locks. It should be used by all engines.
 	EngineLockStorage
-	RemediationStorage
 )
 
 const PbehaviorKey = "pbehaviors"
-- 
2.25.1


From f75f213a19e793305feb4c40bd8ecac68e511737 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 8 Jun 2021 19:59:34 +0700
Subject: [PATCH 60/66] Feature #3045 : Filter alarm steps in instruction
 statistics

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction.json                     | 624 ++++++++++++++++++
 fixtures/instruction_execution.json           | 129 ++++
 fixtures/periodical_alarm.json                | 590 +++++++++++++++++
 lib/api/alarm/models.go                       |   1 +
 lib/canopsis/alarm/event_processor.go         |  12 +
 .../executor/instruction_executor.go          |   7 +-
 lib/canopsis/types/alarm_value.go             |   6 +-
 lib/canopsis/types/event.go                   |   3 +
 lib/canopsis/types/operation.go               |   6 +
 lib/canopsis/types/partial_update_alarm.go    |  15 +
 lib/canopsis/types/rpc.go                     |  14 +
 .../cat/instructionstats_executions.feature   | 469 ++++++++++++-
 .../instructionexecution_stats.feature        |  40 +-
 13 files changed, 1883 insertions(+), 33 deletions(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index be927bc0..318eef07 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -2786,5 +2786,629 @@
     "last_executed_on": 1618280210,
     "last_modified": 1596712203,
     "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-3",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-3-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-3-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-3-step-1",
+        "name": "test-instruction-to-stats-executions-get-3-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-3-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-3-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-3-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-3-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-3-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-3-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-3-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-3-step-2",
+        "name": "test-instruction-to-stats-executions-get-3-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-3-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-3-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-3-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-3-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-3-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-3-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-3-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-4",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-4-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-4-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-4-step-1",
+        "name": "test-instruction-to-stats-executions-get-4-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-4-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-4-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-4-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-4-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-4-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-4-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-4-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-4-step-2",
+        "name": "test-instruction-to-stats-executions-get-4-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-4-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-4-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-4-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-4-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-4-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-4-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-4-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-5",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-5-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-5-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-5-step-1",
+        "name": "test-instruction-to-stats-executions-get-5-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-5-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-5-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-5-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-5-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-5-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-5-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-5-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-5-step-2",
+        "name": "test-instruction-to-stats-executions-get-5-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-5-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-5-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-5-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-5-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-5-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-5-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-5-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-6",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-6-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-6-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-6-step-1",
+        "name": "test-instruction-to-stats-executions-get-6-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-6-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-6-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-6-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-6-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-6-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-6-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-6-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-6-step-2",
+        "name": "test-instruction-to-stats-executions-get-6-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-6-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-6-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-6-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-6-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-6-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-6-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-6-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-7",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-7-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-7-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-7-step-1",
+        "name": "test-instruction-to-stats-executions-get-7-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-7-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-7-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-7-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-7-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-7-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-7-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-7-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-7-step-2",
+        "name": "test-instruction-to-stats-executions-get-7-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-7-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-7-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-7-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-7-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-7-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-7-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-7-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-8",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-8-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-8-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-8-step-1",
+        "name": "test-instruction-to-stats-executions-get-8-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-8-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-8-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-8-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-8-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-8-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-8-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-8-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-8-step-2",
+        "name": "test-instruction-to-stats-executions-get-8-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-8-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-8-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-8-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-8-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-8-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-8-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-8-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-9",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-9-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-9-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-9-step-1",
+        "name": "test-instruction-to-stats-executions-get-9-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-9-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-9-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-9-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-9-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-9-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-9-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-9-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-9-step-2",
+        "name": "test-instruction-to-stats-executions-get-9-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-9-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-9-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-9-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-9-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-9-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-9-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-9-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
+  {
+    "_id": "test-instruction-to-stats-executions-get-10",
+    "type": 0,
+    "name": "test-instruction-to-stats-executions-get-10-name",
+    "entity_patterns": [
+      {
+        "name": "test filter"
+      }
+    ],
+    "description": "test-instruction-to-stats-executions-get-10-description",
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "steps": [
+      {
+        "_id": "test-instruction-to-stats-executions-get-10-step-1",
+        "name": "test-instruction-to-stats-executions-get-10-step-1-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-10-step-1-operation-1",
+            "name": "test-instruction-to-stats-executions-get-10-step-1-operation-1-name",
+            "time_to_complete": {
+              "seconds": 1,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-10-step-1-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-10-step-1-operation-2",
+            "name": "test-instruction-to-stats-executions-get-10-step-1-operation-2-name",
+            "time_to_complete": {
+              "seconds": 3,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-10-step-1-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-10-step-1-endpoint"
+      },
+      {
+        "_id": "test-instruction-to-stats-executions-get-10-step-2",
+        "name": "test-instruction-to-stats-executions-get-10-step-2-name",
+        "operations": [
+          {
+            "_id": "test-instruction-to-stats-executions-get-10-step-2-operation-1",
+            "name": "test-instruction-to-stats-executions-get-10-step-2-operation-1-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-10-step-2-operation-1-description",
+            "jobs": []
+          },
+          {
+            "_id": "test-instruction-to-stats-executions-get-10-step-2-operation-2",
+            "name": "test-instruction-to-stats-executions-get-10-step-2-operation-2-name",
+            "time_to_complete": {
+              "seconds": 6,
+              "unit": "s"
+            },
+            "description": "test-instruction-to-stats-executions-get-10-step-2-operation-2-description",
+            "jobs": []
+          }
+        ],
+        "stop_on_fail": true,
+        "endpoint": "test-instruction-to-stats-executions-get-10-step-2-endpoint"
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "last_executed_on": 1618280210,
+    "last_modified": 1596712203,
+    "created": 1596712203
   }
 ]
\ No newline at end of file
diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 40c51d18..3cb93084 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -217,5 +217,134 @@
     "complete_time": 400,
     "alarm_state": 3,
     "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-3",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-3",
+    "alarm": "test-alarm-to-stats-executions-get-3",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "alarm_state": 3,
+    "result_alarm_state": 1
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-4",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-4",
+    "alarm": "test-alarm-to-stats-executions-get-4",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "check_alarm_at": 1618280220,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-5-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-5",
+    "alarm": "test-alarm-to-stats-executions-get-5",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "check_alarm_at": 1618280220,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-5-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-5",
+    "alarm": "test-alarm-to-stats-executions-get-5",
+    "status": 2,
+    "started_at": 1618280230,
+    "completed_at": 1618280630,
+    "complete_time": 400,
+    "check_alarm_at": 1618280650,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-6-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-6",
+    "alarm": "test-alarm-to-stats-executions-get-6",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "check_alarm_at": 1618280220,
+    "alarm_state": 3,
+    "result_alarm_state": 2
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-6-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-6",
+    "alarm": "test-alarm-to-stats-executions-get-6",
+    "status": 2,
+    "started_at": 1618280230,
+    "completed_at": 1618280630,
+    "complete_time": 400,
+    "check_alarm_at": 1618280650,
+    "alarm_state": 2,
+    "result_alarm_state": 1
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-7-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-7",
+    "alarm": "test-alarm-to-stats-executions-get-7",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "check_alarm_at": 1618280220,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-7-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-8",
+    "alarm": "test-alarm-to-stats-executions-get-7",
+    "status": 2,
+    "started_at": 1618280230,
+    "completed_at": 1618280630,
+    "complete_time": 400,
+    "check_alarm_at": 1618280650,
+    "alarm_state": 3,
+    "result_alarm_state": 3
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-8-1",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-9",
+    "alarm": "test-alarm-to-stats-executions-get-8",
+    "status": 2,
+    "started_at": 1618279610,
+    "completed_at": 1618280210,
+    "complete_time": 400,
+    "check_alarm_at": 1618280220,
+    "alarm_state": 3,
+    "result_alarm_state": 2
+  },
+  {
+    "_id": "test-instruction-execution-to-stats-executions-get-8-2",
+    "instruction_modified_on": 1596712203,
+    "instruction": "test-instruction-to-stats-executions-get-10",
+    "alarm": "test-alarm-to-stats-executions-get-8",
+    "status": 2,
+    "started_at": 1618280230,
+    "completed_at": 1618280630,
+    "complete_time": 400,
+    "check_alarm_at": 1618280650,
+    "alarm_state": 2,
+    "result_alarm_state": 1
   }
 ]
\ No newline at end of file
diff --git a/fixtures/periodical_alarm.json b/fixtures/periodical_alarm.json
index 19d3b1ec..072cbd24 100644
--- a/fixtures/periodical_alarm.json
+++ b/fixtures/periodical_alarm.json
@@ -4017,5 +4017,595 @@
       "infos_rule_version": {
       }
     }
+  },
+  {
+    "_id": "test-alarm-to-stats-executions-get-3",
+    "d": "test-resource-to-stats-executions-get-3/test-component-to-stats-executions-get-3",
+    "t": 1618279310,
+    "v": {
+      "state": {
+        "_t": "statedec",
+        "t": 1618280220,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1618279310,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "statusinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "stateinc",
+          "t": 1618279510,
+          "a": "",
+          "m": "",
+          "val": 3
+        },
+        {
+          "_t": "comment",
+          "t": 1618279511,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618279610,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-3"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280210,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-3"
+        },
+        {
+          "_t": "ack",
+          "t": 1618280219,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "statedec",
+          "t": 1618280220,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "ack",
+          "t": 1618280221,
+          "a": "",
+          "m": ""
+        }
+      ],
+      "component": "test-component-to-stats-executions-get-3",
+      "connector": "test-connector-to-stats-executions-get-3",
+      "connector_name": "test-connector-name-to-stats-executions-get-3",
+      "creation_date": 1618279310,
+      "resource": "test-resource-to-stats-executions-get-3"
+    }
+  },
+  {
+    "_id": "test-alarm-to-stats-executions-get-4",
+    "d": "test-resource-to-stats-executions-get-4/test-component-to-stats-executions-get-4",
+    "t": 1618279310,
+    "v": {
+      "state": {
+        "_t": "statedec",
+        "t": 1618280220,
+        "a": "",
+        "m": "",
+        "val": 2
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1618279310,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "statusinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "stateinc",
+          "t": 1618279510,
+          "a": "",
+          "m": "",
+          "val": 3
+        },
+        {
+          "_t": "comment",
+          "t": 1618279511,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618279610,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-4"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280210,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-4"
+        },
+        {
+          "_t": "ack",
+          "t": 1618280220,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "statedec",
+          "t": 1618280221,
+          "a": "",
+          "m": "",
+          "val": 2
+        }
+      ],
+      "component": "test-component-to-stats-executions-get-4",
+      "connector": "test-connector-to-stats-executions-get-4",
+      "connector_name": "test-connector-name-to-stats-executions-get-4",
+      "creation_date": 1618279310,
+      "resource": "test-resource-to-stats-executions-get-4"
+    }
+  },
+  {
+    "_id": "test-alarm-to-stats-executions-get-5",
+    "d": "test-resource-to-stats-executions-get-5/test-component-to-stats-executions-get-5",
+    "t": 1618279310,
+    "v": {
+      "state": {
+        "_t": "stateinc",
+        "t": 1618279510,
+        "a": "",
+        "m": "",
+        "val": 3
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1618279310,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "statusinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "stateinc",
+          "t": 1618279510,
+          "a": "",
+          "m": "",
+          "val": 3
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618279610,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-5-1"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280210,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-5-1"
+        },
+        {
+          "_t": "ack",
+          "t": 1618280220,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618280230,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-5-2"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280630,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-5-2"
+        },
+        {
+          "_t": "comment",
+          "t": 1618280650,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "comment",
+          "t": 1618280651,
+          "a": "",
+          "m": ""
+        }
+      ],
+      "component": "test-component-to-stats-executions-get-5",
+      "connector": "test-connector-to-stats-executions-get-5",
+      "connector_name": "test-connector-name-to-stats-executions-get-5",
+      "creation_date": 1618279310,
+      "resource": "test-resource-to-stats-executions-get-5"
+    }
+  },
+  {
+    "_id": "test-alarm-to-stats-executions-get-6",
+    "d": "test-resource-to-stats-executions-get-6/test-component-to-stats-executions-get-6",
+    "t": 1618279310,
+    "v": {
+      "state": {
+        "_t": "statedec",
+        "t": 1618280650,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1618279310,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "statusinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "stateinc",
+          "t": 1618279510,
+          "a": "",
+          "m": "",
+          "val": 3
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618279610,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-6-1"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280210,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-6-1"
+        },
+        {
+          "_t": "ack",
+          "t": 1618280221,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "statedec",
+          "t": 1618280222,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "comment",
+          "t": 1618280223,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618280230,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-6-2"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280630,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-6-2"
+        },
+        {
+          "_t": "comment",
+          "t": 1618280640,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "statedec",
+          "t": 1618280650,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "comment",
+          "t": 1618280651,
+          "a": "",
+          "m": ""
+        }
+      ],
+      "component": "test-component-to-stats-executions-get-6",
+      "connector": "test-connector-to-stats-executions-get-6",
+      "connector_name": "test-connector-name-to-stats-executions-get-6",
+      "creation_date": 1618279310,
+      "resource": "test-resource-to-stats-executions-get-6"
+    }
+  },
+  {
+    "_id": "test-alarm-to-stats-executions-get-7",
+    "d": "test-resource-to-stats-executions-get-7/test-component-to-stats-executions-get-7",
+    "t": 1618279310,
+    "v": {
+      "state": {
+        "_t": "stateinc",
+        "t": 1618279510,
+        "a": "",
+        "m": "",
+        "val": 3
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1618279310,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "statusinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "stateinc",
+          "t": 1618279510,
+          "a": "",
+          "m": "",
+          "val": 3
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618279610,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-7-1"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280210,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-7-1"
+        },
+        {
+          "_t": "ack",
+          "t": 1618280220,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618280230,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-7-2"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280630,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-7-2"
+        },
+        {
+          "_t": "comment",
+          "t": 1618280650,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "comment",
+          "t": 1618280651,
+          "a": "",
+          "m": ""
+        }
+      ],
+      "component": "test-component-to-stats-executions-get-7",
+      "connector": "test-connector-to-stats-executions-get-7",
+      "connector_name": "test-connector-name-to-stats-executions-get-7",
+      "creation_date": 1618279310,
+      "resource": "test-resource-to-stats-executions-get-7"
+    }
+  },
+  {
+    "_id": "test-alarm-to-stats-executions-get-8",
+    "d": "test-resource-to-stats-executions-get-8/test-component-to-stats-executions-get-8",
+    "t": 1618279310,
+    "v": {
+      "state": {
+        "_t": "statedec",
+        "t": 1618280650,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "status": {
+        "_t": "statusinc",
+        "t": 1618279310,
+        "a": "",
+        "m": "",
+        "val": 1
+      },
+      "steps": [
+        {
+          "_t": "stateinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "statusinc",
+          "t": 1618279310,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "stateinc",
+          "t": 1618279510,
+          "a": "",
+          "m": "",
+          "val": 3
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618279610,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-8-1"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280210,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-8-1"
+        },
+        {
+          "_t": "ack",
+          "t": 1618280220,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "statedec",
+          "t": 1618280222,
+          "a": "",
+          "m": "",
+          "val": 2
+        },
+        {
+          "_t": "comment",
+          "t": 1618280223,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "instructionstart",
+          "t": 1618280230,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-8-2"
+        },
+        {
+          "_t": "instructioncomplete",
+          "t": 1618280630,
+          "a": "",
+          "m": "",
+          "exec": "test-instruction-execution-to-stats-executions-get-8-2"
+        },
+        {
+          "_t": "comment",
+          "t": 1618280640,
+          "a": "",
+          "m": ""
+        },
+        {
+          "_t": "statedec",
+          "t": 1618280650,
+          "a": "",
+          "m": "",
+          "val": 1
+        },
+        {
+          "_t": "comment",
+          "t": 1618280651,
+          "a": "",
+          "m": ""
+        }
+      ],
+      "component": "test-component-to-stats-executions-get-8",
+      "connector": "test-connector-to-stats-executions-get-8",
+      "connector_name": "test-connector-name-to-stats-executions-get-8",
+      "creation_date": 1618279310,
+      "resource": "test-resource-to-stats-executions-get-8"
+    }
   }
 ]
\ No newline at end of file
diff --git a/lib/api/alarm/models.go b/lib/api/alarm/models.go
index 49f4ad81..660193e3 100644
--- a/lib/api/alarm/models.go
+++ b/lib/api/alarm/models.go
@@ -136,6 +136,7 @@ type AlarmStep struct {
 	Message   string          `bson:"m" json:"m"`
 	Value     types.CpsNumber `bson:"val" json:"val"`
 	Initiator string          `bson:"initiator" json:"initiator"`
+	Execution string          `bson:"exec,omitempty" json:"-"`
 }
 
 type AlarmTicket struct {
diff --git a/lib/canopsis/alarm/event_processor.go b/lib/canopsis/alarm/event_processor.go
index 841cc554..9a55dc85 100644
--- a/lib/canopsis/alarm/event_processor.go
+++ b/lib/canopsis/alarm/event_processor.go
@@ -394,6 +394,18 @@ func (s *eventProcessor) createOperationFromEvent(event *types.Event) types.Oper
 			Output:        event.Output,
 			Author:        event.Author,
 		}
+	case types.EventTypeInstructionStarted, types.EventTypeInstructionPaused,
+		types.EventTypeInstructionResumed, types.EventTypeInstructionCompleted,
+		types.EventTypeInstructionFailed, types.EventTypeInstructionAborted,
+		types.EventTypeAutoInstructionStarted, types.EventTypeAutoInstructionCompleted,
+		types.EventTypeAutoInstructionFailed, types.EventTypeAutoInstructionAlreadyRunning,
+		types.EventTypeInstructionJobStarted, types.EventTypeInstructionJobCompleted,
+		types.EventTypeInstructionJobAborted, types.EventTypeInstructionJobFailed:
+		parameters = types.OperationInstructionParameters{
+			Execution: event.Execution,
+			Output:    event.Output,
+			Author:    event.Author,
+		}
 	default:
 		parameters = types.OperationParameters{
 			Output: event.Output,
diff --git a/lib/canopsis/operation/executor/instruction_executor.go b/lib/canopsis/operation/executor/instruction_executor.go
index 484beadf..f5244458 100644
--- a/lib/canopsis/operation/executor/instruction_executor.go
+++ b/lib/canopsis/operation/executor/instruction_executor.go
@@ -62,9 +62,9 @@ func (e *instructionExecutor) Exec(
 	time types.CpsTime,
 	role, initiator string,
 ) (types.AlarmChangeType, error) {
-	var params types.OperationParameters
+	var params types.OperationInstructionParameters
 	var ok bool
-	if params, ok = operation.Parameters.(types.OperationParameters); !ok {
+	if params, ok = operation.Parameters.(types.OperationInstructionParameters); !ok {
 		return "", fmt.Errorf("invalid parameters")
 	}
 
@@ -78,9 +78,10 @@ func (e *instructionExecutor) Exec(
 		return "", nil
 	}
 
-	err := alarm.PartialUpdateAddStep(
+	err := alarm.PartialUpdateAddInstructionStep(
 		alarmStepType,
 		time,
+		params.Execution,
 		params.Author,
 		params.Output,
 		role,
diff --git a/lib/canopsis/types/alarm_value.go b/lib/canopsis/types/alarm_value.go
index 02d9c3df..9ec99c73 100644
--- a/lib/canopsis/types/alarm_value.go
+++ b/lib/canopsis/types/alarm_value.go
@@ -22,8 +22,10 @@ type AlarmStep struct {
 	Role                   string      `bson:"role,omitempty" json:"role,omitempty"`
 	Value                  CpsNumber   `bson:"val" json:"val"`
 	StateCounter           CropCounter `bson:"statecounter,omitempty" json:"statecounter,omitempty"`
-	PbehaviorCanonicalType string      `bson:"pbehavior_canonical_type,omitempty"`
-	Initiator              string      `bson:"initiator,omitempty"`
+	PbehaviorCanonicalType string      `bson:"pbehavior_canonical_type,omitempty" json:"pbehavior_canonical_type,omitempty"`
+	Initiator              string      `bson:"initiator,omitempty" json:"initiator,omitempty"`
+	// Execution contains id if instruction execution for instruction steps only.
+	Execution string `bson:"exec,omitempty" json:"exec,omitempty"`
 }
 
 // NewAlarmStep returns an AlarmStep.
diff --git a/lib/canopsis/types/event.go b/lib/canopsis/types/event.go
index 99971b40..239a4d1e 100644
--- a/lib/canopsis/types/event.go
+++ b/lib/canopsis/types/event.go
@@ -199,6 +199,9 @@ type Event struct {
 
 	// IdleRuleApply is used if event is emitted by idle rule.
 	IdleRuleApply string `bson:"idle_rule_apply,omitempty" json:"idle_rule_apply,omitempty"`
+
+	// Execution is used only for instruction events: EventTypeInstructionStarted, EventTypeInstructionCompleted, etc..
+	Execution string `bson:"execution,omitempty" json:"execution,omitempty"`
 }
 
 // ContextInformation regroup context values necessary for creating a new entity
diff --git a/lib/canopsis/types/operation.go b/lib/canopsis/types/operation.go
index 125ffa39..173ed289 100644
--- a/lib/canopsis/types/operation.go
+++ b/lib/canopsis/types/operation.go
@@ -127,6 +127,12 @@ type OperationPbhParameters struct {
 	Author        string        `json:"author"`
 }
 
+type OperationInstructionParameters struct {
+	Execution string `bson:"execution" json:"execution"`
+	Output    string `bson:"output" json:"output"`
+	Author    string `bson:"author" json:"author"`
+}
+
 func renderTemplate(templateStr string, data interface{}, f template.FuncMap) (string, error) {
 	t, err := template.New("template").Funcs(f).Parse(templateStr)
 	if err != nil {
diff --git a/lib/canopsis/types/partial_update_alarm.go b/lib/canopsis/types/partial_update_alarm.go
index 1e335584..17442a3c 100644
--- a/lib/canopsis/types/partial_update_alarm.go
+++ b/lib/canopsis/types/partial_update_alarm.go
@@ -569,6 +569,21 @@ func (a *Alarm) PartialUpdateComment(timestamp CpsTime, author, output, role, in
 	return nil
 }
 
+func (a *Alarm) PartialUpdateAddInstructionStep(stepType string, timestamp CpsTime,
+	execution, author, msg, role, initiator string) error {
+	newStep := NewAlarmStep(stepType, timestamp, author, msg, role, initiator)
+	err := a.Value.Steps.Add(newStep)
+	if err != nil {
+		return err
+	}
+
+	newStep.Execution = execution
+
+	a.addUpdate("$push", bson.M{"v.steps": newStep})
+
+	return nil
+}
+
 func (a *Alarm) PartialUpdateCropSteps() {
 	if a.CropSteps() {
 		a.addUpdate("$set", bson.M{"v.steps": a.Value.Steps})
diff --git a/lib/canopsis/types/rpc.go b/lib/canopsis/types/rpc.go
index f4569ec3..15f35e20 100644
--- a/lib/canopsis/types/rpc.go
+++ b/lib/canopsis/types/rpc.go
@@ -63,6 +63,19 @@ func (e *RPCAxeEvent) UnmarshalJSON(b []byte) error {
 			return fmt.Errorf("cannot decode map struct : %v", err)
 		}
 		e.Parameters = params
+	case EventTypeInstructionStarted, EventTypeInstructionPaused,
+		EventTypeInstructionResumed, EventTypeInstructionCompleted,
+		EventTypeInstructionFailed, EventTypeInstructionAborted,
+		EventTypeAutoInstructionStarted, EventTypeAutoInstructionCompleted,
+		EventTypeAutoInstructionFailed, EventTypeAutoInstructionAlreadyRunning,
+		EventTypeInstructionJobStarted, EventTypeInstructionJobCompleted,
+		EventTypeInstructionJobAborted, EventTypeInstructionJobFailed:
+		var params OperationInstructionParameters
+		err := mapstructure.Decode(e.Parameters, &params)
+		if err != nil {
+			return fmt.Errorf("cannot decode map struct : %v", err)
+		}
+		e.Parameters = params
 	default:
 		var params OperationParameters
 		err := mapstructure.Decode(e.Parameters, &params)
@@ -151,4 +164,5 @@ type RPCRemediationJobEvent struct {
 	JobExecutionID string  `json:"job_execution_id"`
 	Output         string  `json:"output"`
 	Author         string  `json:"author"`
+	ExecutionID    string  `json:"execution"`
 }
diff --git a/tests/functional/features/api/cat/instructionstats_executions.feature b/tests/functional/features/api/cat/instructionstats_executions.feature
index c5947e0e..8c01a165 100644
--- a/tests/functional/features/api/cat/instructionstats_executions.feature
+++ b/tests/functional/features/api/cat/instructionstats_executions.feature
@@ -7,7 +7,7 @@ Feature: get instruction statistics
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -32,7 +32,7 @@ Feature: get instruction statistics
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions?from=1600000000&to=1700000000
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -53,7 +53,7 @@ Feature: get instruction statistics
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions?from=1500000000&to=1600000000
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "data": [
         {
@@ -72,7 +72,7 @@ Feature: get instruction statistics
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions?from=1300000000&to=1400000000
     Then the response code should be 200
     Then the response body should be:
-    """
+    """json
     {
       "data": [],
       "meta": {
@@ -89,7 +89,7 @@ Feature: get instruction statistics
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-1/executions
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -117,6 +117,463 @@ Feature: get instruction statistics
     When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-2/executions
     Then the response code should be 404
 
+  Scenario: given get request should return only corresponding alarm steps
+    When I am admin
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-3/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-3",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618279511
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280219
+                },
+                {
+                  "_t": "statedec",
+                  "t": 1618280220,
+                  "val": 1
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280210
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-4/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-4",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618279511
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280220
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280210
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-5/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-5",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280220
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618280230
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280630
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618280650
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280630
+        },
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-5",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280220
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280210
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-6/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-6",
+            "v": {
+              "steps": [
+                {
+                  "_t": "statedec",
+                  "t": 1618280222,
+                  "val": 2
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618280223
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618280230
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280630
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618280640
+                },
+                {
+                  "_t": "statedec",
+                  "t": 1618280650,
+                  "val": 1
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280630
+        },
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-6",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280221
+                },
+                {
+                  "_t": "statedec",
+                  "t": 1618280222,
+                  "val": 2
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280210
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 2
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-7/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-7",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280220
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280210
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-8/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-7",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280220
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618280230
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280630
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618280650
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280630
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-9/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-8",
+            "v": {
+              "steps": [
+                {
+                  "_t": "stateinc",
+                  "t": 1618279510,
+                  "val": 3
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618279610
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280210
+                },
+                {
+                  "_t": "ack",
+                  "t": 1618280220
+                },
+                {
+                  "_t": "statedec",
+                  "val": 2
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280210
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instruction-stats/test-instruction-to-stats-executions-get-10/executions
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "alarm": {
+            "_id": "test-alarm-to-stats-executions-get-8",
+            "v": {
+              "steps": [
+                {
+                  "_t": "statedec",
+                  "t": 1618280222,
+                  "val": 2
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618280223
+                },
+                {
+                  "_t": "instructionstart",
+                  "t": 1618280230
+                },
+                {
+                  "_t": "instructioncomplete",
+                  "t": 1618280630
+                },
+                {
+                  "_t": "comment",
+                  "t": 1618280640
+                },
+                {
+                  "_t": "statedec",
+                  "t": 1618280650,
+                  "val": 1
+                }
+              ]
+            }
+          },
+          "executed_on": 1618280630
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+
   Scenario: given get request and no auth user should not allow access
     When I do GET /api/v4/cat/instruction-stats/notexist/executions
     Then the response code should be 401
@@ -131,7 +588,7 @@ Feature: get instruction statistics
     When I do GET /api/v4/cat/instruction-stats/notexist/executions?from=1500000000&to=1700000000
     Then the response code should be 404
     Then the response body should be:
-    """
+    """json
     {
       "error": "Not found"
     }
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
index 558ad6ca..22428560 100644
--- a/tests/functional/features/engines/remediation/instructionexecution_stats.feature
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -4,7 +4,7 @@ Feature: update an instruction statistics
   Scenario: given manual instruction execution should update statistics
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 0,
       "name": "test-instruction-to-stats-update-1-name",
@@ -44,7 +44,7 @@ Feature: update an instruction statistics
     When I save response instructionID={{ .lastResponse._id }}
     When I save response creationTime={{ .lastResponse.last_modified }}
     When I send an event:
-    """
+    """json
     {
       "connector": "test-connector-to-stats-update-1",
       "connector_name": "test-connector-name-to-stats-update-1",
@@ -57,7 +57,7 @@ Feature: update an instruction statistics
     }
     """
     When I send an event:
-    """
+    """json
     {
       "connector": "test-connector-to-stats-update-1",
       "connector_name": "test-connector-name-to-stats-update-1",
@@ -77,7 +77,7 @@ Feature: update an instruction statistics
     Then the response code should be 200
     When I save response alarm2ID={{ (index .lastResponse.data 0)._id }}
     When I do POST /api/v4/cat/executions:
-    """
+    """json
     {
       "alarm": "{{ .alarm1ID }}",
       "instruction": "{{ .instructionID }}"
@@ -92,7 +92,7 @@ Feature: update an instruction statistics
     When I save response execution1Time={{ .lastResponse.completed_at }}
     When I wait the end of event processing
     When I send an event:
-    """
+    """json
     {
       "connector": "test-connector-to-stats-update-1",
       "connector_name": "test-connector-name-to-stats-update-1",
@@ -107,7 +107,7 @@ Feature: update an instruction statistics
     When I wait the end of event processing
     When I wait 5s
     When I do POST /api/v4/cat/executions:
-    """
+    """json
     {
       "alarm": "{{ .alarm2ID }}",
       "instruction": "{{ .instructionID }}"
@@ -125,7 +125,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/summary
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "{{ .instructionID }}",
       "alarm_states": {
@@ -153,7 +153,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/changes
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -188,7 +188,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/executions
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -242,10 +242,6 @@ Feature: update an instruction statistics
                 {
                   "_t": "statedec",
                   "val": 0
-                },
-                {
-                  "_t": "statusdec",
-                  "val": 0
                 }
               ]
             }
@@ -267,7 +263,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-stats-update-1-name&with_month_executions=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -282,7 +278,7 @@ Feature: update an instruction statistics
   Scenario: given auto instruction execution should update statistics
     When I am admin
     When I do POST /api/v4/cat/instructions:
-    """
+    """json
     {
       "type": 1,
       "name": "test-instruction-to-stats-update-2-name",
@@ -314,7 +310,7 @@ Feature: update an instruction statistics
     When I save response creationTime={{ .lastResponse.last_modified }}
     When I wait the next periodical process
     When I send an event:
-    """
+    """json
     {
       "connector": "test-connector-to-stats-update-2",
       "connector_name": "test-connector-name-to-stats-update-2",
@@ -331,7 +327,7 @@ Feature: update an instruction statistics
     Then the response code should be 200
     When I save response alarm1ID={{ (index .lastResponse.data 0)._id }}
     When I send an event:
-    """
+    """json
     {
       "connector": "test-connector-to-stats-update-2",
       "connector_name": "test-connector-name-to-stats-update-2",
@@ -346,7 +342,7 @@ Feature: update an instruction statistics
     When I wait the end of event processing
     When I wait 5s
     When I send an event:
-    """
+    """json
     {
       "connector": "test-connector-to-stats-update-2",
       "connector_name": "test-connector-name-to-stats-update-2",
@@ -366,7 +362,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/summary
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "_id": "{{ .instructionID }}",
       "alarm_states": {
@@ -394,7 +390,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/changes
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -429,7 +425,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instruction-stats/{{ .instructionID }}/executions
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
@@ -523,7 +519,7 @@ Feature: update an instruction statistics
     When I do GET /api/v4/cat/instructions?search=test-instruction-to-stats-update-2-name&with_month_executions=true
     Then the response code should be 200
     Then the response body should contain:
-    """
+    """json
     {
       "data": [
         {
-- 
2.25.1


From 6b2d63b929a561cb33f4570a465a13c0c53258fd Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Tue, 8 Jun 2021 20:24:49 +0700
Subject: [PATCH 61/66] Feature #3045 : Add migration

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 .../008_migrate_alarm_steps.js                | 63 +++++++++++++++++++
 1 file changed, 63 insertions(+)
 create mode 100644 database/migrations/remediationnextstep/008_migrate_alarm_steps.js

diff --git a/database/migrations/remediationnextstep/008_migrate_alarm_steps.js b/database/migrations/remediationnextstep/008_migrate_alarm_steps.js
new file mode 100644
index 00000000..6b57961c
--- /dev/null
+++ b/database/migrations/remediationnextstep/008_migrate_alarm_steps.js
@@ -0,0 +1,63 @@
+(function () {
+    var stepTypes = [
+        "instructionstart",
+        "instructionpause",
+        "instructionresume",
+        "instructioncomplete",
+        "instructionfail",
+        "instructionabort",
+        "instructionjobstart",
+        "instructionjobcomplete",
+        "instructionjobabort",
+        "instructionjobfail",
+    ];
+    var pipeline = [
+        {
+            $lookup: {
+                from: "periodical_alarm",
+                localField: "alarm",
+                foreignField: "_id",
+                as: "alarm",
+            }
+        },
+        {$unwind: {path: "$alarm", preserveNullAndEmptyArrays: true}},
+        {
+            $lookup: {
+                from: "instruction",
+                localField: "instruction",
+                foreignField: "_id",
+                as: "instruction",
+            }
+        },
+        {$unwind: {path: "$instruction", preserveNullAndEmptyArrays: true}},
+    ];
+    var cursor = db.instruction_execution.aggregate(pipeline);
+
+    while (cursor.hasNext()) {
+        var doc = cursor.next();
+        if (!doc.instruction) {
+            return;
+        }
+
+        var output = "Instruction " + doc.instruction.name;
+
+        if (!doc.alarm || !doc.alarm.v || !doc.alarm.v.steps) {
+            return;
+        }
+
+        var steps = [];
+        doc.alarm.v.steps.forEach(function (step) {
+            if (step._t && step.m && stepTypes.includes(step._t) && step.m.startsWith(output)) {
+                step.exec = doc._id;
+            }
+
+            steps.push(step);
+        });
+
+        db.periodical_alarm.updateOne({_id: doc.alarm._id}, {
+            "$set": {
+                "v.steps": steps,
+            }
+        });
+    }
+})();
-- 
2.25.1


From 18ed57eb0d090d00a847d25c3d281dd75cee4b49 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 9 Jun 2021 10:40:58 +0700
Subject: [PATCH 62/66] Feature #3045 : Fix fixture

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 fixtures/instruction_execution.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/fixtures/instruction_execution.json b/fixtures/instruction_execution.json
index 3cb93084..18f5ee00 100644
--- a/fixtures/instruction_execution.json
+++ b/fixtures/instruction_execution.json
@@ -227,6 +227,7 @@
     "started_at": 1618279610,
     "completed_at": 1618280210,
     "complete_time": 400,
+    "check_alarm_at": 1618280220,
     "alarm_state": 3,
     "result_alarm_state": 1
   },
-- 
2.25.1


From 2f7724ea72ca0e2c09b6951a99ee399d1b611652 Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Wed, 9 Jun 2021 15:09:03 +0700
Subject: [PATCH 63/66] Fix context creation

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 tests/functional/main_test.go | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/tests/functional/main_test.go b/tests/functional/main_test.go
index 85032c73..7be1838d 100644
--- a/tests/functional/main_test.go
+++ b/tests/functional/main_test.go
@@ -47,7 +47,8 @@ func (f *arrayFlag) Set(value string) error {
 }
 
 func TestMain(m *testing.M) {
-	ctx := context.Background()
+	ctx, cancel := context.WithCancel(context.Background())
+	defer cancel()
 
 	// Test allowed only with "API_URL" environment variable
 	if _, err := bdd.GetApiURL(); err != nil {
@@ -90,8 +91,6 @@ func TestMain(m *testing.M) {
 			Logger()
 	}
 
-	ctx, cancel := context.WithCancel(context.Background())
-	defer cancel()
 	err := bdd.RunDummyHttpServer(ctx, fmt.Sprintf("localhost:%d", flags.dummyHttpPort))
 	if err != nil {
 		log.Fatal(err)
-- 
2.25.1


From fffa161c6a5f8823b7b28e3aec8d829efcda8f3e Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Thu, 10 Jun 2021 15:46:43 +0700
Subject: [PATCH 64/66] Fix merge conflicts

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 docs/docs.go                                  |   6 +-
 docs/swagger.json                             |   6 +-
 docs/swagger.yaml                             |   6 +-
 lib/bdd/DummyHttpServer.go                    |  43 ++++-
 .../remediation/jobexecution_start.feature    | 154 ++++++++++++++++--
 5 files changed, 190 insertions(+), 25 deletions(-)

diff --git a/docs/docs.go b/docs/docs.go
index e7b07eef..cad2f876 100644
--- a/docs/docs.go
+++ b/docs/docs.go
@@ -11427,13 +11427,17 @@ var doc = `{
                 "a": {
                     "type": "string"
                 },
+                "exec": {
+                    "description": "Execution contains id if instruction execution for instruction steps only.",
+                    "type": "string"
+                },
                 "initiator": {
                     "type": "string"
                 },
                 "m": {
                     "type": "string"
                 },
-                "pbehaviorCanonicalType": {
+                "pbehavior_canonical_type": {
                     "type": "string"
                 },
                 "role": {
diff --git a/docs/swagger.json b/docs/swagger.json
index e242d382..e99d00e0 100644
--- a/docs/swagger.json
+++ b/docs/swagger.json
@@ -11411,13 +11411,17 @@
                 "a": {
                     "type": "string"
                 },
+                "exec": {
+                    "description": "Execution contains id if instruction execution for instruction steps only.",
+                    "type": "string"
+                },
                 "initiator": {
                     "type": "string"
                 },
                 "m": {
                     "type": "string"
                 },
-                "pbehaviorCanonicalType": {
+                "pbehavior_canonical_type": {
                     "type": "string"
                 },
                 "role": {
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
index 3f9eb320..b054822e 100644
--- a/docs/swagger.yaml
+++ b/docs/swagger.yaml
@@ -2850,11 +2850,15 @@ definitions:
         type: string
       a:
         type: string
+      exec:
+        description: Execution contains id if instruction execution for instruction
+          steps only.
+        type: string
       initiator:
         type: string
       m:
         type: string
-      pbehaviorCanonicalType:
+      pbehavior_canonical_type:
         type: string
       role:
         type: string
diff --git a/lib/bdd/DummyHttpServer.go b/lib/bdd/DummyHttpServer.go
index 9bc3787b..01a9fff5 100644
--- a/lib/bdd/DummyHttpServer.go
+++ b/lib/bdd/DummyHttpServer.go
@@ -75,53 +75,78 @@ func getDummyRoutes(addr string) map[string]dummyResponse {
 		"/api/35/job/test-job-succeeded/run": {
 			Code:   http.StatusOK,
 			Method: http.MethodPost,
-			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-succeeded\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-succeeded\"}", addr),
+			Body:   fmt.Sprintf("{\"id\":\"test-job-execution-succeeded\",\"href\":\"/api/35/execution/test-job-execution-succeeded\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-succeeded\"}", addr),
 		},
 		"/api/35/execution/test-job-execution-succeeded": {
 			Code:   http.StatusOK,
 			Method: http.MethodGet,
-			Body:   "{\"status\":\"succeeded\"}",
+			Body:   "{\"id\":\"test-job-execution-succeeded\",\"status\":\"succeeded\"}",
+		},
+		"/api/35/execution/test-job-execution-succeeded/output": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "test-job-execution-succeeded-output",
 		},
 		"/api/35/job/test-job-failed/run": {
 			Code:   http.StatusOK,
 			Method: http.MethodPost,
-			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-failed\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-failed\"}", addr),
+			Body:   fmt.Sprintf("{\"id\":\"test-job-execution-failed\",\"href\":\"/api/35/execution/test-job-execution-failed\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-failed\"}", addr),
 		},
 		"/api/35/execution/test-job-execution-failed": {
 			Code:   http.StatusOK,
 			Method: http.MethodGet,
-			Body:   "{\"status\":\"failed\"}",
+			Body:   "{\"id\":\"test-job-execution-failed\",\"status\":\"failed\"}",
+		},
+		"/api/35/execution/test-job-execution-failed/output": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "test-job-execution-failed-output",
 		},
 		"/api/35/job/test-job-aborted/run": {
 			Code:   http.StatusOK,
 			Method: http.MethodPost,
-			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-aborted\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-aborted\"}", addr),
+			Body:   fmt.Sprintf("{\"id\":\"test-job-execution-aborted\",\"href\":\"/api/35/execution/test-job-execution-aborted\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-aborted\"}", addr),
 		},
 		"/api/35/execution/test-job-execution-aborted": {
 			Code:   http.StatusOK,
 			Method: http.MethodGet,
-			Body:   "{\"status\":\"aborted\"}",
+			Body:   "{\"id\":\"test-job-execution-aborted\",\"status\":\"aborted\"}",
+		},
+		"/api/35/execution/test-job-execution-aborted/output": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "test-job-execution-aborted-output",
 		},
 		"/api/35/job/test-job-http-error/run": {
 			Code:   http.StatusOK,
 			Method: http.MethodPost,
-			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-http-error\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-http-error\"}", addr),
+			Body:   fmt.Sprintf("{\"id\":\"test-job-execution-http-error\",\"href\":\"/api/35/execution/test-job-execution-http-error\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-http-error\"}", addr),
 		},
 		"/api/35/execution/test-job-execution-http-error": {
 			Code:   http.StatusBadRequest,
 			Method: http.MethodGet,
 			Body:   "{\"message\":\"http-error\"}",
 		},
+		"/api/35/execution/test-job-execution-http-error/output": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "test-job-execution-http-error-output",
+		},
 		"/api/35/job/test-job-long-succeeded/run": {
 			Code:   http.StatusOK,
 			Method: http.MethodPost,
-			Body:   fmt.Sprintf("{\"href\":\"/api/35/execution/test-job-execution-long-succeeded\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-long-succeeded\"}", addr),
+			Body:   fmt.Sprintf("{\"id\":\"test-job-execution-long-succeeded\",\"href\":\"/api/35/execution/test-job-execution-long-succeeded\",\"permalink\":\"%s/rundeck/execution/show/test-job-execution-long-succeeded\"}", addr),
 		},
 		"/api/35/execution/test-job-execution-long-succeeded": {
 			Code:    http.StatusOK,
 			Method:  http.MethodGet,
-			Body:    "{\"status\":\"succeeded\"}",
+			Body:    "{\"id\":\"test-job-execution-long-succeeded\",\"status\":\"succeeded\"}",
 			Timeout: 2 * time.Second,
 		},
+		"/api/35/execution/test-job-execution-long-succeeded/output": {
+			Code:   http.StatusOK,
+			Method: http.MethodGet,
+			Body:   "test-job-execution-long-succeeded-output",
+		},
 	}
 }
diff --git a/tests/functional/features/engines/remediation/jobexecution_start.feature b/tests/functional/features/engines/remediation/jobexecution_start.feature
index f2661ac7..e34dd8d9 100644
--- a/tests/functional/features/engines/remediation/jobexecution_start.feature
+++ b/tests/functional/features/engines/remediation/jobexecution_start.feature
@@ -7,15 +7,27 @@ Feature: run a job
     When I do POST /api/v4/cat/jobs:
     """
     {
-      "name": "test-job-to-job-execution-start-1-name",
+      "name": "test-job-to-job-execution-start-1-1-name",
       "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
-      "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
+      "payload": "{\"resource1\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity1\": \"{{ `{{ .Entity.ID }}` }}\"}"
     }
     """
     Then the response code should be 201
-    When I save response jobID={{ .lastResponse._id }}
+    When I save response job1ID={{ .lastResponse._id }}
+    When I do POST /api/v4/cat/jobs:
+    """
+    {
+      "name": "test-job-to-job-execution-start-1-2-name",
+      "author": "test-author",
+      "config": "test-job-config-to-run-manual-job",
+      "job_id": "test-job-succeeded",
+      "payload": "{\"resource2\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity2\": \"{{ `{{ .Entity.ID }}` }}\"}"
+    }
+    """
+    Then the response code should be 201
+    When I save response job2ID={{ .lastResponse._id }}
     When I do POST /api/v4/cat/instructions:
     """
     {
@@ -41,7 +53,7 @@ Feature: run a job
               "name": "test-instruction-to-job-execution-start-1-step-1-operation-1",
               "time_to_complete": {"seconds": 1, "unit":"s"},
               "description": "test-instruction-to-job-execution-start-1-step-1-operation-1-description",
-              "jobs": ["{{ .jobID }}"]
+              "jobs": ["{{ .job1ID }}", "{{ .job2ID }}"]
             }
           ],
           "stop_on_fail": true,
@@ -85,17 +97,107 @@ Feature: run a job
     {
       "execution": "{{ .executionID }}",
       "operation": "{{ .operationID }}",
-      "job": "{{ .jobID }}"
+      "job": "{{ .job2ID }}"
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "name": "test-job-to-job-execution-start-1-2-name",
+      "status": 0,
+      "fail_reason": "",
+      "output": "",
+      "payload": "{\"resource2\": \"test-resource-to-job-execution-start-1\",\"entity2\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}",
+      "launched_at": 0,
+      "completed_at": 0
+    }
+    """
+    Then the response key "started_at" should not be "0"
+    When I wait 2s
+    When I do GET /api/v4/cat/executions/{{ .executionID }}
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "steps": [
+        {
+          "operations": [
+            {
+              "name": "test-instruction-to-job-execution-start-1-step-1-operation-1",
+              "completed_at": 0,
+              "time_to_complete": {
+                "seconds": 1,
+                "unit": "s"
+              },
+              "jobs": [
+                {
+                  "_id": "",
+                  "name": "test-job-to-job-execution-start-1-1-name",
+                  "status": null,
+                  "fail_reason": "",
+                  "payload": "",
+                  "started_at": 0,
+                  "launched_at": 0,
+                  "completed_at": 0
+                },
+                {
+                  "name": "test-job-to-job-execution-start-1-2-name",
+                  "status": 1,
+                  "fail_reason": "",
+                  "output": "test-job-execution-succeeded-output",
+                  "payload": "{\"resource2\": \"test-resource-to-job-execution-start-1\",\"entity2\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+                }
+              ]
+            }
+          ]
+        }
+      ]
     }
     """
+    When I do PUT /api/v4/cat/executions/{{ .executionID }}/ping
     Then the response code should be 200
     Then the response body should contain:
     """
     {
-      "name": "test-job-to-job-execution-start-1-name",
+      "jobs": [
+        {
+          "_id": "",
+          "name": "test-job-to-job-execution-start-1-1-name",
+          "status": null,
+          "fail_reason": "",
+          "payload": "",
+          "started_at": 0,
+          "launched_at": 0,
+          "completed_at": 0
+        },
+        {
+          "name": "test-job-to-job-execution-start-1-2-name",
+          "status": 1,
+          "fail_reason": "",
+          "output": "test-job-execution-succeeded-output",
+          "payload": "{\"resource2\": \"test-resource-to-job-execution-start-1\",\"entity2\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+        }
+      ]
+    }
+    """
+    When I do POST /api/v4/cat/job-executions:
+    """
+    {
+      "execution": "{{ .executionID }}",
+      "operation": "{{ .operationID }}",
+      "job": "{{ .job1ID }}"
+    }
+    """
+    Then the response code should be 200
+    Then the response body should contain:
+    """
+    {
+      "name": "test-job-to-job-execution-start-1-1-name",
       "status": 0,
       "fail_reason": "",
-      "payload": "{\"resource\": \"test-resource-to-job-execution-start-1\",\"entity\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}",
+      "output": "",
+      "payload": "{\"resource1\": \"test-resource-to-job-execution-start-1\",\"entity1\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}",
       "launched_at": 0,
       "completed_at": 0
     }
@@ -119,10 +221,18 @@ Feature: run a job
               },
               "jobs": [
                 {
-                  "name": "test-job-to-job-execution-start-1-name",
+                  "name": "test-job-to-job-execution-start-1-1-name",
+                  "status": 1,
+                  "fail_reason": "",
+                  "output": "test-job-execution-succeeded-output",
+                  "payload": "{\"resource1\": \"test-resource-to-job-execution-start-1\",\"entity1\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+                },
+                {
+                  "name": "test-job-to-job-execution-start-1-2-name",
                   "status": 1,
                   "fail_reason": "",
-                  "payload": "{\"resource\": \"test-resource-to-job-execution-start-1\",\"entity\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+                  "output": "test-job-execution-succeeded-output",
+                  "payload": "{\"resource2\": \"test-resource-to-job-execution-start-1\",\"entity2\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
                 }
               ]
             }
@@ -138,10 +248,18 @@ Feature: run a job
     {
       "jobs": [
         {
-          "name": "test-job-to-job-execution-start-1-name",
+          "name": "test-job-to-job-execution-start-1-1-name",
           "status": 1,
           "fail_reason": "",
-          "payload": "{\"resource\": \"test-resource-to-job-execution-start-1\",\"entity\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+          "output": "test-job-execution-succeeded-output",
+          "payload": "{\"resource1\": \"test-resource-to-job-execution-start-1\",\"entity1\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
+        },
+        {
+          "name": "test-job-to-job-execution-start-1-2-name",
+          "status": 1,
+          "fail_reason": "",
+          "output": "test-job-execution-succeeded-output",
+          "payload": "{\"resource2\": \"test-resource-to-job-execution-start-1\",\"entity2\": \"test-resource-to-job-execution-start-1/test-component-to-job-execution-start-1\"}"
         }
       ]
     }
@@ -167,12 +285,22 @@ Feature: run a job
               {
                 "_t": "instructionjobstart",
                 "a": "root",
-                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-name."
+                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-2-name."
+              },
+              {
+                "_t": "instructionjobcomplete",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-2-name."
+              },
+              {
+                "_t": "instructionjobstart",
+                "a": "root",
+                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-1-name."
               },
               {
                 "_t": "instructionjobcomplete",
                 "a": "root",
-                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-name."
+                "m": "Instruction test-instruction-to-job-execution-start-1-name. Job test-job-to-job-execution-start-1-1-name."
               },
               {
                 "_t": "instructioncomplete",
-- 
2.25.1


From d1e82e847d1948c66f009cd8f6f9e4e64c6839ca Mon Sep 17 00:00:00 2001
From: Zarina Yakubova <zyakubova@capensis.fr>
Date: Fri, 11 Jun 2021 11:15:06 +0700
Subject: [PATCH 65/66] Fix merge conflicts

Signed-off-by: Zarina Yakubova <zyakubova@capensis.fr>
---
 docs/docs.go                                  |  16 +-
 docs/swagger.json                             |  16 +-
 docs/swagger.yaml                             |  11 +-
 lib/api/idlerule/api.go                       |  27 +++
 lib/api/idlerule/models.go                    |   2 +-
 lib/api/router.go                             |   2 +
 .../api/cat/instruction_create.feature        |   7 +-
 .../instruction_create_with_approval.feature  | 115 ++++------
 .../instruction_update_with_approval.feature  |  64 ++----
 .../features/api/core/event.feature           |  63 +++---
 .../features/api/core/idlerule_create.feature |  16 +-
 .../features/api/core/idlerule_update.feature |   8 +-
 .../features/engines/axe/axe_idlerule.feature | 199 ++++++------------
 .../axe_idlerule_connector.feature            |  45 +---
 .../entity_service_idle_rules.feature         |   5 -
 .../pbehavior_axe_idlerule.feature            |  31 +--
 ...behavior_weather_services_entities.feature |   1 -
 .../engines/remediation/alarm_get.feature     |   2 -
 .../instructionexecution_stats.feature        |   2 -
 .../remediation/jobexecution_start.feature    |  16 --
 20 files changed, 253 insertions(+), 395 deletions(-)

diff --git a/docs/docs.go b/docs/docs.go
index cad2f876..79826bd1 100644
--- a/docs/docs.go
+++ b/docs/docs.go
@@ -8190,6 +8190,9 @@ var doc = `{
                 "app_title": {
                     "type": "string"
                 },
+                "check_count_request_timeout": {
+                    "type": "integer"
+                },
                 "edition": {
                     "type": "string"
                 },
@@ -8205,6 +8208,9 @@ var doc = `{
                 "logo": {
                     "type": "string"
                 },
+                "max_matched_items": {
+                    "type": "integer"
+                },
                 "popup_timeout": {
                     "type": "object",
                     "$ref": "#/definitions/appinfo.PopupTimeout"
@@ -8297,6 +8303,9 @@ var doc = `{
                 "app_title": {
                     "type": "string"
                 },
+                "check_count_request_timeout": {
+                    "type": "integer"
+                },
                 "footer": {
                     "type": "string"
                 },
@@ -8309,6 +8318,9 @@ var doc = `{
                 "logo": {
                     "type": "string"
                 },
+                "max_matched_items": {
+                    "type": "integer"
+                },
                 "popup_timeout": {
                     "type": "object",
                     "$ref": "#/definitions/appinfo.PopupTimeout"
@@ -9390,7 +9402,6 @@ var doc = `{
         "idlerule.EditRequest": {
             "type": "object",
             "required": [
-                "author",
                 "duration",
                 "enabled",
                 "name",
@@ -9405,9 +9416,6 @@ var doc = `{
                     "type": "object",
                     "$ref": "#/definitions/pattern.AlarmPatternList"
                 },
-                "author": {
-                    "type": "string"
-                },
                 "description": {
                     "type": "string"
                 },
diff --git a/docs/swagger.json b/docs/swagger.json
index e99d00e0..31015682 100644
--- a/docs/swagger.json
+++ b/docs/swagger.json
@@ -8174,6 +8174,9 @@
                 "app_title": {
                     "type": "string"
                 },
+                "check_count_request_timeout": {
+                    "type": "integer"
+                },
                 "edition": {
                     "type": "string"
                 },
@@ -8189,6 +8192,9 @@
                 "logo": {
                     "type": "string"
                 },
+                "max_matched_items": {
+                    "type": "integer"
+                },
                 "popup_timeout": {
                     "type": "object",
                     "$ref": "#/definitions/appinfo.PopupTimeout"
@@ -8281,6 +8287,9 @@
                 "app_title": {
                     "type": "string"
                 },
+                "check_count_request_timeout": {
+                    "type": "integer"
+                },
                 "footer": {
                     "type": "string"
                 },
@@ -8293,6 +8302,9 @@
                 "logo": {
                     "type": "string"
                 },
+                "max_matched_items": {
+                    "type": "integer"
+                },
                 "popup_timeout": {
                     "type": "object",
                     "$ref": "#/definitions/appinfo.PopupTimeout"
@@ -9374,7 +9386,6 @@
         "idlerule.EditRequest": {
             "type": "object",
             "required": [
-                "author",
                 "duration",
                 "enabled",
                 "name",
@@ -9389,9 +9400,6 @@
                     "type": "object",
                     "$ref": "#/definitions/pattern.AlarmPatternList"
                 },
-                "author": {
-                    "type": "string"
-                },
                 "description": {
                     "type": "string"
                 },
diff --git a/docs/swagger.yaml b/docs/swagger.yaml
index b054822e..8c1c403a 100644
--- a/docs/swagger.yaml
+++ b/docs/swagger.yaml
@@ -471,6 +471,8 @@ definitions:
         type: boolean
       app_title:
         type: string
+      check_count_request_timeout:
+        type: integer
       edition:
         type: string
       footer:
@@ -481,6 +483,8 @@ definitions:
         type: string
       logo:
         type: string
+      max_matched_items:
+        type: integer
       popup_timeout:
         $ref: '#/definitions/appinfo.PopupTimeout'
         type: object
@@ -542,6 +546,8 @@ definitions:
         type: boolean
       app_title:
         type: string
+      check_count_request_timeout:
+        type: integer
       footer:
         type: string
       language:
@@ -550,6 +556,8 @@ definitions:
         type: string
       logo:
         type: string
+      max_matched_items:
+        type: integer
       popup_timeout:
         $ref: '#/definitions/appinfo.PopupTimeout'
         type: object
@@ -1282,8 +1290,6 @@ definitions:
       alarm_patterns:
         $ref: '#/definitions/pattern.AlarmPatternList'
         type: object
-      author:
-        type: string
       description:
         type: string
       disable_during_periods:
@@ -1308,7 +1314,6 @@ definitions:
       type:
         type: string
     required:
-    - author
     - duration
     - enabled
     - name
diff --git a/lib/api/idlerule/api.go b/lib/api/idlerule/api.go
index 6b3d5955..fcb0a8db 100644
--- a/lib/api/idlerule/api.go
+++ b/lib/api/idlerule/api.go
@@ -6,6 +6,7 @@ import (
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/common"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/logger"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/pagination"
+	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/api/scenario"
 	"git.canopsis.net/canopsis/canopsis-community/community/go-engines-community/lib/canopsis/config"
 	"github.com/gin-gonic/gin"
 	"net/http"
@@ -119,6 +120,7 @@ func (a *api) Create(c *gin.Context) {
 		return
 	}
 
+	setOperationParameterAuthor(&request, request.Author)
 	rule, err := a.store.Insert(c.Request.Context(), request)
 	if err != nil {
 		panic(err)
@@ -161,6 +163,7 @@ func (a *api) Update(c *gin.Context) {
 		return
 	}
 
+	setOperationParameterAuthor(&request, request.Author)
 	rule, err := a.store.Update(c.Request.Context(), request)
 	if err != nil {
 		panic(err)
@@ -255,3 +258,27 @@ func (a *api) CountPatterns(c *gin.Context) {
 
 	c.JSON(http.StatusOK, data)
 }
+
+func setOperationParameterAuthor(request *EditRequest, value string) {
+	if request.Operation == nil {
+		return
+	}
+
+	switch v := request.Operation.Parameters.(type) {
+	case scenario.SnoozeParametersRequest:
+		v.Author = value
+		request.Operation.Parameters = v
+	case scenario.ChangeStateParametersRequest:
+		v.Author = value
+		request.Operation.Parameters = v
+	case scenario.AssocTicketParametersRequest:
+		v.Author = value
+		request.Operation.Parameters = v
+	case scenario.PbehaviorParametersRequest:
+		v.Author = value
+		request.Operation.Parameters = v
+	case scenario.ParametersRequest:
+		v.Author = value
+		request.Operation.Parameters = v
+	}
+}
diff --git a/lib/api/idlerule/models.go b/lib/api/idlerule/models.go
index 31690afc..55733cf7 100644
--- a/lib/api/idlerule/models.go
+++ b/lib/api/idlerule/models.go
@@ -31,7 +31,7 @@ type EditRequest struct {
 	ID                   string                    `json:"-"`
 	Name                 string                    `json:"name" binding:"required,max=255"`
 	Description          string                    `json:"description" binding:"max=255"`
-	Author               string                    `json:"author" binding:"required,max=255"`
+	Author               string                    `json:"author" swaggerignore:"true"`
 	Enabled              *bool                     `json:"enabled" binding:"required"`
 	Type                 string                    `json:"type" binding:"required"`
 	Priority             *int64                    `json:"priority" binding:"required"`
diff --git a/lib/api/router.go b/lib/api/router.go
index 4bac3402..919b022f 100644
--- a/lib/api/router.go
+++ b/lib/api/router.go
@@ -981,6 +981,7 @@ func RegisterRoutes(
 			idleRuleRouter.POST(
 				"",
 				middleware.Authorize(authObjIdleRule, permCreate, enforcer),
+				middleware.SetAuthor(),
 				idleRuleAPI.Create,
 			)
 			idleRuleRouter.GET(
@@ -996,6 +997,7 @@ func RegisterRoutes(
 			idleRuleRouter.PUT(
 				"/:id",
 				middleware.Authorize(authObjIdleRule, permUpdate, enforcer),
+				middleware.SetAuthor(),
 				idleRuleAPI.Update,
 			)
 			idleRuleRouter.DELETE(
diff --git a/tests/functional/features/api/cat/instruction_create.feature b/tests/functional/features/api/cat/instruction_create.feature
index 4af5439f..5c54868f 100644
--- a/tests/functional/features/api/cat/instruction_create.feature
+++ b/tests/functional/features/api/cat/instruction_create.feature
@@ -243,7 +243,6 @@ Feature: create a instruction
         }
       ],
       "description": "test-instruction-to-create-2-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "priority": 21,
       "timeout_after_execution": {
@@ -271,8 +270,8 @@ Feature: create a instruction
         }
       ],
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "description": "test-instruction-to-create-2-description",
       "enabled": true,
@@ -661,7 +660,6 @@ Feature: create a instruction
     """json
     {
       "errors": {
-        "author": "Author is missing.",
         "description": "Description is missing.",
         "enabled": "Enabled is missing.",
         "name": "Name is missing.",
@@ -684,7 +682,6 @@ Feature: create a instruction
     """json
     {
       "errors": {
-        "author": "Author is missing.",
         "description": "Description is missing.",
         "enabled": "Enabled is missing.",
         "jobs": "Jobs is missing.",
diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
index 2f581f62..59b3966d 100644
--- a/tests/functional/features/api/cat/instruction_create_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -15,7 +15,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-1-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -73,7 +72,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-4-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -138,8 +136,8 @@ Feature: instruction approval creation
           "name": "test-instruction-to-create-with-approval-1-name",
           "description": "test-instruction-to-create-with-approval-1-description",
           "author": {
-            "_id": "test-user-author-1-id",
-            "name": "test-user-author-1-username"
+            "_id": "root",
+            "name": "root"
           },
           "enabled": true,
           "steps": [
@@ -224,9 +222,9 @@ Feature: instruction approval creation
           ],
           "name": "test-instruction-to-create-with-approval-4-name",
           "description": "test-instruction-to-create-with-approval-4-description",
-          "author":  {
-            "_id": "test-user-author-1-id",
-            "name": "test-user-author-1-username"
+          "author": {
+            "_id": "root",
+            "name": "root"
           },
           "enabled": true,
           "steps": [
@@ -323,7 +321,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-2-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -377,7 +374,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-3-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -431,7 +427,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-5-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -485,7 +480,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-6-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -539,7 +533,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-7-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -594,7 +587,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-8-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -648,7 +640,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-9-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -713,8 +704,8 @@ Feature: instruction approval creation
         "name": "test-instruction-to-create-with-approval-9-name",
         "description": "test-instruction-to-create-with-approval-9-description",
         "author": {
-          "_id": "test-user-author-1-id",
-          "name": "test-user-author-1-username"
+          "_id": "root",
+          "name": "root"
         },
         "enabled": true,
         "steps": [
@@ -804,7 +795,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-10-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -869,9 +859,9 @@ Feature: instruction approval creation
         "name": "test-instruction-to-create-with-approval-10-name",
         "description": "test-instruction-to-create-with-approval-10-description",
         "author": {
-            "_id": "test-user-author-1-id",
-            "name": "test-user-author-1-username"
-          },
+          "_id": "root",
+          "name": "root"
+        },
         "enabled": true,
         "steps": [
           {
@@ -960,7 +950,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-11-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1030,7 +1019,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-12-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1105,7 +1093,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-13-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1169,9 +1156,9 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-13-name",
       "description": "test-instruction-to-create-with-approval-13-description",
       "author": {
-            "_id": "test-user-author-1-id",
-            "name": "test-user-author-1-username"
-          },
+        "_id": "root",
+        "name": "root"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1262,9 +1249,9 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-13-name",
       "description": "test-instruction-to-create-with-approval-13-description",
       "author": {
-            "_id": "test-user-author-1-id",
-            "name": "test-user-author-1-username"
-          },
+        "_id": "root",
+        "name": "root"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1355,9 +1342,9 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-13-name",
       "description": "test-instruction-to-create-with-approval-13-description",
       "author": {
-            "_id": "test-user-author-1-id",
-            "name": "test-user-author-1-username"
-          },
+        "_id": "root",
+        "name": "root"
+      },
       "enabled": true,
       "steps": [
         {
@@ -1445,7 +1432,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-14-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1504,7 +1490,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-14-description-changed",
-      "author": "test-user-author-1-id",
       "enabled": false,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1550,9 +1535,9 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-14-name-changed",
       "description": "test-instruction-to-create-with-approval-14-description-changed",
       "author": {
-            "_id": "test-user-author-1-id",
-            "name": "test-user-author-1-username"
-          },
+        "_id": "root",
+        "name": "root"
+      },
       "enabled": false,
       "steps": [
         {
@@ -1632,7 +1617,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-15-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1690,7 +1674,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-15-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1736,8 +1719,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-15-name",
       "description": "test-instruction-to-create-with-approval-15-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -1826,7 +1809,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-17-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1885,7 +1867,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-17-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1930,9 +1911,9 @@ Feature: instruction approval creation
       ],
       "name": "test-instruction-to-create-with-approval-17-name",
       "description": "test-instruction-to-create-with-approval-17-description",
-      "author":{
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+      "author": {
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -2021,7 +2002,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-18-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2080,7 +2060,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-18-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2126,8 +2105,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-18-name",
       "description": "test-instruction-to-create-with-approval-18-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -2216,7 +2195,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-19-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2275,7 +2253,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-19-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2321,8 +2298,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-19-name",
       "description": "test-instruction-to-create-with-approval-19-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -2411,7 +2388,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-20-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2470,7 +2446,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-20-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2516,8 +2491,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-20-name",
       "description": "test-instruction-to-create-with-approval-20-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -2606,7 +2581,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-21-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2665,7 +2639,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-21-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2711,8 +2684,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-21-name",
       "description": "test-instruction-to-create-with-approval-21-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -2801,7 +2774,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-22-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2860,7 +2832,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-22-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2902,8 +2873,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-22-name",
       "description": "test-instruction-to-create-with-approval-22-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -2984,7 +2955,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-5-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -3082,8 +3052,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-5-name",
       "description": "test-instruction-to-create-with-approval-5-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -3164,7 +3134,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-6-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -3262,8 +3231,8 @@ Feature: instruction approval creation
       "name": "test-instruction-to-create-with-approval-6-name",
       "description": "test-instruction-to-create-with-approval-6-description",
       "author": {
-        "_id": "test-user-author-1-id",
-        "name": "test-user-author-1-username"
+        "_id": "root",
+        "name": "root"
       },
       "enabled": true,
       "steps": [
@@ -3344,7 +3313,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-7-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -3442,7 +3410,6 @@ Feature: instruction approval creation
         }
       ],
       "description": "test-instruction-to-create-with-approval-8-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
index 507ad221..31831ccd 100644
--- a/tests/functional/features/api/cat/instruction_update_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -13,7 +13,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -111,8 +110,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-description",
         "author": {
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
@@ -170,7 +169,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-2-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -268,8 +266,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-2-description",
         "author": {
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
@@ -397,7 +395,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -450,7 +447,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -503,7 +499,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -556,7 +551,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -609,7 +603,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -663,7 +656,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-4-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -710,8 +702,8 @@ Feature: instruction approval update
       ],
       "description": "test-instruction-to-update-with-approval-4-description",
       "author": {
-        "_id": "test-user-alternate-author-1-id",
-        "name": "test-user-alternate-author-1-username"
+        "_id": "manageruser",
+        "name": "manageruser"
       },
       "enabled": true,
       "steps": [
@@ -811,7 +803,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-5-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -852,7 +843,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-5-description-changed",
-      "author": "test-user-author-1-id",
       "enabled": false,
       "timeout_after_execution": {
         "seconds": 10,
@@ -939,8 +929,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-5-description",
         "author": {
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
@@ -1000,7 +990,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-6-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1040,7 +1029,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-6-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1130,8 +1118,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-6-description",
         "author":{
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
@@ -1195,7 +1183,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-7-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1236,7 +1223,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-7-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1327,8 +1313,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-7-description",
         "author": {
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
@@ -1390,7 +1376,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-7-description",
-      "author": "test-user-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1476,8 +1461,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-7-description",
         "author": {
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
@@ -1541,7 +1526,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1582,7 +1566,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1676,8 +1659,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-8-description",
         "author": {
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
@@ -1760,7 +1743,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1806,8 +1788,8 @@ Feature: instruction approval update
       ],
       "description": "test-instruction-to-update-with-approval-8-description",
       "author": {
-        "_id": "test-user-alternate-author-1-id",
-        "name": "test-user-alternate-author-1-username"
+        "_id": "manageruser",
+        "name": "manageruser"
       },
       "enabled": true,
       "steps": [
@@ -1883,7 +1865,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-9-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -1966,8 +1947,8 @@ Feature: instruction approval update
       ],
       "description": "test-instruction-to-update-with-approval-9-description",
       "author": {
-        "_id": "test-user-alternate-author-1-id",
-        "name": "test-user-alternate-author-1-username"
+        "_id": "manageruser",
+        "name": "manageruser"
       },
       "enabled": true,
       "steps": [
@@ -2018,7 +1999,6 @@ Feature: instruction approval update
         }
       ],
       "description": "test-instruction-to-update-with-approval-3-description",
-      "author": "test-user-alternate-author-1-id",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -2108,8 +2088,8 @@ Feature: instruction approval update
         ],
         "description": "test-instruction-to-update-with-approval-3-description",
         "author": {
-          "_id": "test-user-alternate-author-1-id",
-          "name": "test-user-alternate-author-1-username"
+          "_id": "manageruser",
+          "name": "manageruser"
         },
         "enabled": true,
         "steps": [
diff --git a/tests/functional/features/api/core/event.feature b/tests/functional/features/api/core/event.feature
index 1fe18c6b..5880254f 100644
--- a/tests/functional/features/api/core/event.feature
+++ b/tests/functional/features/api/core/event.feature
@@ -309,16 +309,17 @@ Feature: send an event
     """json
     {
       "sent_events": [
-    {
-      "connector": "test_connector",
-      "connector_name": "test_connectorname",
-      "source_type": "resource",
-      "event_type": "check",
-      "component": "test_component",
-      "state": 1,
-      "long_output": "",
-      "resource": "test_resource2"
-    }
+        {
+          "connector": "test_connector",
+          "connector_name": "test_connectorname",
+          "source_type": "resource",
+          "event_type": "check",
+          "component": "test_component",
+          "state": 1,
+          "long_output": "",
+          "resource": "test_resource2",
+          "author": "root"
+        }
       ],
       "failed_events": [],
       "retry_events": []
@@ -352,7 +353,8 @@ Feature: send an event
           "event_type": "check",
           "component": "test_component2",
           "state": 2,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         }
       ],
       "failed_events": [],
@@ -643,7 +645,8 @@ Feature: send an event
           "component": "test_component",
           "event_type": "check",
           "state": 1,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -651,7 +654,8 @@ Feature: send an event
           "component": "test_component",
           "event_type": "check",
           "state": 1,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         }
       ],
       "retry_events": []
@@ -714,7 +718,8 @@ Feature: send an event
           "component": "test_component",
           "event_type": "check",
           "state": 1,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -723,7 +728,8 @@ Feature: send an event
           "component": "test_component",
           "event_type": "check",
           "state": 1,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -732,7 +738,8 @@ Feature: send an event
           "component": 123,
           "event_type": "check",
           "state": 1,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -741,7 +748,8 @@ Feature: send an event
           "component": "test_component",
           "event_type": "check",
           "state": 1,
-          "resource": 123
+          "resource": 123,
+          "author": "root"
         }
       ],
       "retry_events": []
@@ -785,7 +793,8 @@ Feature: send an event
           "connector_name": "test_connectorname",
           "event_type": "ack",
           "role": "admin",
-          "source_type": "connector"
+          "source_type": "connector",
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -793,7 +802,8 @@ Feature: send an event
           "component": "test_component",
           "event_type": "check",
           "source_type": "component",
-          "state": 1
+          "state": 1,
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -804,7 +814,8 @@ Feature: send an event
           "ma_parents": [],
           "source_type": "resource",
           "state": 1,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         }
       ],
       "failed_events": [],
@@ -852,7 +863,8 @@ Feature: send an event
           "connector_name": "test_connectorname",
           "event_type": "ack",
           "role": "admin",
-          "source_type": "connector"
+          "source_type": "connector",
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -860,7 +872,8 @@ Feature: send an event
           "component": "test_component",
           "event_type": "check",
           "source_type": "component",
-          "state": 1
+          "state": 1,
+          "author": "root"
         },
         {
           "connector": "test_connector",
@@ -871,7 +884,8 @@ Feature: send an event
           "ma_parents": [],
           "source_type": "resource",
           "state": 1,
-          "resource": "test_resource"
+          "resource": "test_resource",
+          "author": "root"
         }
       ],
       "failed_events": [],
@@ -902,7 +916,8 @@ Feature: send an event
           "connector": "test_connector",
           "connector_name": "test_connectorname",
           "event_type": "check",
-          "state": 1
+          "state": 1,
+          "author": "root"
         }
       ],
       "retry_events": []
diff --git a/tests/functional/features/api/core/idlerule_create.feature b/tests/functional/features/api/core/idlerule_create.feature
index 25dc4a30..ab2e47d7 100644
--- a/tests/functional/features/api/core/idlerule_create.feature
+++ b/tests/functional/features/api/core/idlerule_create.feature
@@ -9,7 +9,6 @@ Feature: Create a idle rule
     {
       "name": "test-idle-rule-to-create-1-name",
       "description": "test-idle-rule-to-create-1-description",
-      "author": "test-idle-rule-to-create-1-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -31,7 +30,6 @@ Feature: Create a idle rule
       "operation": {
         "type": "snooze",
         "parameters": {
-          "author": "test-idle-rule-to-create-1-operation-author",
           "output": "test-idle-rule-to-create-1-operation-output",
           "duration": {
             "seconds": 3,
@@ -48,7 +46,7 @@ Feature: Create a idle rule
     {
       "name": "test-idle-rule-to-create-1-name",
       "description": "test-idle-rule-to-create-1-description",
-      "author": "test-idle-rule-to-create-1-author",
+      "author": "root",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -70,7 +68,7 @@ Feature: Create a idle rule
       "operation": {
         "type": "snooze",
         "parameters": {
-          "author": "test-idle-rule-to-create-1-operation-author",
+          "author": "root",
           "output": "test-idle-rule-to-create-1-operation-output",
           "duration": {
             "seconds": 3,
@@ -89,7 +87,6 @@ Feature: Create a idle rule
     {
       "name": "test-idle-rule-to-create-2-name",
       "description": "test-idle-rule-to-create-2-description",
-      "author": "test-idle-rule-to-create-2-author",
       "type": "entity",
       "enabled": true,
       "priority": 21,
@@ -111,7 +108,7 @@ Feature: Create a idle rule
     {
       "name": "test-idle-rule-to-create-2-name",
       "description": "test-idle-rule-to-create-2-description",
-      "author": "test-idle-rule-to-create-2-author",
+      "author": "root",
       "type": "entity",
       "enabled": true,
       "priority": 21,
@@ -135,7 +132,6 @@ Feature: Create a idle rule
     {
       "name": "test-idle-rule-to-create-3-name",
       "description": "test-idle-rule-to-create-3-description",
-      "author": "test-idle-rule-to-create-3-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -158,7 +154,6 @@ Feature: Create a idle rule
         "type": "pbehavior",
         "parameters": {
           "name": "test-idle-rule-to-create-3-operation-name",
-          "author": "test-idle-rule-to-create-3-operation-author",
           "rrule": "FREQ=DAILY",
           "reason": "test-reason-to-edit-idle-rule",
           "type": "test-type-to-edit-idle-rule",
@@ -180,7 +175,7 @@ Feature: Create a idle rule
     {
       "name": "test-idle-rule-to-create-3-name",
       "description": "test-idle-rule-to-create-3-description",
-      "author": "test-idle-rule-to-create-3-author",
+      "author": "root",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -203,7 +198,7 @@ Feature: Create a idle rule
         "type": "pbehavior",
         "parameters": {
           "name": "test-idle-rule-to-create-3-operation-name",
-          "author": "test-idle-rule-to-create-3-operation-author",
+          "author": "root",
           "rrule": "FREQ=DAILY",
           "reason": "test-reason-to-edit-idle-rule",
           "type": "test-type-to-edit-idle-rule",
@@ -238,7 +233,6 @@ Feature: Create a idle rule
     """
     {
       "errors": {
-        "author": "Author is missing.",
         "duration.seconds": "Seconds is missing.",
         "duration.unit": "Unit is missing.",
         "enabled": "Enabled is missing.",
diff --git a/tests/functional/features/api/core/idlerule_update.feature b/tests/functional/features/api/core/idlerule_update.feature
index 67e62c23..0322aaca 100644
--- a/tests/functional/features/api/core/idlerule_update.feature
+++ b/tests/functional/features/api/core/idlerule_update.feature
@@ -9,7 +9,6 @@ Feature: Update a idle rule
     {
       "name": "test-idle-rule-to-update-name",
       "description": "test-idle-rule-to-update-description",
-      "author": "test-idle-rule-to-update-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -31,7 +30,6 @@ Feature: Update a idle rule
       "operation": {
         "type": "snooze",
         "parameters": {
-          "author": "test-idle-rule-to-update-operation-author-updated",
           "output": "test-idle-rule-to-update-operation-output-updated",
           "duration": {
             "seconds": 5,
@@ -49,7 +47,7 @@ Feature: Update a idle rule
       "_id": "test-idle-rule-to-update",
       "name": "test-idle-rule-to-update-name",
       "description": "test-idle-rule-to-update-description",
-      "author": "test-idle-rule-to-update-author",
+      "author": "root",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -72,7 +70,7 @@ Feature: Update a idle rule
       "operation": {
         "type": "snooze",
         "parameters": {
-          "author": "test-idle-rule-to-update-operation-author-updated",
+          "author": "root",
           "output": "test-idle-rule-to-update-operation-output-updated",
           "duration": {
             "seconds": 5,
@@ -118,7 +116,6 @@ Feature: Update a idle rule
     {
       "name": "test-idle-rule-notexists-name",
       "description": "test-idle-rule-notexists-description",
-      "author": "test-idle-rule-notexists-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -140,7 +137,6 @@ Feature: Update a idle rule
       "operation": {
         "type": "snooze",
         "parameters": {
-          "author": "test-idle-rule-notexists-operation-author-updated",
           "output": "test-idle-rule-notexists-operation-output-updated",
           "duration": {
             "seconds": 5,
diff --git a/tests/functional/features/engines/axe/axe_idlerule.feature b/tests/functional/features/engines/axe/axe_idlerule.feature
index fac81a9f..202a66a3 100644
--- a/tests/functional/features/engines/axe/axe_idlerule.feature
+++ b/tests/functional/features/engines/axe/axe_idlerule.feature
@@ -7,7 +7,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-1-name",
-      "author": "test-idlerule-axe-idlerule-1-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -25,8 +24,7 @@ Feature: update alarm on idle rule
         "type": "assocticket",
         "parameters": {
           "ticket": "test-idlerule-axe-idlerule-1-ticket",
-          "output": "test-idlerule-axe-idlerule-1-output",
-          "author": "test-idlerule-axe-idlerule-1-author"
+          "output": "test-idlerule-axe-idlerule-1-output"
         }
       }
     }
@@ -43,9 +41,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-1",
       "resource": "test-resource-axe-idlerule-1",
       "state": 2,
-      "output": "test-output-axe-idlerule-1",
-      "long_output": "test-long-output-axe-idlerule-1",
-      "author": "test-author-axe-idlerule-1"
+      "output": "test-output-axe-idlerule-1"
     }
     """
     When I wait the end of event processing
@@ -60,9 +56,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-1",
       "resource": "test-resource-axe-idlerule-1",
       "state": 2,
-      "output": "test-output-axe-idlerule-1",
-      "long_output": "test-long-output-axe-idlerule-1",
-      "author": "test-author-axe-idlerule-1"
+      "output": "test-output-axe-idlerule-1"
     }
     """
     When I wait the end of event processing
@@ -127,7 +121,7 @@ Feature: update alarm on idle rule
             },
             "ticket": {
               "_t": "assocticket",
-              "a": "test-idlerule-axe-idlerule-1-author",
+              "a": "root",
               "m": "test-idlerule-axe-idlerule-1-ticket"
             },
             "steps": [
@@ -141,7 +135,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-1-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-1-ticket"
               }
             ]
@@ -166,9 +160,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-1",
       "resource": "test-resource-axe-idlerule-1",
       "state": 2,
-      "output": "test-output-axe-idlerule-1",
-      "long_output": "test-long-output-axe-idlerule-1",
-      "author": "test-author-axe-idlerule-1"
+      "output": "test-output-axe-idlerule-1"
     }
     """
     When I wait the end of 2 events processing
@@ -192,7 +184,7 @@ Feature: update alarm on idle rule
             },
             "ticket": {
               "_t": "assocticket",
-              "a": "test-idlerule-axe-idlerule-1-author",
+              "a": "root",
               "m": "test-idlerule-axe-idlerule-1-ticket"
             },
             "steps": [
@@ -206,12 +198,12 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-1-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-1-ticket"
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-1-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-1-ticket"
               }
             ]
@@ -233,7 +225,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-2-name",
-      "author": "test-idlerule-axe-idlerule-2-author",
       "type": "alarm",
       "alarm_condition": "last_update",
       "enabled": true,
@@ -251,8 +242,7 @@ Feature: update alarm on idle rule
         "type": "assocticket",
         "parameters": {
           "ticket": "test-idlerule-axe-idlerule-2-ticket",
-          "output": "test-idlerule-axe-idlerule-2-output",
-          "author": "test-idlerule-axe-idlerule-2-author"
+          "output": "test-idlerule-axe-idlerule-2-output"
         }
       }
     }
@@ -269,9 +259,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-2",
       "resource": "test-resource-axe-idlerule-2",
       "state": 1,
-      "output": "test-output-axe-idlerule-2",
-      "long_output": "test-long-output-axe-idlerule-2",
-      "author": "test-author-axe-idlerule-2"
+      "output": "test-output-axe-idlerule-2"
     }
     """
     When I wait the end of event processing
@@ -286,9 +274,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-2",
       "resource": "test-resource-axe-idlerule-2",
       "state": 2,
-      "output": "test-output-axe-idlerule-2",
-      "long_output": "test-long-output-axe-idlerule-2",
-      "author": "test-author-axe-idlerule-2"
+      "output": "test-output-axe-idlerule-2"
     }
     """
     When I wait the end of event processing
@@ -357,7 +343,7 @@ Feature: update alarm on idle rule
             },
             "ticket": {
               "_t": "assocticket",
-              "a": "test-idlerule-axe-idlerule-2-author",
+              "a": "root",
               "m": "test-idlerule-axe-idlerule-2-ticket"
             },
             "steps": [
@@ -375,7 +361,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-2-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-2-ticket"
               }
             ]
@@ -400,9 +386,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-2",
       "resource": "test-resource-axe-idlerule-2",
       "state": 2,
-      "output": "test-output-axe-idlerule-2",
-      "long_output": "test-long-output-axe-idlerule-2",
-      "author": "test-author-axe-idlerule-2"
+      "output": "test-output-axe-idlerule-2"
     }
     """
     When I wait the end of event processing
@@ -427,7 +411,7 @@ Feature: update alarm on idle rule
             },
             "ticket": {
               "_t": "assocticket",
-              "a": "test-idlerule-axe-idlerule-2-author",
+              "a": "root",
               "m": "test-idlerule-axe-idlerule-2-ticket"
             },
             "steps": [
@@ -445,7 +429,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-2-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-2-ticket"
               }
             ]
@@ -470,9 +454,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-2",
       "resource": "test-resource-axe-idlerule-2",
       "state": 3,
-      "output": "test-output-axe-idlerule-2",
-      "long_output": "test-long-output-axe-idlerule-2",
-      "author": "test-author-axe-idlerule-2"
+      "output": "test-output-axe-idlerule-2"
     }
     """
     When I wait the end of 2 events processing
@@ -496,7 +478,7 @@ Feature: update alarm on idle rule
             },
             "ticket": {
               "_t": "assocticket",
-              "a": "test-idlerule-axe-idlerule-2-author",
+              "a": "root",
               "m": "test-idlerule-axe-idlerule-2-ticket"
             },
             "steps": [
@@ -514,7 +496,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-2-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-2-ticket"
               },
               {
@@ -523,7 +505,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-2-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-2-ticket"
               }
             ]
@@ -545,7 +527,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-3-name",
-      "author": "test-idlerule-axe-idlerule-3-author",
       "type": "entity",
       "enabled": true,
       "priority": 42,
@@ -573,9 +554,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-3",
       "resource": "test-resource-axe-idlerule-3",
       "state": 0,
-      "output": "test-output-axe-idlerule-3",
-      "long_output": "test-long-output-axe-idlerule-3",
-      "author": "test-author-axe-idlerule-3"
+      "output": "test-output-axe-idlerule-3"
     }
     """
     When I wait the end of event processing
@@ -590,9 +569,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-3",
       "resource": "test-resource-axe-idlerule-3",
       "state": 0,
-      "output": "test-output-axe-idlerule-3",
-      "long_output": "test-long-output-axe-idlerule-3",
-      "author": "test-author-axe-idlerule-3"
+      "output": "test-output-axe-idlerule-3"
     }
     """
     When I wait the end of event processing
@@ -626,25 +603,25 @@ Feature: update alarm on idle rule
             "resource": "test-resource-axe-idlerule-3",
             "state": {
               "val": 3,
-              "a": "test-idlerule-axe-idlerule-3-author",
+              "a": "root",
               "m": "Idle rule test-idlerule-axe-idlerule-3-name"
             },
             "status": {
               "val": 5,
-              "a": "test-idlerule-axe-idlerule-3-author",
+              "a": "root",
               "m": "Idle rule test-idlerule-axe-idlerule-3-name"
             },
             "steps": [
               {
                 "_t": "stateinc",
                 "val": 3,
-                "a": "test-idlerule-axe-idlerule-3-author",
+                "a": "root",
                 "m": "Idle rule test-idlerule-axe-idlerule-3-name"
               },
               {
                 "_t": "statusinc",
                 "val": 5,
-                "a": "test-idlerule-axe-idlerule-3-author",
+                "a": "root",
                 "m": "Idle rule test-idlerule-axe-idlerule-3-name"
               }
             ]
@@ -669,9 +646,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-3",
       "resource": "test-resource-axe-idlerule-3",
       "state": 3,
-      "output": "test-output-axe-idlerule-3",
-      "long_output": "test-long-output-axe-idlerule-3",
-      "author": "test-author-axe-idlerule-3"
+      "output": "test-output-axe-idlerule-3"
     }
     """
     When I wait the end of event processing
@@ -729,7 +704,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-4-name",
-      "author": "test-idlerule-axe-idlerule-4-author",
       "type": "entity",
       "enabled": true,
       "priority": 43,
@@ -756,9 +730,7 @@ Feature: update alarm on idle rule
       "source_type": "component",
       "component":  "test-component-axe-idlerule-4",
       "state": 0,
-      "output": "test-output-axe-idlerule-4",
-      "long_output": "test-long-output-axe-idlerule-4",
-      "author": "test-author-axe-idlerule-4"
+      "output": "test-output-axe-idlerule-4"
     }
     """
     When I wait the end of 2 events processing
@@ -775,25 +747,25 @@ Feature: update alarm on idle rule
             "connector_name": "test-connector-name-axe-idlerule-4",
             "state": {
               "val": 3,
-              "a": "test-idlerule-axe-idlerule-4-author",
+              "a": "root",
               "m": "Idle rule test-idlerule-axe-idlerule-4-name"
             },
             "status": {
               "val": 5,
-              "a": "test-idlerule-axe-idlerule-4-author",
+              "a": "root",
               "m": "Idle rule test-idlerule-axe-idlerule-4-name"
             },
             "steps": [
               {
                 "_t": "stateinc",
                 "val": 3,
-                "a": "test-idlerule-axe-idlerule-4-author",
+                "a": "root",
                 "m": "Idle rule test-idlerule-axe-idlerule-4-name"
               },
               {
                 "_t": "statusinc",
                 "val": 5,
-                "a": "test-idlerule-axe-idlerule-4-author",
+                "a": "root",
                 "m": "Idle rule test-idlerule-axe-idlerule-4-name"
               }
             ]
@@ -817,9 +789,7 @@ Feature: update alarm on idle rule
       "source_type": "component",
       "component":  "test-component-axe-idlerule-4",
       "state": 0,
-      "output": "test-output-axe-idlerule-4",
-      "long_output": "test-long-output-axe-idlerule-4",
-      "author": "test-author-axe-idlerule-4"
+      "output": "test-output-axe-idlerule-4"
     }
     """
     When I wait the end of event processing
@@ -878,7 +848,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-5-name",
-      "author": "test-idlerule-axe-idlerule-5-author",
       "type": "entity",
       "enabled": true,
       "priority": 44,
@@ -905,9 +874,7 @@ Feature: update alarm on idle rule
       "source_type": "component",
       "component":  "test-component-axe-idlerule-5",
       "state": 0,
-      "output": "test-output-axe-idlerule-5",
-      "long_output": "test-long-output-axe-idlerule-5",
-      "author": "test-author-axe-idlerule-5"
+      "output": "test-output-axe-idlerule-5"
     }
     """
     When I wait the end of 2 events processing
@@ -923,25 +890,25 @@ Feature: update alarm on idle rule
             "connector_name": "test-connector-name-axe-idlerule-5",
             "state": {
               "val": 3,
-              "a": "test-idlerule-axe-idlerule-5-author",
+              "a": "root",
               "m": "Idle rule test-idlerule-axe-idlerule-5-name"
             },
             "status": {
               "val": 5,
-              "a": "test-idlerule-axe-idlerule-5-author",
+              "a": "root",
               "m": "Idle rule test-idlerule-axe-idlerule-5-name"
             },
             "steps": [
               {
                 "_t": "stateinc",
                 "val": 3,
-                "a": "test-idlerule-axe-idlerule-5-author",
+                "a": "root",
                 "m": "Idle rule test-idlerule-axe-idlerule-5-name"
               },
               {
                 "_t": "statusinc",
                 "val": 5,
-                "a": "test-idlerule-axe-idlerule-5-author",
+                "a": "root",
                 "m": "Idle rule test-idlerule-axe-idlerule-5-name"
               }
             ]
@@ -966,9 +933,7 @@ Feature: update alarm on idle rule
       "source_type": "component",
       "component":  "test-component-axe-idlerule-5",
       "state": 0,
-      "output": "test-output-axe-idlerule-5",
-      "long_output": "test-long-output-axe-idlerule-5",
-      "author": "test-author-axe-idlerule-5"
+      "output": "test-output-axe-idlerule-5"
     }
     """
     When I wait the end of 2 events processing
@@ -1026,7 +991,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-6-1-name",
-      "author": "test-idlerule-axe-idlerule-6-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -1043,8 +1007,7 @@ Feature: update alarm on idle rule
       "operation": {
         "type": "ack",
         "parameters": {
-          "output": "test-idlerule-axe-idlerule-6-1-output",
-          "author": "test-idlerule-axe-idlerule-6-1-author"
+          "output": "test-idlerule-axe-idlerule-6-1-output"
         }
       }
     }
@@ -1054,7 +1017,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-6-2-name",
-      "author": "test-idlerule-axe-idlerule-6-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -1072,8 +1034,7 @@ Feature: update alarm on idle rule
         "type": "assocticket",
         "parameters": {
           "ticket": "test-idlerule-axe-idlerule-6-2-ticket",
-          "output": "test-idlerule-axe-idlerule-6-2-output",
-          "author": "test-idlerule-axe-idlerule-6-2-author"
+          "output": "test-idlerule-axe-idlerule-6-2-output"
         }
       }
     }
@@ -1090,9 +1051,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-6",
       "resource": "test-resource-axe-idlerule-6",
       "state": 2,
-      "output": "test-output-axe-idlerule-6",
-      "long_output": "test-long-output-axe-idlerule-6",
-      "author": "test-author-axe-idlerule-6"
+      "output": "test-output-axe-idlerule-6"
     }
     """
     When I wait the end of 2 events processing
@@ -1116,7 +1075,7 @@ Feature: update alarm on idle rule
             },
             "ticket": {
               "_t": "assocticket",
-              "a": "test-idlerule-axe-idlerule-6-2-author",
+              "a": "root",
               "m": "test-idlerule-axe-idlerule-6-2-ticket"
             },
             "steps": [
@@ -1130,7 +1089,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-6-2-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-6-2-ticket"
               }
             ]
@@ -1190,9 +1149,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-6",
       "resource": "test-resource-axe-idlerule-6",
       "state": 2,
-      "output": "test-output-axe-idlerule-6",
-      "long_output": "test-long-output-axe-idlerule-6",
-      "author": "test-author-axe-idlerule-6"
+      "output": "test-output-axe-idlerule-6"
     }
     """
     When I wait the end of 2 events processing
@@ -1240,7 +1197,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-7-1-name",
-      "author": "test-idlerule-axe-idlerule-7-1-author",
       "type": "entity",
       "enabled": true,
       "priority": 48,
@@ -1261,7 +1217,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-7-2-name",
-      "author": "test-idlerule-axe-idlerule-7-2-author",
       "type": "entity",
       "enabled": true,
       "priority": 47,
@@ -1289,9 +1244,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-7",
       "resource": "test-resource-axe-idlerule-7",
       "state": 0,
-      "output": "test-output-axe-idlerule-7",
-      "long_output": "test-long-output-axe-idlerule-7",
-      "author": "test-author-axe-idlerule-7"
+      "output": "test-output-axe-idlerule-7"
     }
     """
     When I wait the end of 2 events processing
@@ -1321,7 +1274,7 @@ Feature: update alarm on idle rule
               {
                 "_t": "statusinc",
                 "val": 5,
-                "a": "test-idlerule-axe-idlerule-7-2-author"
+                "a": "root"
               }
             ]
           }
@@ -1379,9 +1332,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-7",
       "resource": "test-resource-axe-idlerule-7",
       "state": 0,
-      "output": "test-output-axe-idlerule-7",
-      "long_output": "test-long-output-axe-idlerule-7",
-      "author": "test-author-axe-idlerule-7"
+      "output": "test-output-axe-idlerule-7"
     }
     """
     When I wait the end of 2 events processing
@@ -1405,7 +1356,7 @@ Feature: update alarm on idle rule
               {
                 "_t": "statusinc",
                 "val": 5,
-                "a": "test-idlerule-axe-idlerule-7-2-author"
+                "a": "root"
               },
               {
                 "_t": "statedec",
@@ -1422,7 +1373,7 @@ Feature: update alarm on idle rule
               {
                 "_t": "statusinc",
                 "val": 5,
-                "a": "test-idlerule-axe-idlerule-7-2-author"
+                "a": "root"
               }
             ]
           }
@@ -1447,7 +1398,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-8-name",
-      "author": "test-idlerule-axe-idlerule-8-author",
       "type": "entity",
       "enabled": true,
       "priority": 49,
@@ -1475,9 +1425,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-8",
       "resource": "test-resource-axe-idlerule-8",
       "state": 1,
-      "output": "test-output-axe-idlerule-8",
-      "long_output": "test-long-output-axe-idlerule-8",
-      "author": "test-author-axe-idlerule-8"
+      "output": "test-output-axe-idlerule-8"
     }
     """
     When I wait the end of 2 events processing
@@ -1513,12 +1461,12 @@ Feature: update alarm on idle rule
               {
                 "_t": "stateinc",
                 "val": 3,
-                "a": "test-idlerule-axe-idlerule-8-author"
+                "a": "root"
               },
               {
                 "_t": "statusinc",
                 "val": 5,
-                "a": "test-idlerule-axe-idlerule-8-author"
+                "a": "root"
               }
             ]
           }
@@ -1542,9 +1490,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-8",
       "resource": "test-resource-axe-idlerule-8",
       "state": 1,
-      "output": "test-output-axe-idlerule-8",
-      "long_output": "test-long-output-axe-idlerule-8",
-      "author": "test-author-axe-idlerule-8"
+      "output": "test-output-axe-idlerule-8"
     }
     """
     When I wait the end of event processing
@@ -1612,7 +1558,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-9-1-name",
-      "author": "test-idlerule-axe-idlerule-9-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -1630,8 +1575,7 @@ Feature: update alarm on idle rule
         "type": "assocticket",
         "parameters": {
           "ticket": "test-idlerule-axe-idlerule-9-1-ticket",
-          "output": "test-idlerule-axe-idlerule-9-1-output",
-          "author": "test-idlerule-axe-idlerule-9-1-author"
+          "output": "test-idlerule-axe-idlerule-9-1-output"
         }
       }
     }
@@ -1642,7 +1586,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-9-2-name",
-      "author": "test-idlerule-axe-idlerule-9-author",
       "type": "entity",
       "enabled": true,
       "priority": 51,
@@ -1670,9 +1613,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-9",
       "resource": "test-resource-axe-idlerule-9",
       "state": 2,
-      "output": "test-output-axe-idlerule-9",
-      "long_output": "test-long-output-axe-idlerule-9",
-      "author": "test-author-axe-idlerule-9"
+      "output": "test-output-axe-idlerule-9"
     }
     """
     When I wait the end of 2 events processing
@@ -1696,7 +1637,7 @@ Feature: update alarm on idle rule
             },
             "ticket": {
               "_t": "assocticket",
-              "a": "test-idlerule-axe-idlerule-9-1-author",
+              "a": "root",
               "m": "test-idlerule-axe-idlerule-9-1-ticket"
             },
             "steps": [
@@ -1710,7 +1651,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "assocticket",
-                "a": "test-idlerule-axe-idlerule-9-1-author",
+                "a": "root",
                 "m": "test-idlerule-axe-idlerule-9-1-ticket"
               }
             ]
@@ -1770,9 +1711,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-9",
       "resource": "test-resource-axe-idlerule-9",
       "state": 2,
-      "output": "test-output-axe-idlerule-9",
-      "long_output": "test-long-output-axe-idlerule-9",
-      "author": "test-author-axe-idlerule-9"
+      "output": "test-output-axe-idlerule-9"
     }
     """
     When I wait the end of 2 events processing
@@ -1824,7 +1763,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-10-1-name",
-      "author": "test-idlerule-axe-idlerule-10-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -1841,8 +1779,7 @@ Feature: update alarm on idle rule
       "operation": {
         "type": "ack",
         "parameters": {
-          "output": "test-idlerule-axe-idlerule-10-1-output",
-          "author": "test-idlerule-axe-idlerule-10-1-author"
+          "output": "test-idlerule-axe-idlerule-10-1-output"
         }
       }
     }
@@ -1853,7 +1790,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-10-2-name",
-      "author": "test-idlerule-axe-idlerule-10-author",
       "type": "entity",
       "enabled": true,
       "priority": 52,
@@ -1881,9 +1817,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-10",
       "resource": "test-resource-axe-idlerule-10",
       "state": 2,
-      "output": "test-output-axe-idlerule-10",
-      "long_output": "test-long-output-axe-idlerule-10",
-      "author": "test-author-axe-idlerule-10"
+      "output": "test-output-axe-idlerule-10"
     }
     """
     When I wait the end of 2 events processing
@@ -1986,9 +1920,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-10",
       "resource": "test-resource-axe-idlerule-10",
       "state": 2,
-      "output": "test-output-axe-idlerule-10",
-      "long_output": "test-long-output-axe-idlerule-10",
-      "author": "test-author-axe-idlerule-10"
+      "output": "test-output-axe-idlerule-10"
     }
     """
     When I wait the end of 2 events processing
@@ -2060,7 +1992,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-axe-idlerule-11-name",
-      "author": "test-idlerule-axe-idlerule-11-author",
       "type": "entity",
       "enabled": true,
       "priority": 54,
@@ -2088,9 +2019,7 @@ Feature: update alarm on idle rule
       "component":  "test-component-axe-idlerule-11",
       "resource":  "test-resource-axe-idlerule-11",
       "state": 0,
-      "output": "test-output-axe-idlerule-11",
-      "long_output": "test-long-output-axe-idlerule-11",
-      "author": "test-author-axe-idlerule-11"
+      "output": "test-output-axe-idlerule-11"
     }
     """
     When I wait the end of 2 events processing
diff --git a/tests/functional/features/engines/integration/axe_idlerule_connector.feature b/tests/functional/features/engines/integration/axe_idlerule_connector.feature
index d2cdd452..9977ab0a 100644
--- a/tests/functional/features/engines/integration/axe_idlerule_connector.feature
+++ b/tests/functional/features/engines/integration/axe_idlerule_connector.feature
@@ -7,7 +7,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-idlerule-axe-idlerule-connector-1-name",
-      "author": "test-idlerule-axe-idlerule-connector-1-author",
       "type": "entity",
       "enabled": true,
       "priority": 60,
@@ -48,7 +47,6 @@ Feature: update connector alarm
       "on_failure": "pass",
       "priority": 1,
       "enabled": true,
-      "author": "test-eventfilter-axe-idlerule-connector-1-author",
       "description": "test-eventfilter-axe-idlerule-connector-1-description"
     }
     """
@@ -73,7 +71,6 @@ Feature: update connector alarm
       "on_success": "pass",
       "on_failure": "pass",
       "enabled": true,
-      "author": "test-eventfilter-axe-idlerule-connector-1-author",
       "description": "test-eventfilter-axe-idlerule-connector-1-description"
     }
     """
@@ -130,7 +127,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-idlerule-axe-idlerule-connector-2-name",
-      "author": "test-idlerule-axe-idlerule-connector-2-author",
       "type": "entity",
       "enabled": true,
       "priority": 60,
@@ -151,7 +147,6 @@ Feature: update connector alarm
     """
     {
       "enabled": true,
-      "author": "root",
       "name": "test-pbehavior-axe-idlerule-connector-2",
       "tstart": {{ now.Unix }},
       "tstop": {{ (now.Add (parseDuration "10m")).Unix }},
@@ -177,9 +172,7 @@ Feature: update connector alarm
       "source_type": "component",
       "component":  "test-component-axe-idlerule-connector-2",
       "state": 1,
-      "output": "test-output-axe-idlerule-connector-2",
-      "long_output": "test-long-output-axe-idlerule-connector-2",
-      "author": "test-author-axe-idlerule-connector-2"
+      "output": "test-output-axe-idlerule-connector-2"
     }
     """
     When I wait the end of 3 events processing
@@ -233,7 +226,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-idlerule-axe-idlerule-connector-3-name",
-      "author": "test-idlerule-axe-idlerule-connector-3-author",
       "type": "entity",
       "enabled": true,
       "priority": 60,
@@ -277,9 +269,7 @@ Feature: update connector alarm
       "source_type": "component",
       "component":  "test-component-axe-idlerule-connector-3",
       "state": 1,
-      "output": "test-output-axe-idlerule-connector-3",
-      "long_output": "test-long-output-axe-idlerule-connector-3",
-      "author": "test-author-axe-idlerule-connector-3"
+      "output": "test-output-axe-idlerule-connector-3"
     }
     """
     When I wait the end of 3 events processing
@@ -359,7 +349,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-idlerule-axe-idlerule-connector-4-name",
-      "author": "test-idlerule-axe-idlerule-connector-4-author",
       "type": "entity",
       "enabled": true,
       "priority": 60,
@@ -380,7 +369,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-scenario-axe-idlerule-connector-4-name",
-      "author": "test-scenario-axe-idlerule-connector-4-author",
       "enabled": true,
       "priority": 60,
       "triggers": ["create"],
@@ -393,7 +381,6 @@ Feature: update connector alarm
           ],
           "type": "assocticket",
           "parameters": {
-            "author": "test-author-axe-idlerule-connector-4",
             "output": "test-output-axe-idlerule-connector-4",
             "ticket": "test-ticket-axe-idlerule-connector-4"
           },
@@ -408,7 +395,6 @@ Feature: update connector alarm
           ],
           "type": "ack",
           "parameters": {
-            "author": "test-author-axe-idlerule-connector-4",
             "output": "test-output-axe-idlerule-connector-4"
           },
           "drop_scenario_if_not_matched": false,
@@ -428,9 +414,7 @@ Feature: update connector alarm
       "source_type": "component",
       "component":  "test-component-axe-idlerule-connector-4",
       "state": 1,
-      "output": "test-output-axe-idlerule-connector-4",
-      "long_output": "test-long-output-axe-idlerule-connector-4",
-      "author": "test-author-axe-idlerule-connector-4"
+      "output": "test-output-axe-idlerule-connector-4"
     }
     """
     When I wait the end of 2 events processing
@@ -453,12 +437,12 @@ Feature: update connector alarm
               },
               {
                 "_t": "assocticket",
-                "a": "test-author-axe-idlerule-connector-4",
+                "a": "root",
                 "m": "test-ticket-axe-idlerule-connector-4"
               },
               {
                 "_t": "ack",
-                "a": "test-author-axe-idlerule-connector-4",
+                "a": "root",
                 "m": "test-output-axe-idlerule-connector-4"
               }
             ]
@@ -480,7 +464,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-idlerule-axe-idlerule-connector-5-name",
-      "author": "test-idlerule-axe-idlerule-connector-5-author",
       "type": "entity",
       "enabled": true,
       "priority": 60,
@@ -502,7 +485,6 @@ Feature: update connector alarm
     {
       "name": "test-dynamicinfos-axe-idlerule-connector-5-name",
       "description": "test-dynamicinfos-axe-idlerule-connector-5-description",
-      "author": "test-dynamicinfos-axe-idlerule-connector-5-author",
       "disable_during_periods": [],
       "entity_patterns": [
         {
@@ -526,9 +508,7 @@ Feature: update connector alarm
       "source_type": "component",
       "component":  "test-component-axe-idlerule-connector-5",
       "state": 2,
-      "output": "test-output-axe-idlerule-connector-5",
-      "long_output": "test-long-output-axe-idlerule-connector-5",
-      "author": "test-author-axe-idlerule-connector-5"
+      "output": "test-output-axe-idlerule-connector-5"
     }
     """
     When I wait the end of 2 events processing
@@ -565,7 +545,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-idlerule-axe-idlerule-connector-6-name",
-      "author": "test-idlerule-axe-idlerule-connector-6-author",
       "type": "entity",
       "enabled": true,
       "priority": 44,
@@ -610,9 +589,7 @@ Feature: update connector alarm
       "source_type": "component",
       "component":  "test-component-axe-idlerule-connector-6",
       "state": 1,
-      "output": "test-output-axe-idlerule-connector-6",
-      "long_output": "test-long-output-axe-idlerule-connector-6",
-      "author": "test-author-axe-idlerule-connector-6"
+      "output": "test-output-axe-idlerule-connector-6"
     }
     """
     When I wait the end of 3 events processing
@@ -673,7 +650,6 @@ Feature: update connector alarm
     """
     {
       "name": "test-idlerule-axe-idlerule-connector-7-name",
-      "author": "test-idlerule-axe-idlerule-connector-7-author",
       "type": "entity",
       "enabled": true,
       "priority": 44,
@@ -700,9 +676,7 @@ Feature: update connector alarm
       "source_type": "component",
       "component":  "test-component-axe-idlerule-connector-7",
       "state": 1,
-      "output": "test-output-axe-idlerule-connector-7",
-      "long_output": "test-long-output-axe-idlerule-connector-7",
-      "author": "test-author-axe-idlerule-connector-7"
+      "output": "test-output-axe-idlerule-connector-7"
     }
     """
     When I wait the end of 2 events processing
@@ -713,8 +687,7 @@ Feature: update connector alarm
       "connector": "test-connector-axe-idlerule-connector-7",
       "connector_name": "test-connector-name-axe-idlerule-connector-7",
       "source_type": "connector",
-      "output": "test-output-axe-idlerule-connector-7",
-      "author": "test-author-axe-idlerule-connector-7"
+      "output": "test-output-axe-idlerule-connector-7"
     }
     """
     When I wait the end of event processing
diff --git a/tests/functional/features/engines/integration/entity_service_idle_rules.feature b/tests/functional/features/engines/integration/entity_service_idle_rules.feature
index 35aafcd4..9fe2f40d 100644
--- a/tests/functional/features/engines/integration/entity_service_idle_rules.feature
+++ b/tests/functional/features/engines/integration/entity_service_idle_rules.feature
@@ -23,7 +23,6 @@ Feature: entity_service idle_rules integration
     {
       "name": "test-idle-rule-es-integration-name",
       "description": "test-idle-rule-es-integration-description",
-      "author": "test-idle-rule-es-integration-author",
       "type": "entity",
       "enabled": true,
       "priority": 21,
@@ -128,7 +127,6 @@ Feature: entity_service idle_rules integration
     {
       "name": "test-idle-rule-es-integration-2-name",
       "description": "test-idle-rule-es-integration-2-description",
-      "author": "test-idle-rule-es-integration-2-author",
       "type": "entity",
       "enabled": true,
       "priority": 21,
@@ -210,7 +208,6 @@ Feature: entity_service idle_rules integration
     {
       "name": "test-idle-rule-es-integration-3-name",
       "description": "test-idle-rule-es-integration-3-description",
-      "author": "test-idle-rule-es-integration-3-author",
       "type": "entity",
       "enabled": true,
       "priority": 21,
@@ -299,7 +296,6 @@ Feature: entity_service idle_rules integration
     {
       "name": "test-idle-rule-es-integration-4-name",
       "description": "test-idle-rule-es-integration-4-description",
-      "author": "test-idle-rule-es-integration-4-author",
       "type": "entity",
       "enabled": true,
       "priority": 21,
@@ -323,7 +319,6 @@ Feature: entity_service idle_rules integration
     {
       "name": "test-idle-rule-es-integration-5-name",
       "description": "test-idle-rule-es-integration-5-description",
-      "author": "test-idle-rule-es-integration-5-author",
       "type": "entity",
       "enabled": true,
       "priority": 21,
diff --git a/tests/functional/features/engines/integration/pbehavior_axe_idlerule.feature b/tests/functional/features/engines/integration/pbehavior_axe_idlerule.feature
index d12622ae..f63a3bc4 100644
--- a/tests/functional/features/engines/integration/pbehavior_axe_idlerule.feature
+++ b/tests/functional/features/engines/integration/pbehavior_axe_idlerule.feature
@@ -7,7 +7,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-pbehavior-axe-idlerule-1-name",
-      "author": "test-idlerule-pbehavior-axe-idlerule-1-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -25,7 +24,6 @@ Feature: update alarm on idle rule
         "type": "pbehavior",
         "parameters": {
           "name": "test-pbehavior-pbehavior-axe-idlerule-1",
-          "author": "test-pbehavior-pbehavior-axe-idlerule-1-author",
           "start_on_trigger": true,
           "duration": {
             "seconds": 600,
@@ -49,9 +47,7 @@ Feature: update alarm on idle rule
       "component" :  "test-component-pbehavior-axe-idlerule-1",
       "resource" : "test-resource-pbehavior-axe-idlerule-1",
       "state" : 2,
-      "output" : "test-output-pbehavior-axe-idlerule-1",
-      "long_output" : "test-long-output-pbehavior-axe-idlerule-1",
-      "author" : "test-author-pbehavior-axe-idlerule-1"
+      "output" : "test-output-pbehavior-axe-idlerule-1"
     }
     """
     When I wait the end of 3 events processing
@@ -134,7 +130,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-pbehavior-axe-idlerule-2-name",
-      "author": "test-idlerule-pbehavior-axe-idlerule-2-author",
       "type": "alarm",
       "alarm_condition": "last_event",
       "enabled": true,
@@ -151,7 +146,6 @@ Feature: update alarm on idle rule
       "operation": {
         "type": "ack",
         "parameters": {
-          "author": "test-pbehavior-pbehavior-axe-idlerule-2-author",
           "output": "test-pbehavior-pbehavior-axe-idlerule-2-output"
         }
       },
@@ -163,7 +157,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-pbehavior-pbehavior-axe-idlerule-2-name",
-      "author": "test-pbehavior-pbehavior-axe-idlerule-2-author",
       "enabled": true,
       "tstart": {{ now.UTC.Unix }},
       "tstop": {{ (now.UTC.Add (parseDuration "7s")).Unix }},
@@ -190,9 +183,7 @@ Feature: update alarm on idle rule
       "component" :  "test-component-pbehavior-axe-idlerule-2",
       "resource" : "test-resource-pbehavior-axe-idlerule-2",
       "state" : 2,
-      "output" : "test-output-pbehavior-axe-idlerule-2",
-      "long_output" : "test-long-output-pbehavior-axe-idlerule-2",
-      "author" : "test-author-pbehavior-axe-idlerule-2"
+      "output" : "test-output-pbehavior-axe-idlerule-2"
     }
     """
     When I wait the end of event processing
@@ -233,7 +224,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "pbhenter",
-                "a": "test-author-pbehavior-axe-idlerule-2",
+                "a": "root",
                 "m": "Pbehavior test-pbehavior-pbehavior-axe-idlerule-2-name. Type: Engine maintenance. Reason: Test Engine"
               }
             ]
@@ -278,7 +269,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "pbhenter",
-                "a": "test-author-pbehavior-axe-idlerule-2",
+                "a": "root",
                 "m": "Pbehavior test-pbehavior-pbehavior-axe-idlerule-2-name. Type: Engine maintenance. Reason: Test Engine"
               },
               {
@@ -288,7 +279,7 @@ Feature: update alarm on idle rule
               },
               {
                 "_t": "ack",
-                "a": "test-pbehavior-pbehavior-axe-idlerule-2-author",
+                "a": "root",
                 "m": "test-pbehavior-pbehavior-axe-idlerule-2-output"
               }
             ]
@@ -310,7 +301,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-pbehavior-axe-idlerule-3-name",
-      "author": "test-idlerule-pbehavior-axe-idlerule-3-author",
       "type": "entity",
       "enabled": true,
       "priority": 51,
@@ -331,7 +321,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-pbehavior-pbehavior-axe-idlerule-3-name",
-      "author": "test-pbehavior-pbehavior-axe-idlerule-3-author",
       "enabled": true,
       "tstart": {{ now.UTC.Unix }},
       "tstop": {{ (now.UTC.Add (parseDuration "7s")).Unix }},
@@ -358,9 +347,7 @@ Feature: update alarm on idle rule
       "component" :  "test-component-pbehavior-axe-idlerule-3",
       "resource" : "test-resource-pbehavior-axe-idlerule-3",
       "state" : 0,
-      "output" : "test-output-pbehavior-axe-idlerule-3",
-      "long_output" : "test-long-output-pbehavior-axe-idlerule-3",
-      "author" : "test-author-pbehavior-axe-idlerule-3"
+      "output" : "test-output-pbehavior-axe-idlerule-3"
     }
     """
     When I wait the end of event processing
@@ -426,7 +413,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-idlerule-pbehavior-axe-idlerule-4-name",
-      "author": "test-idlerule-pbehavior-axe-idlerule-4-author",
       "type": "entity",
       "enabled": true,
       "priority": 52,
@@ -447,7 +433,6 @@ Feature: update alarm on idle rule
     """
     {
       "name": "test-pbehavior-pbehavior-axe-idlerule-4-name",
-      "author": "test-pbehavior-pbehavior-axe-idlerule-4-author",
       "enabled": true,
       "tstart": {{ now.UTC.Unix }},
       "tstop": {{ (now.UTC.Add (parseDuration "7s")).Unix }},
@@ -474,9 +459,7 @@ Feature: update alarm on idle rule
       "component" :  "test-component-pbehavior-axe-idlerule-4",
       "resource" : "test-resource-pbehavior-axe-idlerule-4",
       "state" : 3,
-      "output" : "test-output-pbehavior-axe-idlerule-4",
-      "long_output" : "test-long-output-pbehavior-axe-idlerule-4",
-      "author" : "test-author-pbehavior-axe-idlerule-4"
+      "output" : "test-output-pbehavior-axe-idlerule-4"
     }
     """
     When I wait the end of event processing
diff --git a/tests/functional/features/engines/integration/pbehavior_weather_services_entities.feature b/tests/functional/features/engines/integration/pbehavior_weather_services_entities.feature
index d07f114e..82481496 100644
--- a/tests/functional/features/engines/integration/pbehavior_weather_services_entities.feature
+++ b/tests/functional/features/engines/integration/pbehavior_weather_services_entities.feature
@@ -382,7 +382,6 @@ Feature: get service entities
     """
     {
       "enabled": true,
-      "author": "root",
       "name": "test-pbehavior-weather-service-entity-5-1",
       "comments":[{"author":"root","message":"pause test-pbehavior-weather-service-entity-5"}],
       "tstart": {{ now.Unix }},
diff --git a/tests/functional/features/engines/remediation/alarm_get.feature b/tests/functional/features/engines/remediation/alarm_get.feature
index 95711663..b75c698c 100644
--- a/tests/functional/features/engines/remediation/alarm_get.feature
+++ b/tests/functional/features/engines/remediation/alarm_get.feature
@@ -14,7 +14,6 @@ Feature: update an instruction statistics
         }
       ],
       "description": "test-instruction-to-alarm-get-auto-instruction-flags-1-1-description",
-      "author": "test-instruction-to-alarm-get-auto-instruction-flags-1-1-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 1,
@@ -40,7 +39,6 @@ Feature: update an instruction statistics
         }
       ],
       "description": "test-instruction-to-alarm-get-auto-instruction-flags-1-2-description",
-      "author": "test-instruction-to-alarm-get-auto-instruction-flags-1-2-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 1,
diff --git a/tests/functional/features/engines/remediation/instructionexecution_stats.feature b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
index 22428560..1de9c0a0 100644
--- a/tests/functional/features/engines/remediation/instructionexecution_stats.feature
+++ b/tests/functional/features/engines/remediation/instructionexecution_stats.feature
@@ -17,7 +17,6 @@ Feature: update an instruction statistics
         }
       ],
       "description": "test-instruction-to-stats-update-1-description",
-      "author": "test-instruction-to-stats-update-1-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 1,
@@ -291,7 +290,6 @@ Feature: update an instruction statistics
         }
       ],
       "description": "test-instruction-to-stats-update-2-description",
-      "author": "test-instruction-to-stats-update-2-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 1,
diff --git a/tests/functional/features/engines/remediation/jobexecution_start.feature b/tests/functional/features/engines/remediation/jobexecution_start.feature
index e34dd8d9..bf1c6918 100644
--- a/tests/functional/features/engines/remediation/jobexecution_start.feature
+++ b/tests/functional/features/engines/remediation/jobexecution_start.feature
@@ -8,7 +8,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-1-1-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
       "payload": "{\"resource1\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity1\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -20,7 +19,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-1-2-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
       "payload": "{\"resource2\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity2\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -39,7 +37,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-1-description",
-      "author": "test-instruction-to-job-execution-start-1-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -320,7 +317,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-2-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-http-error",
       "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -339,7 +335,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-2-description",
-      "author": "test-instruction-to-job-execution-start-2-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -448,7 +443,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-3-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
       "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -467,7 +461,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-3-description",
-      "author": "test-instruction-to-job-execution-start-3-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -554,7 +547,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-4-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
       "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -573,7 +565,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-4-1-description",
-      "author": "test-instruction-to-job-execution-start-4-1-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -609,7 +600,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-4-2-description",
-      "author": "test-instruction-to-job-execution-start-4-2-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -719,7 +709,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-5-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
       "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -738,7 +727,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-5-description",
-      "author": "test-instruction-to-job-execution-start-5-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -816,7 +804,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-6-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
       "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.Resource }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -835,7 +822,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-6-description",
-      "author": "test-instruction-to-job-execution-start-6-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
@@ -907,7 +893,6 @@ Feature: run a job
     """
     {
       "name": "test-job-to-job-execution-start-7-name",
-      "author": "test-author",
       "config": "test-job-config-to-run-manual-job",
       "job_id": "test-job-succeeded",
       "payload": "{\"resource\": \"{{ `{{ .Alarm.Value.ResourceBadValue }}` }}\",\"entity\": \"{{ `{{ .Entity.ID }}` }}\"}"
@@ -926,7 +911,6 @@ Feature: run a job
         }
       ],
       "description": "test-instruction-to-job-execution-start-7-description",
-      "author": "test-instruction-to-job-execution-start-7-author",
       "enabled": true,
       "timeout_after_execution": {
         "seconds": 10,
-- 
2.25.1


From 021f890231ce3a030dc0b276888858f8b41496c7 Mon Sep 17 00:00:00 2001
From: Ivan Kalugin <ivan.kalugin@noveogroup.com>
Date: Fri, 11 Jun 2021 13:50:03 +0700
Subject: [PATCH 66/66] fix apporval auto instructions

---
 fixtures/instruction.json                     |  26 ++
 fixtures/job.json                             |  27 ++
 .../instruction_create_with_approval.feature  | 236 +++++++++++++++-
 .../instruction_update_with_approval.feature  | 266 ++++++++++++++++++
 4 files changed, 554 insertions(+), 1 deletion(-)

diff --git a/fixtures/instruction.json b/fixtures/instruction.json
index 318eef07..2c545fc1 100644
--- a/fixtures/instruction.json
+++ b/fixtures/instruction.json
@@ -2026,6 +2026,32 @@
     "last_modified": 1596712203,
     "created": 1596712203
   },
+  {
+    "_id": "test-instruction-to-run-auto-instruction-to-approve-update",
+    "type": 1,
+    "name": "est-instruction-to-run-auto-instruction-to-approve-update-name",
+    "entity_patterns": [
+      {
+        "name": "test-instruction-to-run-auto-instruction-to-approve-update-pattern"
+      }
+    ],
+    "description": "test-instruction-to-run-auto-instruction-to-approve-update-description",
+    "jobs": [
+      {
+        "job": "test-job-to-run-auto-instruction-to-approve-update",
+        "stop_on_fail": false
+      }
+    ],
+    "timeout_after_execution": {
+      "seconds": 2,
+      "unit": "s"
+    },
+    "priority": 1000,
+    "author": "test-user-author-1-id",
+    "enabled": true,
+    "last_modified": 1596712203,
+    "created": 1596712203
+  },
   {
     "_id": "test-instruction-to-stats-get-1",
     "type": 0,
diff --git a/fixtures/job.json b/fixtures/job.json
index c38b8f92..3bb4405d 100644
--- a/fixtures/job.json
+++ b/fixtures/job.json
@@ -125,6 +125,33 @@
     "payload": "{\"test-job-to-run-auto-instruction-4-key\": \"test-job-to-run-auto-instruction-4-val\"}",
     "created": 1596712203
   },
+  {
+    "_id": "test-job-to-run-auto-instruction-to-approve-update",
+    "name": "test-job-to-run-auto-instruction-to-approve-update-name",
+    "author": "test-user-author-1-id",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-http-error",
+    "payload": "{\"test-job-to-run-auto-instruction-to-approve-update-key\": \"test-job-to-run-auto-instruction-to-approve-update-val\"}",
+    "created": 1596712203
+  },
+  {
+    "_id": "test-job-to-run-auto-instruction-to-approve-update-2",
+    "name": "test-job-to-run-auto-instruction-to-approve-update-2-name",
+    "author": "test-user-author-1-id",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-http-error",
+    "payload": "{\"test-job-to-run-auto-instruction-to-approve-update-2-key\": \"test-job-to-run-auto-instruction-to-approve-update-2-val\"}",
+    "created": 1596712203
+  },
+  {
+    "_id": "test-job-to-run-auto-instruction-5",
+    "name": "test-job-to-run-auto-instruction-5-name",
+    "author": "test-user-author-1-id",
+    "config": "test-job-config-to-run-auto-instruction",
+    "external_id": "test-job-long-succeeded",
+    "payload": "{\"test-job-to-run-auto-instruction-5-key\": \"test-job-to-run-auto-instruction-5-val\"}",
+    "created": 1596712203
+  },
   {
     "_id": "test-job-to-get-running-job",
     "name": "test-job-to-get-running-job-name",
diff --git a/tests/functional/features/api/cat/instruction_create_with_approval.feature b/tests/functional/features/api/cat/instruction_create_with_approval.feature
index 59b3966d..e6b42644 100644
--- a/tests/functional/features/api/cat/instruction_create_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_create_with_approval.feature
@@ -3491,4 +3491,238 @@ Feature: instruction approval creation
     """
     Then the response code should be 200
     When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-8-id
-    Then the response code should be 404
\ No newline at end of file
+    Then the response code should be 404
+    
+  Scenario: given create request with approval request for auto instruction with user or role should return ok
+    When I am authenticated with username "root" and password "test"
+    When I do POST /api/v4/cat/instructions:
+    """json
+    {
+      "_id": "test-instruction-to-create-with-approval-16-id",
+      "type": 1,
+      "name": "test-instruction-to-create-with-approval-16-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-create-with-approval-16-pattern"
+        }
+      ],
+      "description": "test-instruction-to-create-with-approval-16-description",
+      "enabled": true,
+      "priority": 100,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "jobs": [
+        {
+          "stop_on_fail": true,
+          "job": "test-job-to-instruction-edit-1"
+        },
+        {
+          "job": "test-job-to-instruction-edit-2"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 201
+    Then the response body should contain:
+    """json
+    {
+      "_id": "test-instruction-to-create-with-approval-16-id",
+      "status": 1,
+      "type": 1,
+      "approval": {
+        "comment": "test comment",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
+        "requested_by": "root"
+      }
+    }
+    """
+    When I do GET /api/v4/cat/instructions?search=test-instruction-to-create-with-approval-16
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "data": [
+        {
+          "_id": "test-instruction-to-create-with-approval-16-id",
+          "type": 1,
+          "status": 1,
+          "alarm_patterns": null,
+          "entity_patterns": [
+            {
+              "name": "test-instruction-to-create-with-approval-16-pattern"
+            }
+          ],
+          "name": "test-instruction-to-create-with-approval-16-name",
+          "description": "test-instruction-to-create-with-approval-16-description",
+          "author": {
+            "_id": "root",
+            "name": "root"
+          },
+          "enabled": true,
+          "jobs": [
+            {
+              "stop_on_fail": true,
+              "job": {
+                "_id": "test-job-to-instruction-edit-1",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
+                "config": {
+                  "_id": "test-job-config-to-edit-instruction",
+                  "auth_token": "test-auth-token",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
+                  "host": "http://example.com",
+                  "name": "test-job-config-to-edit-instruction-name",
+                  "type": "rundeck"
+                },
+                "job_id": "test-job-to-instruction-edit-1-external-id",
+                "name": "test-job-to-instruction-edit-1-name",
+                "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+              }
+            },
+            {
+              "job": {
+                "_id": "test-job-to-instruction-edit-2",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
+                "config": {
+                  "_id": "test-job-config-to-edit-instruction",
+                  "auth_token": "test-auth-token",
+                  "author": {
+                    "_id": "test-user-author-1-id",
+                    "name": "test-user-author-1-username"
+                  },
+                  "host": "http://example.com",
+                  "name": "test-job-config-to-edit-instruction-name",
+                  "type": "rundeck"
+                },
+                "job_id": "test-job-to-instruction-edit-2-external-id",
+                "name": "test-job-to-instruction-edit-2-name",
+                "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+              }
+            }
+          ],
+          "approval": {
+            "comment": "test comment",
+            "user": {
+              "_id": "approveruser",
+              "name": "approveruser"
+            },
+            "requested_by": "root"
+          }
+        }
+      ],
+      "meta": {
+        "page": 1,
+        "page_count": 1,
+        "per_page": 10,
+        "total_count": 1
+      }
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-create-with-approval-16-id/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "original": {
+        "_id": "test-instruction-to-create-with-approval-16-id",
+        "type": 1,
+        "status": 1,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test-instruction-to-create-with-approval-16-pattern"
+          }
+        ],
+        "name": "test-instruction-to-create-with-approval-16-name",
+        "description": "test-instruction-to-create-with-approval-16-description",
+        "author": {
+          "_id": "root",
+          "name": "root"
+        },
+        "enabled": true,
+        "jobs": [
+          {
+            "stop_on_fail": true,
+            "job": {
+              "_id": "test-job-to-instruction-edit-1",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
+              "config": {
+                "_id": "test-job-config-to-edit-instruction",
+                "auth_token": "test-auth-token",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
+                "host": "http://example.com",
+                "name": "test-job-config-to-edit-instruction-name",
+                "type": "rundeck"
+              },
+              "job_id": "test-job-to-instruction-edit-1-external-id",
+              "name": "test-job-to-instruction-edit-1-name",
+              "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+            }
+          },
+          {
+            "job": {
+              "_id": "test-job-to-instruction-edit-2",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
+              "config": {
+                "_id": "test-job-config-to-edit-instruction",
+                "auth_token": "test-auth-token",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
+                "host": "http://example.com",
+                "name": "test-job-config-to-edit-instruction-name",
+                "type": "rundeck"
+              },
+              "job_id": "test-job-to-instruction-edit-2-external-id",
+              "name": "test-job-to-instruction-edit-2-name",
+              "payload": "{\"key1\": \"val1\",\"key2\": \"val2\"}"
+            }
+          }
+        ],
+        "approval": {
+          "comment": "test comment",
+          "user": {
+            "_id": "approveruser",
+            "name": "approveruser"
+          },
+          "requested_by": "root"
+        }
+      },
+      "approval": {
+        "comment": "test comment",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
+        "requested_by": "root"
+      }
+    }
+    """
\ No newline at end of file
diff --git a/tests/functional/features/api/cat/instruction_update_with_approval.feature b/tests/functional/features/api/cat/instruction_update_with_approval.feature
index 31831ccd..d8bd0148 100644
--- a/tests/functional/features/api/cat/instruction_update_with_approval.feature
+++ b/tests/functional/features/api/cat/instruction_update_with_approval.feature
@@ -2239,4 +2239,270 @@ Feature: instruction approval update
         }
       ]
     }
+    """
+
+  Scenario: PUT a valid instruction with approval with username request should return ok and valid approval response for auto instructions
+    When I am authenticated with username "manageruser" and password "test"
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-run-auto-instruction-to-approve-update:
+    """json
+    {
+      "name": "test-instruction-to-run-auto-instruction-to-approve-update-name",
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-run-auto-instruction-to-approve-update-pattern"
+        }
+      ],
+      "description": "test-instruction-to-run-auto-instruction-to-approve-update-description",
+      "enabled": true,
+      "priority": 1000,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "jobs": [
+        {
+          "stop_on_fail": false,
+          "job": "test-job-to-run-auto-instruction-to-approve-update"
+        },
+        {
+          "stop_on_fail": false,
+          "job": "test-job-to-run-auto-instruction-to-approve-update-2"
+        }
+      ],
+      "approval": {
+        "user": "approveruser",
+        "comment": "test comment"
+      }
+    }
+    """
+    Then the response code should be 200
+    When I do GET /api/v4/cat/instructions/test-instruction-to-run-auto-instruction-to-approve-update/approval
+    Then the response code should be 403
+    Then the response body should be:
+    """json
+    {
+      "error": "user is not assigned to approval"
+    }
+    """
+    When I am authenticated with username "approveruser" and password "test"
+    When I do GET /api/v4/cat/instructions/test-instruction-to-run-auto-instruction-to-approve-update/approval
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "approval": {
+        "comment": "test comment",
+        "user": {
+          "_id": "approveruser",
+          "name": "approveruser"
+        },
+        "requested_by": "manageruser"
+      },
+      "original": {
+        "_id": "test-instruction-to-run-auto-instruction-to-approve-update",
+        "type": 1,
+        "status": 0,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test-instruction-to-run-auto-instruction-to-approve-update-pattern"
+          }
+        ],
+        "name": "est-instruction-to-run-auto-instruction-to-approve-update-name",
+        "description": "test-instruction-to-run-auto-instruction-to-approve-update-description",
+        "author": {
+          "_id": "test-user-author-1-id",
+          "name": "test-user-author-1-username"
+        },
+        "enabled": true,
+        "timeout_after_execution": {
+          "seconds": 2,
+          "unit": "s"
+        },
+        "priority": 1000,
+        "jobs": [
+          {
+            "job": {
+              "_id": "test-job-to-run-auto-instruction-to-approve-update",
+              "name": "test-job-to-run-auto-instruction-to-approve-update-name",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
+              "config": {
+                "_id": "test-job-config-to-run-auto-instruction",
+                "name": "test-job-config-to-run-auto-instruction-name",
+                "type": "rundeck",
+                "host": "http://localhost:3000",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
+                "auth_token": "test-job-config-to-run-auto-instruction-token"
+              },
+              "job_id": "test-job-http-error",
+              "payload": "{\"test-job-to-run-auto-instruction-to-approve-update-key\": \"test-job-to-run-auto-instruction-to-approve-update-val\"}"
+            },
+            "stop_on_fail": false
+          }
+        ],
+        "created": 1596712203,
+        "last_modified": 1596712203
+      },
+      "updated": {
+        "type": 1,
+        "status": 2,
+        "alarm_patterns": null,
+        "entity_patterns": [
+          {
+            "name": "test-instruction-to-run-auto-instruction-to-approve-update-pattern"
+          }
+        ],
+        "name": "test-instruction-to-run-auto-instruction-to-approve-update-name",
+        "description": "test-instruction-to-run-auto-instruction-to-approve-update-description",
+        "author": {
+          "_id": "manageruser",
+          "name": "manageruser"
+        },
+        "enabled": true,
+        "timeout_after_execution": {
+          "seconds": 10,
+          "unit": "m"
+        },
+        "priority": 1000,
+        "jobs": [
+          {
+            "job": {
+              "_id": "test-job-to-run-auto-instruction-to-approve-update",
+              "name": "test-job-to-run-auto-instruction-to-approve-update-name",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
+              "config": {
+                "_id": "test-job-config-to-run-auto-instruction",
+                "name": "test-job-config-to-run-auto-instruction-name",
+                "type": "rundeck",
+                "host": "http://localhost:3000",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
+                "auth_token": "test-job-config-to-run-auto-instruction-token"
+              },
+              "job_id": "test-job-http-error",
+              "payload": "{\"test-job-to-run-auto-instruction-to-approve-update-key\": \"test-job-to-run-auto-instruction-to-approve-update-val\"}"
+            },
+            "stop_on_fail": false
+          },
+          {
+            "job": {
+              "_id": "test-job-to-run-auto-instruction-to-approve-update-2",
+              "name": "test-job-to-run-auto-instruction-to-approve-update-2-name",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
+              "config": {
+                "_id": "test-job-config-to-run-auto-instruction",
+                "name": "test-job-config-to-run-auto-instruction-name",
+                "type": "rundeck",
+                "host": "http://localhost:3000",
+                "author": {
+                  "_id": "test-user-author-1-id",
+                  "name": "test-user-author-1-username"
+                },
+                "auth_token": "test-job-config-to-run-auto-instruction-token"
+              },
+              "job_id": "test-job-http-error",
+              "payload": "{\"test-job-to-run-auto-instruction-to-approve-update-2-key\": \"test-job-to-run-auto-instruction-to-approve-update-2-val\"}"
+            },
+            "stop_on_fail": false
+          }
+        ]
+      }
+    }
+    """
+    When I do PUT /api/v4/cat/instructions/test-instruction-to-run-auto-instruction-to-approve-update/approval:
+    """json
+    {
+      "approve": true
+    }
+    """
+    When I do GET /api/v4/cat/instructions/test-instruction-to-run-auto-instruction-to-approve-update
+    Then the response code should be 200
+    Then the response body should contain:
+    """json
+    {
+      "type": 1,
+      "status": 0,
+      "alarm_patterns": null,
+      "entity_patterns": [
+        {
+          "name": "test-instruction-to-run-auto-instruction-to-approve-update-pattern"
+        }
+      ],
+      "name": "test-instruction-to-run-auto-instruction-to-approve-update-name",
+      "description": "test-instruction-to-run-auto-instruction-to-approve-update-description",
+      "author": {
+        "_id": "manageruser",
+        "name": "manageruser"
+      },
+      "enabled": true,
+      "timeout_after_execution": {
+        "seconds": 10,
+        "unit": "m"
+      },
+      "priority": 1000,
+      "jobs": [
+        {
+          "job": {
+            "_id": "test-job-to-run-auto-instruction-to-approve-update",
+            "name": "test-job-to-run-auto-instruction-to-approve-update-name",
+            "author": {
+              "_id": "test-user-author-1-id",
+              "name": "test-user-author-1-username"
+            },
+            "config": {
+              "_id": "test-job-config-to-run-auto-instruction",
+              "name": "test-job-config-to-run-auto-instruction-name",
+              "type": "rundeck",
+              "host": "http://localhost:3000",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
+              "auth_token": "test-job-config-to-run-auto-instruction-token"
+            },
+            "job_id": "test-job-http-error",
+            "payload": "{\"test-job-to-run-auto-instruction-to-approve-update-key\": \"test-job-to-run-auto-instruction-to-approve-update-val\"}"
+          },
+          "stop_on_fail": false
+        },
+        {
+          "job": {
+            "_id": "test-job-to-run-auto-instruction-to-approve-update-2",
+            "name": "test-job-to-run-auto-instruction-to-approve-update-2-name",
+            "author": {
+              "_id": "test-user-author-1-id",
+              "name": "test-user-author-1-username"
+            },
+            "config": {
+              "_id": "test-job-config-to-run-auto-instruction",
+              "name": "test-job-config-to-run-auto-instruction-name",
+              "type": "rundeck",
+              "host": "http://localhost:3000",
+              "author": {
+                "_id": "test-user-author-1-id",
+                "name": "test-user-author-1-username"
+              },
+              "auth_token": "test-job-config-to-run-auto-instruction-token"
+            },
+            "job_id": "test-job-http-error",
+            "payload": "{\"test-job-to-run-auto-instruction-to-approve-update-2-key\": \"test-job-to-run-auto-instruction-to-approve-update-2-val\"}"
+          },
+          "stop_on_fail": false
+        }
+      ]
+    }
     """
\ No newline at end of file
-- 
2.25.1


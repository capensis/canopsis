stages:
  - test

before_script:
  - uname -a
  - docker -v
  - git --no-pager show

variables:
  COMPOSE_HTTP_TIMEOUT: "180"
  COMPOSE_PROJECT_NAME: "test${CI_JOB_ID}"
  CANOPSIS_DISTRIBUTION: "debian-9"
  CANOPSIS_TAG: "ci"
  CANOPSIS_UIV2_BRICKS_TAG: "develop"
  CANOPSIS_DOCKER_MODE: "test-ci"
  CANOPSIS_CATAG_TOKEN: "not_using_it"
  CANOPSIS_ENV_CONFIRM: "0"
  CANOPSIS_SKIP_GO: "1"

stage_test:
  stage: test
  tags: ["canopsis"]
  script:
    - git submodule update --init
    - ./build-docker.sh
    - echo CANOPSIS_TAG=${CANOPSIS_DISTRIBUTION}-ci-test >> .env
    - docker-compose -f docker-compose.ci.yml -p ${COMPOSE_PROJECT_NAME} up -d
    - ./docker/wait-provisionning.sh docker-compose.ci.yml ${COMPOSE_PROJECT_NAME}
    - docker-compose -f docker-compose.ci.yml -p ${COMPOSE_PROJECT_NAME} restart
    - docker exec -t ${COMPOSE_PROJECT_NAME}_webserver_1 /bin/bash -c "source ~/.bashrc && /opt/canopsis/bin/ut_runner /opt/canopsis/test"
    - docker cp ${COMPOSE_PROJECT_NAME}_webserver_1:/opt/canopsis/tmp/tests_report/ tests_report

  artifacts:
    paths:
      - tests_report

after_script:
  - docker-compose -f docker-compose.ci.yml -p ${COMPOSE_PROJECT_NAME} kill
  - docker-compose -f docker-compose.ci.yml -p ${COMPOSE_PROJECT_NAME} rm -sf
  - docker-compose -f docker-compose.ci.yml -p ${COMPOSE_PROJECT_NAME} down
  - docker volume prune -f

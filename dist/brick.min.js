Ember.Application.initializer({name:"component-querybuilder",initialize:function(e,t){var r=e.lookupFactory("utility:i18n"),i=Ember.Component.extend({viewTabColumns:[{name:"connector",title:"connector"},{name:"connector_name",title:"connector_name"},{name:"component",title:"component"},{name:"resource",title:"resource"}],classNames:["query-builder"],filterValue:"",didInsertElement:function(){var t=[];Ember.get(e.lookupFactory("model:event"),"attributes").forEach(function(e,r){console.error(e);var i={id:r,label:r,type:e.type};"boolean"===e.type&&(i.input="radio",i.values={"true":"True","false":"False"}),"number"===e.type&&(i.type="integer"),"object"!==e.type&&"array"!==e.type&&t.pushObject(i)}),this.$().find(".builder").queryBuilder({filters:t,lang_code:r.lang,plugins:["key-editable-select"]}),this.get("filterValue")&&this.$().find(".builder").queryBuilder("setRulesFromMongo",JSON.parse(this.get("filterValue")));var i=this;this.$().find(".builder").on("afterUpdateRuleFilter.queryBuilder afterDeleteGroup.queryBuilder afterAddRule.queryBuilder afterDeleteRule.queryBuilder afterUpdateRuleValue.queryBuilder afterUpdateRuleOperator.queryBuilder afterUpdateGroupCondition.queryBuilder",function(){var e=i.$().find(".builder").queryBuilder("getMongo");$.isEmptyObject(e)||i.set("filterValue",JSON.stringify(e,null,2))}),this.$(".btn-reset").on("click",function(){i.$().find(".builder").queryBuilder("reset"),i.set("filterValue","{}")})}});t.register("component:component-querybuilder",i)}});
//# sourceMappingURL=dist/brick.map.js
Ember.Application.initializer({name:"component-querybuilder",initialize:function(e,t){var r=e.lookupFactory("utility:i18n"),n=Ember.set,o=Ember.get,i=Ember.String.loc,l=function(e){var t,r=e.split(" "),n={component:[],resource:[],name:[]};for(t=0;t<r.length;t++){var o=r[t];if(""!==o){var i=o.slice(3)||null;0===o.indexOf("co:")?n.component.push(i):0===o.indexOf("re:")?n.resource.push(i):0===o.indexOf("me:")?n.name.push(i):n.name.push(o)}}var l={$and:[]},a={component:{$or:[]},resource:{$or:[]},name:{$or:[]}};for(var c in a){for(t=0;t<n[c].length;t++){var u={},s=n[c][t];null!==s?u[c]={$regex:s}:u[c]=null,a[c].$or.push(u)}var d=a[c].$or.length;1===d&&(a[c]=a[c].$or[0]),d>0&&l.$and.push(a[c])}return 1===l.$and.length&&(l=l.$and[0]),l},a=function(e){for(var t=[],r=Ember.keys(e),n=0;n<r.length;n++){var o=r[n];if(Ember.isArray(e[o]))for(var i=0;i<e[o].length;i++)t=$.unique(t.concat(a(e[o][i])));else"object"===e[o]?(t.push(o),t=$.unique(t.concat(a(e[o])))):t.push(o)}return t=$(t).not(["$eq","$regex","$ne","$gt","$gte","$lt","$lte","$in","$ne","$nin","$exists","$type","$mod","$where","$text"]).get()},c=Ember.Component.extend({viewTabColumns:[{name:"connector",title:"connector"},{name:"connector_name",title:"connector_name"},{name:"component",title:"component"},{name:"resource",title:"resource"}],selectionTabColumns:[{name:"connector",title:"connector"},{name:"connector_name",title:"connector_name"},{name:"component",title:"component"},{name:"resource",title:"resource"},{action:"select",actionAll:o(this,"multiselect")===!0?"selectAll":void 0,title:new Ember.Handlebars.SafeString('<span class="glyphicon glyphicon-plus-sign"></span>'),style:"text-align: center;"}],helpModal:{title:i("Syntax"),content:["<ul>","<li><code>co:regex</code> : ",i("look for a component"),"</li>","<li><code>re:regex</code> : ",i("look for a resource"),"</li>","<li><code>me:regex</code> : ",i("look for a metric"),"(<code>me:</code>",i(" isn't needed for this one"),")</li>","<li>",i("combine all of them to improve your search")," : <code>co:regex re:regex me:regex</code></li>","<li><code>co:</code>, <code>re:</code>, <code>me:</code> : ",i("look for non-existant field"),"</li>","</ul>"].join("")},classNames:["query-builder"],selectionTabSearch:null,filterValue:"",actions:{search:function(e){if(e){var t=l(e);alert(JSON.stringify(t)),n(this,"selectionTabSearch",JSON.stringify(t))}else n(this,"selectionTabSearch",null)},select:function(e){var t=o(this,"filterValue")||"{}";t=JSON.parse(t),t||(t={}),t.$or||(t.$or=[]),t.$and&&(t.$or.pushObject({$and:t.$and}),t={$or:t.$or});var r=o(e,"id");t.$or.findBy("_id",r)||t.$or.pushObject({_id:o(e,"id")}),this.$(".builder").queryBuilder("setRulesFromMongo",t),n(this,"filterValue",JSON.stringify(t,null,2))}},didInsertElement:function(){for(var e=[],t=window.schemasRegistry.getByName("event").schema,n=0;n<t.categories.length;n++)for(var o=t.categories[n].title,i=0;i<t.categories[n].keys.length;i++){var l=t.categories[n].keys[i],c=t.properties[l],u=l,s={id:u,label:u,type:c.type,optgroup:o};"boolean"===c.type&&(s.input="radio",s.values={"true":"True","false":"False"}),"number"===c.type&&(s.type="integer"),"object"!==c.type&&"array"!==c.type&&e.pushObject(s)}e.pushObject({id:"_id",label:"_id",type:"string",optgroup:"system"});var d=[];for(n=0;n<e.length;n++)d.push(e[n].id);var p=this.get("filterValue")||void 0;if(p&&"{}"!==p){p=JSON.parse(p);var m=a(p);for(m=$(m).not(d).get(),n=0;n<m.length;n++)e.pushObject({id:m[n],label:m[n],type:"string",optgroup:"custom"})}this.$().find(".builder").queryBuilder({filters:e,lang_code:r.lang,plugins:["key-editable-select"]}),p&&"{}"!==p&&this.$().find(".builder").queryBuilder("setRulesFromMongo",p);var f=this;this.$().find(".builder").on("afterUpdateRuleFilter.queryBuilder afterDeleteGroup.queryBuilder afterAddRule.queryBuilder afterDeleteRule.queryBuilder afterUpdateRuleValue.queryBuilder afterUpdateRuleOperator.queryBuilder afterUpdateGroupCondition.queryBuilder",function(){var e=f.$().find(".builder").queryBuilder("getMongo");$.isEmptyObject(e)||f.set("filterValue",JSON.stringify(e,null,2))}),this.$(".btn-reset").on("click",function(){f.$().find(".builder").queryBuilder("reset"),f.set("filterValue","{}")})}});t.register("component:component-querybuilder",c)}});
//# sourceMappingURL=dist/brick.map.js
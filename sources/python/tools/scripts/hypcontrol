#!/bin/bash

. $HOME/etc/hypcontrol.conf

if [ $? -ne 0 ]
then
    echo "Error: Can't find configuration: $HOME/etc/hypcontrol.conf"
    exit 1
fi

function reverse(){
    declare -a array=("${!1}")

    for item in ${array[@]}
    do
        echo $item
    done | tac
}

function do_cmd(){
    cmd=$1
    declare -a processes=("${!2}")

    declare -A waitfor

    for service in ${processes[@]}
    do
        if [[ "$service" =~ "*" &&Â "$cmd" != "status" ]]
        then
            service $service m$cmd > /dev/null 2>&1 &
        else
            service $service $cmd > /dev/null 2>&1 &
        fi
        waitfor[$service]=$!
    done

    for service in ${processes[@]}
    do
        echo -n "$service..."
        wait ${waitfor[$service]}
        ret=$?

        echo -e -n "\b\b\b"

        if [ $ret -ne 0 ]
        then
            echo " KO"
            exit 1
        else
            echo -n ", "
        fi
    done

    echo -e "\b\b   "
}

function do_start_backend(){
    echo -n "Starting backend: "
    
    do_cmd start BACKEND[@]
}

function do_start_middleware(){
    echo -n "Starting middleware: "

    do_cmd start MIDDLEWARE[@]
}

function do_start_frontend(){
    echo -n "Starting frontend: "

    do_cmd start FRONTEND[@]
}

function do_start(){
    do_start_backend || exit 1
    do_start_middleware || exit 1
    do_start_frontend || exit 1
}

function do_stop_backend(){
    echo -n "Stopping backend: "
    
    reversed=("`reverse BACKEND[@]`")
    do_cmd stop reversed[@]
}

function do_stop_middleware(){
    echo -n "Stopping middleware: "

    reversed=("`reverse MIDDLEWARE[@]`")
    do_cmd stop reversed[@]
}

function do_stop_frontend(){
    echo -n "Stopping frontend: "

    reversed=("`reverse FRONTEND[@]`")
    do_cmd stop reversed[@]
}

function do_stop(){
    do_stop_frontend || exit 1
    do_stop_middleware || exit 1
    do_stop_backend || exit 1

    supervisorctl shutdown || exit 1
}

function do_restart(){
    do_stop || exit 1
    do_start || exit 1
}

function do_status(){
    processes=()
    processes+=(${BACKEND[@]})
    processes+=(${MIDDLEWARE[@]})
    processes+=(${FRONTEND[@]})

    for process in ${processes[@]}
    do
        process=${process//\*}
        service $process status
    done
}

case "$1" in
    start) do_start ;;
    stop) do_stop ;;
    restart) do_restart ;;
    status) do_status ;;

    *)
        echo "Usage: hypcontrol start|stop|restart|status"
        exit 1
        ;;
esac

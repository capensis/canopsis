#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Produce a diagnostic for needed servers (mongodb, influx...)

Usage (with canopsis account):
> diag
"""


import unittest

from canopsis.common.amqp import get_default_connection as DefaultAMQPConnection
from canopsis.common.mongo_store import MongoStore
from canopsis.common.collection import MongoCollection
from canopsis.influxdb.core import InfluxDBStorage


class CpsDiagTest(unittest.TestCase):

    def print_exc(self, exc):
        self.fail('{}'.format(exc))

    def test_mongo_connection(self):
        try:
            store = MongoStore.get_default()
            coll = MongoCollection(store.get_collection('cpsdiag__'))
            coll.remove()
            coll.insert({'_id': 'diag', 'success': True})
            r = list(coll.find({'_id': 'diag'}))

            self.assertEqual(len(r), 1)

            coll.remove()
        except Exception as exc:
            self.print_exc(exc)

    def test_influx_connection(self):
        try:
            store = InfluxDBStorage()
        except Exception as exc:
            self.print_exc(exc)

    def test_amqp_connection(self):
        try:
            bus = DefaultAMQPConnection()
            bus.connect()
        except Exception as exc:
            self.print_exc(exc)


def main():
    unittest.main()

if __name__ == '__main__':
    main()

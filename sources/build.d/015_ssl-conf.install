NAME="ssl-conf"


function init_ssl_dir() {
    echo
    echo "===> Install configuration files..."
    echo

    launch_cmd 1 "mkdir -p $PREFIX/etc/ssl/openssl/certsdb"
    launch_cmd 1 "mkdir -p $PREFIX/etc/ssl/crl"

    install_conf "ssl/openssl.cnf"

    launch_cmd 1 "touch $PREFIX/etc/ssl/openssl/index.txt"
    launch_cmd 1 "echo 'unique_subject = no' > $PREFIX/etc/ssl/openssl/index.txt.attr"
    launch_cmd 1 "echo '01' > $PREFIX/etc/ssl/openssl/serial"

    chown -R $HUSER:$HGROUP $PREFIX/etc/ssl || exit 1

    echo
    echo "===> Generating SSL files..."
    echo

    launch_cmd 1 "openssl dhparam -outform PEM -out $PREFIX/etc/ssl/dhfile.pem $SSL_KEY_BITS"
}

function install_certificates() {
    if [ ! -z $SSL_CA_PATH ] && [ -f $SSL_CA_PATH ] && [ ! -z $SSL_CAKEY_PATH ] && [ -f $SSL_CAKEY_PATH ]
    then
        echo
        echo "===> Installing CA..."
        echo

        cp -v $SSL_CA_PATH $PREFIX/etc/ssl/ca.pem || exit 1
        chown -v $HUSER:$HGROUP $PREFIX/etc/ssl/ca.pem || exit 1
        cp $SSL_CAKEY_PATH $PREFIX/etc/ssl/cakey.pem || exit 1
        chown -v $HUSER:$HGROUP $PREFIX/etc/ssl/cakey.pem || exit 1
    else
        echo
        echo "===> Generating CA..."
        echo

        OPENSSL_ARGS="-new -x509 -extensions ca_gen"
        OPENSSL_ARGS="$OPENSSL_ARGS -config $PREFIX/etc/ssl/openssl.cnf"
        OPENSSL_ARGS="$OPENSSL_ARGS -newkey rsa:$SSL_KEY_BITS"
        OPENSSL_ARGS="$OPENSSL_ARGS -keyout $PREFIX/etc/ssl/cakey.pem"
        OPENSSL_ARGS="$OPENSSL_ARGS -out $PREFIX/etc/ssl/ca.pem"

        if [ ! -z $SSL_KEY_PASS ]
        then
            OPENSSL_ARGS="$OPENSSL_ARGS -passout pass:$SSL_KEY_PASS"
        fi

        launch_cmd 1 "openssl req $OPENSSL_ARGS"
    fi

    echo
    echo "===> Generating server certificate..."
    echo

    OPENSSL_ARGS="-new -nodes"
    OPENSSL_ARGS="$OPENSSL_ARGS -config $PREFIX/etc/ssl/openssl.cnf"
    OPENSSL_ARGS="$OPENSSL_ARGS -keyout $PREFIX/etc/ssl/key.pem"
    OPENSSL_ARGS="$OPENSSL_ARGS -newkey rsa:$SSL_KEY_BITS"
    OPENSSL_ARGS="$OPENSSL_ARGS -out $PREFIX/etc/ssl/openssl/cert.csr"

    launch_cmd 1 "openssl req $OPENSSL_ARGS"

    echo
    echo "===> Signing server certificate..."
    echo

    OPENSSL_ARGS="-batch -out $PREFIX/etc/ssl/cert.pem"
    OPENSSL_ARGS="$OPENSSL_ARGS -config $PREFIX/etc/ssl/openssl.cnf"
    OPENSSL_ARGS="$OPENSSL_ARGS -cert $PREFIX/etc/ssl/ca.pem"
    OPENSSL_ARGS="$OPENSSL_ARGS -infiles $PREFIX/etc/ssl/openssl/cert.csr"

    if [ ! -z $SSL_KEY_PASS ]
    then
        OPENSSL_ARGS="-passin pass:$SSL_KEY_PASS $OPENSSL_ARGS"
    fi

    launch_cmd 1 "openssl ca $OPENSSL_ARGS"

    echo
    echo "===> Generate bundles..."
    echo
    
    for i in ca cakey
    do
        cat $PREFIX/etc/ssl/$i.pem >> $PREFIX/etc/ssl/cabundle.pem
    done
    
    for i in cert key
    do
        cat $PREFIX/etc/ssl/$i.pem >> $PREFIX/etc/ssl/bundle.pem
    done
}

function fix_ssl_permissions() {
    echo
    echo "===> Fix permissions..."
    echo

    find $PREFIX/etc/ssl -type f | while read f
    do
        chmod 600 $f || exit 1
    done

    chown -R $HUSER:$HGROUP $PREFIX/etc/ssl || exit 1
}

function install() {
    init_ssl_dir || exit 1
    install_certificates || exit 1
    fix_ssl_permissions || exit 1
}

function update() {
    serial=$(cat $PREFIX/etc/ssl/openssl/serial)
    let "serial = serial + 1"
    launch_cmd 1 "echo '$serial' >> $PREFIX/etc/ssl/openssl/serial"

    install_certificates || exit 1
    fix_ssl_permissions || exit 1
}

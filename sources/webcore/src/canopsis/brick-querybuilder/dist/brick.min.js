Ember.Application.initializer({name:"component-querybuilder",initialize:function(e,r){var t=e.lookupFactory("utility:i18n"),n=Ember.set,o=Ember.get,i=Ember.String.loc,l=function(e){var r,t=e.split(" "),n={component:[],resource:[],name:[]};for(r=0;r<t.length;r++){var o=t[r];if(""!==o){var i=o.slice(3)||null;0===o.indexOf("co:")?n.component.push(i):0===o.indexOf("re:")?n.resource.push(i):0===o.indexOf("me:")?n.name.push(i):n.name.push(o)}}var l={$and:[]},a={component:{$or:[]},resource:{$or:[]},name:{$or:[]}};for(var u in a){for(r=0;r<n[u].length;r++){var c={},s=n[u][r];c[u]=null!==s?{$regex:s}:null,a[u].$or.push(c)}var d=a[u].$or.length;1===d&&(a[u]=a[u].$or[0]),d>0&&l.$and.push(a[u])}return 1===l.$and.length&&(l=l.$and[0]),l},a=function(e){for(var r=[],t=Ember.keys(e),n=0;n<t.length;n++){var o=t[n];if(Ember.isArray(e[o]))for(var i=0;i<e[o].length;i++)r=$.unique(r.concat(a(e[o][i])));else"object"===e[o]?(r.push(o),r=$.unique(r.concat(a(e[o])))):r.push(o)}return r=$(r).not(["$eq","$regex","$ne","$gt","$gte","$lt","$lte","$in","$ne","$nin","$exists","$type","$mod","$where","$text"]).get()},u=function(e){if(null==e)return e;var r=Ember.keys(e);if(void 0!==e.$eq)return e.$eq;for(var t=0;t<r.length;t++){var n=r[t];if(Ember.isArray(e[n])){for(var o=[],i=0;i<e[n].length;i++)o.pushObject(u(e[n][i]));e[n]=o}else"object"==typeof e[n]&&(e[n]=u(e[n]))}return e},c=Ember.Component.extend({viewTabColumns:[{name:"connector",title:"connector"},{name:"connector_name",title:"connector_name"},{name:"component",title:"component"},{name:"resource",title:"resource"}],selectionTabColumns:[{name:"connector",title:"connector"},{name:"connector_name",title:"connector_name"},{name:"component",title:"component"},{name:"resource",title:"resource"},{action:"select",actionAll:!0===o(this,"multiselect")?"selectAll":void 0,title:new Ember.Handlebars.SafeString('<span class="glyphicon glyphicon-plus-sign"></span>'),style:"text-align: center;"}],helpModal:{title:i("Syntax"),content:["<ul>","<li><code>co:regex</code> : ",i("look for a component"),"</li>","<li><code>re:regex</code> : ",i("look for a resource"),"</li>","<li><code>me:regex</code> : ",i("look for a metric"),"(<code>me:</code>",i(" isn't needed for this one"),")</li>","<li>",i("combine all of them to improve your search")," : <code>co:regex re:regex me:regex</code></li>","<li><code>co:</code>, <code>re:</code>, <code>me:</code> : ",i("look for non-existant field"),"</li>","</ul>"].join("")},classNames:["query-builder"],selectionTabSearch:null,filterValue:"",actions:{search:function(e){if(e){var r=l(e);n(this,"selectionTabSearch",JSON.stringify(r))}else n(this,"selectionTabSearch",null)},select:function(e){var r=o(this,"filterValue")||"{}";r=JSON.parse(r),r||(r={}),r.$or||(r.$or=[]),r.$and&&(r.$or.pushObject({$and:r.$and}),r={$or:r.$or});var t=o(e,"id");r.$or.findBy("_id",t)||r.$or.pushObject({_id:o(e,"id")}),this.$(".builder").queryBuilder("setRulesFromMongo",r),n(this,"filterValue",JSON.stringify(r,null,2))}},didInsertElement:function(){for(var e=[],r=window.schemasRegistry.getByName("event").schema,n=0;n<r.categories.length;n++)for(var o=r.categories[n].title,i=0;i<r.categories[n].keys.length;i++){var l=r.categories[n].keys[i],c=l.split("."),s=r;$.each(c,function(e,r){s=void 0!==s&&void 0!==s.properties?s.properties[r]:void 0}),void 0===s&&(s={type:"string"});var d=l,p={id:d,label:d,type:s.type,optgroup:o};"boolean"===s.type&&(p.input="radio",p.values={true:"True",false:"False"}),"number"===s.type&&(p.type="integer"),"object"!==s.type&&"array"!==s.type&&e.pushObject(p)}e.pushObject({id:"_id",label:"_id",type:"string",optgroup:"system"});var f=[];for(n=0;n<e.length;n++)f.push(e[n].id);var m=this.get("filterValue")||void 0;if(m&&"{}"!==m){m=JSON.parse(m),m=u(m);var g=a(m);for(g=$(g).not(f).get(),n=0;n<g.length;n++){for(var h=!1,y=0;!h&&y<e.length;)e[y].id==g[n]&&(h=!0),y++;h||e.pushObject({id:g[n],label:g[n],type:"string",optgroup:"custom"})}}this.$().find(".builder").queryBuilder({filters:e,lang_code:t.lang,plugins:["key-editable-select"]}),m&&"{}"!==m&&this.$().find(".builder").queryBuilder("setRulesFromMongo",m);var b=this;this.$().find(".builder").on("afterUpdateRuleFilter.queryBuilder afterDeleteGroup.queryBuilder afterAddRule.queryBuilder afterDeleteRule.queryBuilder afterUpdateRuleValue.queryBuilder afterUpdateRuleOperator.queryBuilder afterUpdateGroupCondition.queryBuilder",function(){var e=b.$().find(".builder").queryBuilder("getMongo");$.isEmptyObject(e)||b.set("filterValue",JSON.stringify(e,null,2))}),this.$(".btn-reset").on("click",function(){b.$().find(".builder").queryBuilder("reset"),b.set("filterValue","{}")})}});r.register("component:component-querybuilder",c)}});
//# sourceMappingURL=dist/brick.map.js
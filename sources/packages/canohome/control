#!/bin/bash

NAME="canohome"
VERSION=0.5
RELEASE=1
DESCRIPTION=""
REQUIRES=""

NO_ARCH=true
NO_DIST=true
NO_DISTVERS=true

function pre_install(){
	echo "Pre-install $NAME $VERSION-$RELEASE ..."
	echo " + Make home directories ..."
	mkdir -p $PREFIX $PREFIX/etc
	check_code $?

	echo " + Gen UUID"
	if [ -e $PREFIX/etc/uuid ]; then
		echo "   + Allready exist."
	else
		echo "UUID=`uuidgen`" > $PREFIX/etc/uuid
		check_code $?
	fi
	chmod 600 $PREFIX/etc/uuid

	echo " + Create Canopsis user ('$HUSER')..."
	groupadd $HGROUP &> /dev/null || true
	id canopsis &> /dev/null
	if [ $? -ne 0 ]; then
		userdel $HUSER &> /dev/null || true
		useradd -s /bin/bash -d $PREFIX -g $HGROUP $HUSER &> /dev/null
		usermod -a -G nagios $HUSER &> /dev/null || true
	else
		echo "   + Allready exist, set home and group ..."
		usermod -d $PREFIX $HUSER &> /dev/null || true
		usermod -g $HGROUP $HUSER &> /dev/null || true
	fi
}

function post_install(){
	echo "Post-install $NAME $VERSION-$RELEASE ..."
	if [ ! -e $PREFIX/.ssh/id_dsa ]; then
		echo " + Generate ssh keys ..."
		ssh-keygen -N '' -q -f $PREFIX/.ssh/id_dsa
	fi

	export PATH="$PREFIX/bin/:$PATH"
	check_code $?

	mkdir -p $PREFIX/var/log
	check_code $?

	echo " + Fix permissions..."
	chown $HUSER:$HGROUP $PREFIX
	chown $HUSER:$HGROUP -R $PREFIX/*
	check_code $?
}

function pre_remove(){
	echo "Pre-remove $NAME $VERSION-$RELEASE ..."
	check_code $?
}

function post_remove(){
	echo "Post-remove $NAME $VERSION-$RELEASE ..."
	echo " + Del user $HUSER ..."
	userdel $HUSER || true
	check_code $?
}

function pre_update(){
	echo "Pre-update $NAME $VERSION-$RELEASE ..."
	check_code $?
}

function post_update(){
	echo "Post-update $NAME $VERSION-$RELEASE ..."
	check_code $?
}

function purge(){
	echo "Purge $NAME $VERSION-$RELEASE ..."
	echo " + Remove $PREFIX ..."
	rm -Rf $PREFIX
	check_code $?
}
